#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqToSQLModel
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [System.Data.Linq.Mapping.DatabaseAttribute(Name = "SIOTS_HHZXDB")]
    public partial class SIOTSDB_HHZXDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertCodeMaster_cmt(CodeMaster_cmt instance);
        partial void UpdateCodeMaster_cmt(CodeMaster_cmt instance);
        partial void DeleteCodeMaster_cmt(CodeMaster_cmt instance);
        partial void InsertConsumeCardMaster_ccm(ConsumeCardMaster_ccm instance);
        partial void UpdateConsumeCardMaster_ccm(ConsumeCardMaster_ccm instance);
        partial void DeleteConsumeCardMaster_ccm(ConsumeCardMaster_ccm instance);
        partial void InsertDepartmentMaster_dpm(DepartmentMaster_dpm instance);
        partial void UpdateDepartmentMaster_dpm(DepartmentMaster_dpm instance);
        partial void DeleteDepartmentMaster_dpm(DepartmentMaster_dpm instance);
        partial void InsertLogDetail_lgd(LogDetail_lgd instance);
        partial void UpdateLogDetail_lgd(LogDetail_lgd instance);
        partial void DeleteLogDetail_lgd(LogDetail_lgd instance);
        partial void InsertSys_FormPurview_frp(Sys_FormPurview_frp instance);
        partial void UpdateSys_FormPurview_frp(Sys_FormPurview_frp instance);
        partial void DeleteSys_FormPurview_frp(Sys_FormPurview_frp instance);
        partial void InsertSys_FunctionMaster_fum(Sys_FunctionMaster_fum instance);
        partial void UpdateSys_FunctionMaster_fum(Sys_FunctionMaster_fum instance);
        partial void DeleteSys_FunctionMaster_fum(Sys_FunctionMaster_fum instance);
        partial void InsertSys_RecordLockRegister_rlr(Sys_RecordLockRegister_rlr instance);
        partial void UpdateSys_RecordLockRegister_rlr(Sys_RecordLockRegister_rlr instance);
        partial void DeleteSys_RecordLockRegister_rlr(Sys_RecordLockRegister_rlr instance);
        partial void InsertSys_RoleMaster_rlm(Sys_RoleMaster_rlm instance);
        partial void UpdateSys_RoleMaster_rlm(Sys_RoleMaster_rlm instance);
        partial void DeleteSys_RoleMaster_rlm(Sys_RoleMaster_rlm instance);
        partial void InsertSys_UserRoles_usr(Sys_UserRoles_usr instance);
        partial void UpdateSys_UserRoles_usr(Sys_UserRoles_usr instance);
        partial void DeleteSys_UserRoles_usr(Sys_UserRoles_usr instance);
        partial void InsertClassMaster_csm(ClassMaster_csm instance);
        partial void UpdateClassMaster_csm(ClassMaster_csm instance);
        partial void DeleteClassMaster_csm(ClassMaster_csm instance);
        partial void InsertUserCardPair_ucp(UserCardPair_ucp instance);
        partial void UpdateUserCardPair_ucp(UserCardPair_ucp instance);
        partial void DeleteUserCardPair_ucp(UserCardPair_ucp instance);
        partial void InsertCardUserAccount_cua(CardUserAccount_cua instance);
        partial void UpdateCardUserAccount_cua(CardUserAccount_cua instance);
        partial void DeleteCardUserAccount_cua(CardUserAccount_cua instance);
        partial void InsertChangeClassRecord_ccr(ChangeClassRecord_ccr instance);
        partial void UpdateChangeClassRecord_ccr(ChangeClassRecord_ccr instance);
        partial void DeleteChangeClassRecord_ccr(ChangeClassRecord_ccr instance);
        partial void InsertGradeMaster_gdm(GradeMaster_gdm instance);
        partial void UpdateGradeMaster_gdm(GradeMaster_gdm instance);
        partial void DeleteGradeMaster_gdm(GradeMaster_gdm instance);
        partial void InsertSystemAccountDetail_sad(SystemAccountDetail_sad instance);
        partial void UpdateSystemAccountDetail_sad(SystemAccountDetail_sad instance);
        partial void DeleteSystemAccountDetail_sad(SystemAccountDetail_sad instance);
        partial void InsertSys_UserPurview_usp(Sys_UserPurview_usp instance);
        partial void UpdateSys_UserPurview_usp(Sys_UserPurview_usp instance);
        partial void DeleteSys_UserPurview_usp(Sys_UserPurview_usp instance);
        partial void InsertPaymentUDMealState_pms(PaymentUDMealState_pms instance);
        partial void UpdatePaymentUDMealState_pms(PaymentUDMealState_pms instance);
        partial void DeletePaymentUDMealState_pms(PaymentUDMealState_pms instance);
        partial void InsertPaymentUDGeneralSetting_pus(PaymentUDGeneralSetting_pus instance);
        partial void UpdatePaymentUDGeneralSetting_pus(PaymentUDGeneralSetting_pus instance);
        partial void DeletePaymentUDGeneralSetting_pus(PaymentUDGeneralSetting_pus instance);
        partial void InsertSys_UserMaster_usm(Sys_UserMaster_usm instance);
        partial void UpdateSys_UserMaster_usm(Sys_UserMaster_usm instance);
        partial void DeleteSys_UserMaster_usm(Sys_UserMaster_usm instance);
        partial void InsertSourceConsumeRecord_scr(SourceConsumeRecord_scr instance);
        partial void UpdateSourceConsumeRecord_scr(SourceConsumeRecord_scr instance);
        partial void DeleteSourceConsumeRecord_scr(SourceConsumeRecord_scr instance);
        partial void InsertConsumeMachineMaster_cmm(ConsumeMachineMaster_cmm instance);
        partial void UpdateConsumeMachineMaster_cmm(ConsumeMachineMaster_cmm instance);
        partial void DeleteConsumeMachineMaster_cmm(ConsumeMachineMaster_cmm instance);
        partial void InsertPreRechargeRecord_prr(PreRechargeRecord_prr instance);
        partial void UpdatePreRechargeRecord_prr(PreRechargeRecord_prr instance);
        partial void DeletePreRechargeRecord_prr(PreRechargeRecord_prr instance);
        partial void InsertRechargeRecord_rcr(RechargeRecord_rcr instance);
        partial void UpdateRechargeRecord_rcr(RechargeRecord_rcr instance);
        partial void DeleteRechargeRecord_rcr(RechargeRecord_rcr instance);
        partial void InsertConsumeRecord_csr(ConsumeRecord_csr instance);
        partial void UpdateConsumeRecord_csr(ConsumeRecord_csr instance);
        partial void DeleteConsumeRecord_csr(ConsumeRecord_csr instance);
        partial void InsertMealBookingHistory_mbh(MealBookingHistory_mbh instance);
        partial void UpdateMealBookingHistory_mbh(MealBookingHistory_mbh instance);
        partial void DeleteMealBookingHistory_mbh(MealBookingHistory_mbh instance);
        partial void InsertTimeIntervalMaster_tim(TimeIntervalMaster_tim instance);
        partial void UpdateTimeIntervalMaster_tim(TimeIntervalMaster_tim instance);
        partial void DeleteTimeIntervalMaster_tim(TimeIntervalMaster_tim instance);
        partial void InsertBlacklistChangeRecord_blc(BlacklistChangeRecord_blc instance);
        partial void UpdateBlacklistChangeRecord_blc(BlacklistChangeRecord_blc instance);
        partial void DeleteBlacklistChangeRecord_blc(BlacklistChangeRecord_blc instance);
        partial void InsertSys_FormMaster_fom(Sys_FormMaster_fom instance);
        partial void UpdateSys_FormMaster_fom(Sys_FormMaster_fom instance);
        partial void DeleteSys_FormMaster_fom(Sys_FormMaster_fom instance);
        partial void InsertPreConsumeRecord_pcs(PreConsumeRecord_pcs instance);
        partial void UpdatePreConsumeRecord_pcs(PreConsumeRecord_pcs instance);
        partial void DeletePreConsumeRecord_pcs(PreConsumeRecord_pcs instance);
        partial void InsertCardUserAccountDetail_cuad(CardUserAccountDetail_cuad instance);
        partial void UpdateCardUserAccountDetail_cuad(CardUserAccountDetail_cuad instance);
        partial void DeleteCardUserAccountDetail_cuad(CardUserAccountDetail_cuad instance);
        partial void InsertCardUserMaster_cus(CardUserMaster_cus instance);
        partial void UpdateCardUserMaster_cus(CardUserMaster_cus instance);
        partial void DeleteCardUserMaster_cus(CardUserMaster_cus instance);
        partial void InsertPayRecord_prd(PayRecord_prd instance);
        partial void UpdatePayRecord_prd(PayRecord_prd instance);
        partial void DeletePayRecord_prd(PayRecord_prd instance);
        #endregion

        public SIOTSDB_HHZXDataContext() :
            base(global::LinqToSQLModel.Properties.Settings.Default.SIOTS_HHZXDBConnectionString, mappingSource)
        {
            OnCreated();
        }

        public SIOTSDB_HHZXDataContext(string connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public SIOTSDB_HHZXDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public SIOTSDB_HHZXDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public SIOTSDB_HHZXDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<CodeMaster_cmt> CodeMaster_cmt
        {
            get
            {
                return this.GetTable<CodeMaster_cmt>();
            }
        }

        public System.Data.Linq.Table<ConsumeCardMaster_ccm> ConsumeCardMaster_ccm
        {
            get
            {
                return this.GetTable<ConsumeCardMaster_ccm>();
            }
        }

        public System.Data.Linq.Table<DepartmentMaster_dpm> DepartmentMaster_dpm
        {
            get
            {
                return this.GetTable<DepartmentMaster_dpm>();
            }
        }

        public System.Data.Linq.Table<LogDetail_lgd> LogDetail_lgd
        {
            get
            {
                return this.GetTable<LogDetail_lgd>();
            }
        }

        public System.Data.Linq.Table<Sys_FormPurview_frp> Sys_FormPurview_frp
        {
            get
            {
                return this.GetTable<Sys_FormPurview_frp>();
            }
        }

        public System.Data.Linq.Table<Sys_FunctionMaster_fum> Sys_FunctionMaster_fum
        {
            get
            {
                return this.GetTable<Sys_FunctionMaster_fum>();
            }
        }

        public System.Data.Linq.Table<Sys_RecordLockRegister_rlr> Sys_RecordLockRegister_rlr
        {
            get
            {
                return this.GetTable<Sys_RecordLockRegister_rlr>();
            }
        }

        public System.Data.Linq.Table<Sys_RoleMaster_rlm> Sys_RoleMaster_rlm
        {
            get
            {
                return this.GetTable<Sys_RoleMaster_rlm>();
            }
        }

        public System.Data.Linq.Table<Sys_UserRoles_usr> Sys_UserRoles_usr
        {
            get
            {
                return this.GetTable<Sys_UserRoles_usr>();
            }
        }

        public System.Data.Linq.Table<ClassMaster_csm> ClassMaster_csm
        {
            get
            {
                return this.GetTable<ClassMaster_csm>();
            }
        }

        public System.Data.Linq.Table<UserCardPair_ucp> UserCardPair_ucp
        {
            get
            {
                return this.GetTable<UserCardPair_ucp>();
            }
        }

        public System.Data.Linq.Table<CardUserAccount_cua> CardUserAccount_cua
        {
            get
            {
                return this.GetTable<CardUserAccount_cua>();
            }
        }

        public System.Data.Linq.Table<ChangeClassRecord_ccr> ChangeClassRecord_ccr
        {
            get
            {
                return this.GetTable<ChangeClassRecord_ccr>();
            }
        }

        public System.Data.Linq.Table<GradeMaster_gdm> GradeMaster_gdm
        {
            get
            {
                return this.GetTable<GradeMaster_gdm>();
            }
        }

        public System.Data.Linq.Table<SystemAccountDetail_sad> SystemAccountDetail_sad
        {
            get
            {
                return this.GetTable<SystemAccountDetail_sad>();
            }
        }

        public System.Data.Linq.Table<Sys_UserPurview_usp> Sys_UserPurview_usp
        {
            get
            {
                return this.GetTable<Sys_UserPurview_usp>();
            }
        }

        public System.Data.Linq.Table<PaymentUDMealState_pms> PaymentUDMealState_pms
        {
            get
            {
                return this.GetTable<PaymentUDMealState_pms>();
            }
        }

        public System.Data.Linq.Table<PaymentUDGeneralSetting_pus> PaymentUDGeneralSetting_pus
        {
            get
            {
                return this.GetTable<PaymentUDGeneralSetting_pus>();
            }
        }

        public System.Data.Linq.Table<Sys_UserMaster_usm> Sys_UserMaster_usm
        {
            get
            {
                return this.GetTable<Sys_UserMaster_usm>();
            }
        }

        public System.Data.Linq.Table<SourceConsumeRecord_scr> SourceConsumeRecord_scr
        {
            get
            {
                return this.GetTable<SourceConsumeRecord_scr>();
            }
        }

        public System.Data.Linq.Table<ConsumeMachineMaster_cmm> ConsumeMachineMaster_cmm
        {
            get
            {
                return this.GetTable<ConsumeMachineMaster_cmm>();
            }
        }

        public System.Data.Linq.Table<PreRechargeRecord_prr> PreRechargeRecord_prr
        {
            get
            {
                return this.GetTable<PreRechargeRecord_prr>();
            }
        }

        public System.Data.Linq.Table<RechargeRecord_rcr> RechargeRecord_rcr
        {
            get
            {
                return this.GetTable<RechargeRecord_rcr>();
            }
        }

        public System.Data.Linq.Table<ConsumeRecord_csr> ConsumeRecord_csr
        {
            get
            {
                return this.GetTable<ConsumeRecord_csr>();
            }
        }

        public System.Data.Linq.Table<MealBookingHistory_mbh> MealBookingHistory_mbh
        {
            get
            {
                return this.GetTable<MealBookingHistory_mbh>();
            }
        }

        public System.Data.Linq.Table<TimeIntervalMaster_tim> TimeIntervalMaster_tim
        {
            get
            {
                return this.GetTable<TimeIntervalMaster_tim>();
            }
        }

        public System.Data.Linq.Table<BlacklistChangeRecord_blc> BlacklistChangeRecord_blc
        {
            get
            {
                return this.GetTable<BlacklistChangeRecord_blc>();
            }
        }

        public System.Data.Linq.Table<Sys_FormMaster_fom> Sys_FormMaster_fom
        {
            get
            {
                return this.GetTable<Sys_FormMaster_fom>();
            }
        }

        public System.Data.Linq.Table<PreConsumeRecord_pcs> PreConsumeRecord_pcs
        {
            get
            {
                return this.GetTable<PreConsumeRecord_pcs>();
            }
        }

        public System.Data.Linq.Table<CardUserAccountDetail_cuad> CardUserAccountDetail_cuad
        {
            get
            {
                return this.GetTable<CardUserAccountDetail_cuad>();
            }
        }

        public System.Data.Linq.Table<CardUserMaster_cus> CardUserMaster_cus
        {
            get
            {
                return this.GetTable<CardUserMaster_cus>();
            }
        }

        public System.Data.Linq.Table<PayRecord_prd> PayRecord_prd
        {
            get
            {
                return this.GetTable<PayRecord_prd>();
            }
        }

        [Function(Name = "dbo.usp_GetAccoumtBalanceReport")]
        public int usp_GetAccoumtBalanceReport([Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dTimeFrom, [Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> dTimeTo, [Parameter(Name = "GradeID", DbType = "UniqueIdentifier")] System.Nullable<System.Guid> gradeID, [Parameter(Name = "ClassID", DbType = "UniqueIdentifier")] System.Nullable<System.Guid> classID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dTimeFrom, dTimeTo, gradeID, classID);
            return ((int)(result.ReturnValue));
        }

        [Function(Name = "dbo.usp_GetBookingMealReport")]
        public ISingleResult<usp_GetBookingMealReport_个结果> usp_GetBookingMealReport([Parameter(DbType = "DateTime")] System.Nullable<System.DateTime> datetime, [Parameter(Name = "GradeID", DbType = "UniqueIdentifier")] System.Nullable<System.Guid> gradeID, [Parameter(Name = "ClassID", DbType = "UniqueIdentifier")] System.Nullable<System.Guid> classID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), datetime, gradeID, classID);
            return ((ISingleResult<usp_GetBookingMealReport_个结果>)(result.ReturnValue));
        }
    }

    [Table(Name = "dbo.CodeMaster_cmt")]
    public partial class CodeMaster_cmt : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _cmt_iRecordID;

        private string _cmt_cKey1;

        private string _cmt_cKey2;

        private string _cmt_cValue;

        private decimal _cmt_fNumber;

        private string _cmt_cRemark;

        private string _cmt_cRemark2;

        private string _cmt_cAdd;

        private System.Nullable<System.DateTime> _cmt_dAddDate;

        private string _cmt_cLast;

        private System.Nullable<System.DateTime> _cmt_dLastDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Oncmt_iRecordIDChanging(int value);
        partial void Oncmt_iRecordIDChanged();
        partial void Oncmt_cKey1Changing(string value);
        partial void Oncmt_cKey1Changed();
        partial void Oncmt_cKey2Changing(string value);
        partial void Oncmt_cKey2Changed();
        partial void Oncmt_cValueChanging(string value);
        partial void Oncmt_cValueChanged();
        partial void Oncmt_fNumberChanging(decimal value);
        partial void Oncmt_fNumberChanged();
        partial void Oncmt_cRemarkChanging(string value);
        partial void Oncmt_cRemarkChanged();
        partial void Oncmt_cRemark2Changing(string value);
        partial void Oncmt_cRemark2Changed();
        partial void Oncmt_cAddChanging(string value);
        partial void Oncmt_cAddChanged();
        partial void Oncmt_dAddDateChanging(System.Nullable<System.DateTime> value);
        partial void Oncmt_dAddDateChanged();
        partial void Oncmt_cLastChanging(string value);
        partial void Oncmt_cLastChanged();
        partial void Oncmt_dLastDateChanging(System.Nullable<System.DateTime> value);
        partial void Oncmt_dLastDateChanged();
        #endregion

        public CodeMaster_cmt()
        {
            OnCreated();
        }

        [Column(Storage = "_cmt_iRecordID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int cmt_iRecordID
        {
            get
            {
                return this._cmt_iRecordID;
            }
            set
            {
                if ((this._cmt_iRecordID != value))
                {
                    this.Oncmt_iRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._cmt_iRecordID = value;
                    this.SendPropertyChanged("cmt_iRecordID");
                    this.Oncmt_iRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_cmt_cKey1", DbType = "VarChar(30) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string cmt_cKey1
        {
            get
            {
                return this._cmt_cKey1;
            }
            set
            {
                if ((this._cmt_cKey1 != value))
                {
                    this.Oncmt_cKey1Changing(value);
                    this.SendPropertyChanging();
                    this._cmt_cKey1 = value;
                    this.SendPropertyChanged("cmt_cKey1");
                    this.Oncmt_cKey1Changed();
                }
            }
        }

        [Column(Storage = "_cmt_cKey2", DbType = "VarChar(30) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string cmt_cKey2
        {
            get
            {
                return this._cmt_cKey2;
            }
            set
            {
                if ((this._cmt_cKey2 != value))
                {
                    this.Oncmt_cKey2Changing(value);
                    this.SendPropertyChanging();
                    this._cmt_cKey2 = value;
                    this.SendPropertyChanged("cmt_cKey2");
                    this.Oncmt_cKey2Changed();
                }
            }
        }

        [Column(Storage = "_cmt_cValue", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string cmt_cValue
        {
            get
            {
                return this._cmt_cValue;
            }
            set
            {
                if ((this._cmt_cValue != value))
                {
                    this.Oncmt_cValueChanging(value);
                    this.SendPropertyChanging();
                    this._cmt_cValue = value;
                    this.SendPropertyChanged("cmt_cValue");
                    this.Oncmt_cValueChanged();
                }
            }
        }

        [Column(Storage = "_cmt_fNumber", DbType = "Decimal(18,2) NOT NULL")]
        public decimal cmt_fNumber
        {
            get
            {
                return this._cmt_fNumber;
            }
            set
            {
                if ((this._cmt_fNumber != value))
                {
                    this.Oncmt_fNumberChanging(value);
                    this.SendPropertyChanging();
                    this._cmt_fNumber = value;
                    this.SendPropertyChanged("cmt_fNumber");
                    this.Oncmt_fNumberChanged();
                }
            }
        }

        [Column(Storage = "_cmt_cRemark", DbType = "NVarChar(200) NOT NULL", CanBeNull = false)]
        public string cmt_cRemark
        {
            get
            {
                return this._cmt_cRemark;
            }
            set
            {
                if ((this._cmt_cRemark != value))
                {
                    this.Oncmt_cRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._cmt_cRemark = value;
                    this.SendPropertyChanged("cmt_cRemark");
                    this.Oncmt_cRemarkChanged();
                }
            }
        }

        [Column(Storage = "_cmt_cRemark2", DbType = "NVarChar(200) NOT NULL", CanBeNull = false)]
        public string cmt_cRemark2
        {
            get
            {
                return this._cmt_cRemark2;
            }
            set
            {
                if ((this._cmt_cRemark2 != value))
                {
                    this.Oncmt_cRemark2Changing(value);
                    this.SendPropertyChanging();
                    this._cmt_cRemark2 = value;
                    this.SendPropertyChanged("cmt_cRemark2");
                    this.Oncmt_cRemark2Changed();
                }
            }
        }

        [Column(Storage = "_cmt_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string cmt_cAdd
        {
            get
            {
                return this._cmt_cAdd;
            }
            set
            {
                if ((this._cmt_cAdd != value))
                {
                    this.Oncmt_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._cmt_cAdd = value;
                    this.SendPropertyChanged("cmt_cAdd");
                    this.Oncmt_cAddChanged();
                }
            }
        }

        [Column(Storage = "_cmt_dAddDate", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> cmt_dAddDate
        {
            get
            {
                return this._cmt_dAddDate;
            }
            set
            {
                if ((this._cmt_dAddDate != value))
                {
                    this.Oncmt_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._cmt_dAddDate = value;
                    this.SendPropertyChanged("cmt_dAddDate");
                    this.Oncmt_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_cmt_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string cmt_cLast
        {
            get
            {
                return this._cmt_cLast;
            }
            set
            {
                if ((this._cmt_cLast != value))
                {
                    this.Oncmt_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._cmt_cLast = value;
                    this.SendPropertyChanged("cmt_cLast");
                    this.Oncmt_cLastChanged();
                }
            }
        }

        [Column(Storage = "_cmt_dLastDate", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> cmt_dLastDate
        {
            get
            {
                return this._cmt_dLastDate;
            }
            set
            {
                if ((this._cmt_dLastDate != value))
                {
                    this.Oncmt_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._cmt_dLastDate = value;
                    this.SendPropertyChanged("cmt_dLastDate");
                    this.Oncmt_dLastDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.ConsumeCardMaster_ccm")]
    public partial class ConsumeCardMaster_ccm : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _ccm_cCardID;

        private string _ccm_cCardState;

        private bool _ccm_lIsActive;

        private string _ccm_cAdd;

        private System.DateTime _ccm_dAddDate;

        private string _ccm_cLast;

        private System.DateTime _ccm_dLastDate;

        private EntitySet<UserCardPair_ucp> _UserCardPair_ucp;

        private EntitySet<RechargeRecord_rcr> _RechargeRecord_rcr;

        private EntitySet<ConsumeRecord_csr> _ConsumeRecord_csr;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onccm_cCardIDChanging(string value);
        partial void Onccm_cCardIDChanged();
        partial void Onccm_cCardStateChanging(string value);
        partial void Onccm_cCardStateChanged();
        partial void Onccm_lIsActiveChanging(bool value);
        partial void Onccm_lIsActiveChanged();
        partial void Onccm_cAddChanging(string value);
        partial void Onccm_cAddChanged();
        partial void Onccm_dAddDateChanging(System.DateTime value);
        partial void Onccm_dAddDateChanged();
        partial void Onccm_cLastChanging(string value);
        partial void Onccm_cLastChanged();
        partial void Onccm_dLastDateChanging(System.DateTime value);
        partial void Onccm_dLastDateChanged();
        #endregion

        public ConsumeCardMaster_ccm()
        {
            this._UserCardPair_ucp = new EntitySet<UserCardPair_ucp>(new Action<UserCardPair_ucp>(this.attach_UserCardPair_ucp), new Action<UserCardPair_ucp>(this.detach_UserCardPair_ucp));
            this._RechargeRecord_rcr = new EntitySet<RechargeRecord_rcr>(new Action<RechargeRecord_rcr>(this.attach_RechargeRecord_rcr), new Action<RechargeRecord_rcr>(this.detach_RechargeRecord_rcr));
            this._ConsumeRecord_csr = new EntitySet<ConsumeRecord_csr>(new Action<ConsumeRecord_csr>(this.attach_ConsumeRecord_csr), new Action<ConsumeRecord_csr>(this.detach_ConsumeRecord_csr));
            OnCreated();
        }

        [Column(Storage = "_ccm_cCardID", DbType = "VarChar(36) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string ccm_cCardID
        {
            get
            {
                return this._ccm_cCardID;
            }
            set
            {
                if ((this._ccm_cCardID != value))
                {
                    this.Onccm_cCardIDChanging(value);
                    this.SendPropertyChanging();
                    this._ccm_cCardID = value;
                    this.SendPropertyChanged("ccm_cCardID");
                    this.Onccm_cCardIDChanged();
                }
            }
        }

        [Column(Storage = "_ccm_cCardState", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string ccm_cCardState
        {
            get
            {
                return this._ccm_cCardState;
            }
            set
            {
                if ((this._ccm_cCardState != value))
                {
                    this.Onccm_cCardStateChanging(value);
                    this.SendPropertyChanging();
                    this._ccm_cCardState = value;
                    this.SendPropertyChanged("ccm_cCardState");
                    this.Onccm_cCardStateChanged();
                }
            }
        }

        [Column(Storage = "_ccm_lIsActive", DbType = "Bit NOT NULL")]
        public bool ccm_lIsActive
        {
            get
            {
                return this._ccm_lIsActive;
            }
            set
            {
                if ((this._ccm_lIsActive != value))
                {
                    this.Onccm_lIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._ccm_lIsActive = value;
                    this.SendPropertyChanged("ccm_lIsActive");
                    this.Onccm_lIsActiveChanged();
                }
            }
        }

        [Column(Storage = "_ccm_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string ccm_cAdd
        {
            get
            {
                return this._ccm_cAdd;
            }
            set
            {
                if ((this._ccm_cAdd != value))
                {
                    this.Onccm_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._ccm_cAdd = value;
                    this.SendPropertyChanged("ccm_cAdd");
                    this.Onccm_cAddChanged();
                }
            }
        }

        [Column(Storage = "_ccm_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime ccm_dAddDate
        {
            get
            {
                return this._ccm_dAddDate;
            }
            set
            {
                if ((this._ccm_dAddDate != value))
                {
                    this.Onccm_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._ccm_dAddDate = value;
                    this.SendPropertyChanged("ccm_dAddDate");
                    this.Onccm_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_ccm_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string ccm_cLast
        {
            get
            {
                return this._ccm_cLast;
            }
            set
            {
                if ((this._ccm_cLast != value))
                {
                    this.Onccm_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._ccm_cLast = value;
                    this.SendPropertyChanged("ccm_cLast");
                    this.Onccm_cLastChanged();
                }
            }
        }

        [Column(Storage = "_ccm_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime ccm_dLastDate
        {
            get
            {
                return this._ccm_dLastDate;
            }
            set
            {
                if ((this._ccm_dLastDate != value))
                {
                    this.Onccm_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._ccm_dLastDate = value;
                    this.SendPropertyChanged("ccm_dLastDate");
                    this.Onccm_dLastDateChanged();
                }
            }
        }

        [Association(Name = "ConsumeCardMaster_ccm_UserCardPair_ucp", Storage = "_UserCardPair_ucp", ThisKey = "ccm_cCardID", OtherKey = "ucp_cCardID")]
        public EntitySet<UserCardPair_ucp> UserCardPair_ucp
        {
            get
            {
                return this._UserCardPair_ucp;
            }
            set
            {
                this._UserCardPair_ucp.Assign(value);
            }
        }

        [Association(Name = "ConsumeCardMaster_ccm_RechargeRecord_rcr", Storage = "_RechargeRecord_rcr", ThisKey = "ccm_cCardID", OtherKey = "rcr_cCardID")]
        public EntitySet<RechargeRecord_rcr> RechargeRecord_rcr
        {
            get
            {
                return this._RechargeRecord_rcr;
            }
            set
            {
                this._RechargeRecord_rcr.Assign(value);
            }
        }

        [Association(Name = "ConsumeCardMaster_ccm_ConsumeRecord_csr", Storage = "_ConsumeRecord_csr", ThisKey = "ccm_cCardID", OtherKey = "csr_cCardID")]
        public EntitySet<ConsumeRecord_csr> ConsumeRecord_csr
        {
            get
            {
                return this._ConsumeRecord_csr;
            }
            set
            {
                this._ConsumeRecord_csr.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_UserCardPair_ucp(UserCardPair_ucp entity)
        {
            this.SendPropertyChanging();
            entity.ConsumeCardMaster_ccm = this;
        }

        private void detach_UserCardPair_ucp(UserCardPair_ucp entity)
        {
            this.SendPropertyChanging();
            entity.ConsumeCardMaster_ccm = null;
        }

        private void attach_RechargeRecord_rcr(RechargeRecord_rcr entity)
        {
            this.SendPropertyChanging();
            entity.ConsumeCardMaster_ccm = this;
        }

        private void detach_RechargeRecord_rcr(RechargeRecord_rcr entity)
        {
            this.SendPropertyChanging();
            entity.ConsumeCardMaster_ccm = null;
        }

        private void attach_ConsumeRecord_csr(ConsumeRecord_csr entity)
        {
            this.SendPropertyChanging();
            entity.ConsumeCardMaster_ccm = this;
        }

        private void detach_ConsumeRecord_csr(ConsumeRecord_csr entity)
        {
            this.SendPropertyChanging();
            entity.ConsumeCardMaster_ccm = null;
        }
    }

    [Table(Name = "dbo.DepartmentMaster_dpm")]
    public partial class DepartmentMaster_dpm : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _dpm_RecordID;

        private string _dpm_cName;

        private string _dpm_cRemark;

        private string _dpm_cAdd;

        private System.Nullable<System.DateTime> _dpm_dAddDate;

        private string _dpm_cLast;

        private System.Nullable<System.DateTime> _dpm_dLastDate;

        private System.Nullable<bool> _dpm_lEnable;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Ondpm_RecordIDChanging(System.Guid value);
        partial void Ondpm_RecordIDChanged();
        partial void Ondpm_cNameChanging(string value);
        partial void Ondpm_cNameChanged();
        partial void Ondpm_cRemarkChanging(string value);
        partial void Ondpm_cRemarkChanged();
        partial void Ondpm_cAddChanging(string value);
        partial void Ondpm_cAddChanged();
        partial void Ondpm_dAddDateChanging(System.Nullable<System.DateTime> value);
        partial void Ondpm_dAddDateChanged();
        partial void Ondpm_cLastChanging(string value);
        partial void Ondpm_cLastChanged();
        partial void Ondpm_dLastDateChanging(System.Nullable<System.DateTime> value);
        partial void Ondpm_dLastDateChanged();
        partial void Ondpm_lEnableChanging(System.Nullable<bool> value);
        partial void Ondpm_lEnableChanged();
        #endregion

        public DepartmentMaster_dpm()
        {
            OnCreated();
        }

        [Column(Storage = "_dpm_RecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid dpm_RecordID
        {
            get
            {
                return this._dpm_RecordID;
            }
            set
            {
                if ((this._dpm_RecordID != value))
                {
                    this.Ondpm_RecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._dpm_RecordID = value;
                    this.SendPropertyChanged("dpm_RecordID");
                    this.Ondpm_RecordIDChanged();
                }
            }
        }

        [Column(Storage = "_dpm_cName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string dpm_cName
        {
            get
            {
                return this._dpm_cName;
            }
            set
            {
                if ((this._dpm_cName != value))
                {
                    this.Ondpm_cNameChanging(value);
                    this.SendPropertyChanging();
                    this._dpm_cName = value;
                    this.SendPropertyChanged("dpm_cName");
                    this.Ondpm_cNameChanged();
                }
            }
        }

        [Column(Storage = "_dpm_cRemark", DbType = "NVarChar(100)")]
        public string dpm_cRemark
        {
            get
            {
                return this._dpm_cRemark;
            }
            set
            {
                if ((this._dpm_cRemark != value))
                {
                    this.Ondpm_cRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._dpm_cRemark = value;
                    this.SendPropertyChanged("dpm_cRemark");
                    this.Ondpm_cRemarkChanged();
                }
            }
        }

        [Column(Storage = "_dpm_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string dpm_cAdd
        {
            get
            {
                return this._dpm_cAdd;
            }
            set
            {
                if ((this._dpm_cAdd != value))
                {
                    this.Ondpm_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._dpm_cAdd = value;
                    this.SendPropertyChanged("dpm_cAdd");
                    this.Ondpm_cAddChanged();
                }
            }
        }

        [Column(Storage = "_dpm_dAddDate", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> dpm_dAddDate
        {
            get
            {
                return this._dpm_dAddDate;
            }
            set
            {
                if ((this._dpm_dAddDate != value))
                {
                    this.Ondpm_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._dpm_dAddDate = value;
                    this.SendPropertyChanged("dpm_dAddDate");
                    this.Ondpm_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_dpm_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string dpm_cLast
        {
            get
            {
                return this._dpm_cLast;
            }
            set
            {
                if ((this._dpm_cLast != value))
                {
                    this.Ondpm_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._dpm_cLast = value;
                    this.SendPropertyChanged("dpm_cLast");
                    this.Ondpm_cLastChanged();
                }
            }
        }

        [Column(Storage = "_dpm_dLastDate", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> dpm_dLastDate
        {
            get
            {
                return this._dpm_dLastDate;
            }
            set
            {
                if ((this._dpm_dLastDate != value))
                {
                    this.Ondpm_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._dpm_dLastDate = value;
                    this.SendPropertyChanged("dpm_dLastDate");
                    this.Ondpm_dLastDateChanged();
                }
            }
        }

        [Column(Storage = "_dpm_lEnable", DbType = "Bit")]
        public System.Nullable<bool> dpm_lEnable
        {
            get
            {
                return this._dpm_lEnable;
            }
            set
            {
                if ((this._dpm_lEnable != value))
                {
                    this.Ondpm_lEnableChanging(value);
                    this.SendPropertyChanging();
                    this._dpm_lEnable = value;
                    this.SendPropertyChanged("dpm_lEnable");
                    this.Ondpm_lEnableChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.LogDetail_lgd")]
    public partial class LogDetail_lgd : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _lgd_iID;

        private string _lgd_cIpAddr;

        private string _lgd_cSysName;

        private string _lgd_cClassMethodName;

        private string _lgd_cLogType;

        private string _lgd_cLogMessage;

        private string _lgd_cRemark;

        private string _lgd_cOperator;

        private System.DateTime _lgd_dOperateDateTime;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onlgd_iIDChanging(int value);
        partial void Onlgd_iIDChanged();
        partial void Onlgd_cIpAddrChanging(string value);
        partial void Onlgd_cIpAddrChanged();
        partial void Onlgd_cSysNameChanging(string value);
        partial void Onlgd_cSysNameChanged();
        partial void Onlgd_cClassMethodNameChanging(string value);
        partial void Onlgd_cClassMethodNameChanged();
        partial void Onlgd_cLogTypeChanging(string value);
        partial void Onlgd_cLogTypeChanged();
        partial void Onlgd_cLogMessageChanging(string value);
        partial void Onlgd_cLogMessageChanged();
        partial void Onlgd_cRemarkChanging(string value);
        partial void Onlgd_cRemarkChanged();
        partial void Onlgd_cOperatorChanging(string value);
        partial void Onlgd_cOperatorChanged();
        partial void Onlgd_dOperateDateTimeChanging(System.DateTime value);
        partial void Onlgd_dOperateDateTimeChanged();
        #endregion

        public LogDetail_lgd()
        {
            OnCreated();
        }

        [Column(Storage = "_lgd_iID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int lgd_iID
        {
            get
            {
                return this._lgd_iID;
            }
            set
            {
                if ((this._lgd_iID != value))
                {
                    this.Onlgd_iIDChanging(value);
                    this.SendPropertyChanging();
                    this._lgd_iID = value;
                    this.SendPropertyChanged("lgd_iID");
                    this.Onlgd_iIDChanged();
                }
            }
        }

        [Column(Storage = "_lgd_cIpAddr", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string lgd_cIpAddr
        {
            get
            {
                return this._lgd_cIpAddr;
            }
            set
            {
                if ((this._lgd_cIpAddr != value))
                {
                    this.Onlgd_cIpAddrChanging(value);
                    this.SendPropertyChanging();
                    this._lgd_cIpAddr = value;
                    this.SendPropertyChanged("lgd_cIpAddr");
                    this.Onlgd_cIpAddrChanged();
                }
            }
        }

        [Column(Storage = "_lgd_cSysName", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string lgd_cSysName
        {
            get
            {
                return this._lgd_cSysName;
            }
            set
            {
                if ((this._lgd_cSysName != value))
                {
                    this.Onlgd_cSysNameChanging(value);
                    this.SendPropertyChanging();
                    this._lgd_cSysName = value;
                    this.SendPropertyChanged("lgd_cSysName");
                    this.Onlgd_cSysNameChanged();
                }
            }
        }

        [Column(Storage = "_lgd_cClassMethodName", DbType = "NVarChar(200) NOT NULL", CanBeNull = false)]
        public string lgd_cClassMethodName
        {
            get
            {
                return this._lgd_cClassMethodName;
            }
            set
            {
                if ((this._lgd_cClassMethodName != value))
                {
                    this.Onlgd_cClassMethodNameChanging(value);
                    this.SendPropertyChanging();
                    this._lgd_cClassMethodName = value;
                    this.SendPropertyChanged("lgd_cClassMethodName");
                    this.Onlgd_cClassMethodNameChanged();
                }
            }
        }

        [Column(Storage = "_lgd_cLogType", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string lgd_cLogType
        {
            get
            {
                return this._lgd_cLogType;
            }
            set
            {
                if ((this._lgd_cLogType != value))
                {
                    this.Onlgd_cLogTypeChanging(value);
                    this.SendPropertyChanging();
                    this._lgd_cLogType = value;
                    this.SendPropertyChanged("lgd_cLogType");
                    this.Onlgd_cLogTypeChanged();
                }
            }
        }

        [Column(Storage = "_lgd_cLogMessage", DbType = "NVarChar(2000) NOT NULL", CanBeNull = false)]
        public string lgd_cLogMessage
        {
            get
            {
                return this._lgd_cLogMessage;
            }
            set
            {
                if ((this._lgd_cLogMessage != value))
                {
                    this.Onlgd_cLogMessageChanging(value);
                    this.SendPropertyChanging();
                    this._lgd_cLogMessage = value;
                    this.SendPropertyChanged("lgd_cLogMessage");
                    this.Onlgd_cLogMessageChanged();
                }
            }
        }

        [Column(Storage = "_lgd_cRemark", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string lgd_cRemark
        {
            get
            {
                return this._lgd_cRemark;
            }
            set
            {
                if ((this._lgd_cRemark != value))
                {
                    this.Onlgd_cRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._lgd_cRemark = value;
                    this.SendPropertyChanged("lgd_cRemark");
                    this.Onlgd_cRemarkChanged();
                }
            }
        }

        [Column(Storage = "_lgd_cOperator", DbType = "NVarChar(40) NOT NULL", CanBeNull = false)]
        public string lgd_cOperator
        {
            get
            {
                return this._lgd_cOperator;
            }
            set
            {
                if ((this._lgd_cOperator != value))
                {
                    this.Onlgd_cOperatorChanging(value);
                    this.SendPropertyChanging();
                    this._lgd_cOperator = value;
                    this.SendPropertyChanged("lgd_cOperator");
                    this.Onlgd_cOperatorChanged();
                }
            }
        }

        [Column(Storage = "_lgd_dOperateDateTime", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime lgd_dOperateDateTime
        {
            get
            {
                return this._lgd_dOperateDateTime;
            }
            set
            {
                if ((this._lgd_dOperateDateTime != value))
                {
                    this.Onlgd_dOperateDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._lgd_dOperateDateTime = value;
                    this.SendPropertyChanged("lgd_dOperateDateTime");
                    this.Onlgd_dOperateDateTimeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.Sys_FormPurview_frp")]
    public partial class Sys_FormPurview_frp : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _frp_iRecordID;

        private string _frp_cPurviewCode;

        private string _frp_cFunctionNumber;

        private string _frp_cFormNumber;

        private EntityRef<Sys_FormMaster_fom> _Sys_FormMaster_fom;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onfrp_iRecordIDChanging(int value);
        partial void Onfrp_iRecordIDChanged();
        partial void Onfrp_cPurviewCodeChanging(string value);
        partial void Onfrp_cPurviewCodeChanged();
        partial void Onfrp_cFunctionNumberChanging(string value);
        partial void Onfrp_cFunctionNumberChanged();
        partial void Onfrp_cFormNumberChanging(string value);
        partial void Onfrp_cFormNumberChanged();
        #endregion

        public Sys_FormPurview_frp()
        {
            this._Sys_FormMaster_fom = default(EntityRef<Sys_FormMaster_fom>);
            OnCreated();
        }

        [Column(Storage = "_frp_iRecordID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int frp_iRecordID
        {
            get
            {
                return this._frp_iRecordID;
            }
            set
            {
                if ((this._frp_iRecordID != value))
                {
                    this.Onfrp_iRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._frp_iRecordID = value;
                    this.SendPropertyChanged("frp_iRecordID");
                    this.Onfrp_iRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_frp_cPurviewCode", DbType = "VarChar(60) NOT NULL", CanBeNull = false)]
        public string frp_cPurviewCode
        {
            get
            {
                return this._frp_cPurviewCode;
            }
            set
            {
                if ((this._frp_cPurviewCode != value))
                {
                    this.Onfrp_cPurviewCodeChanging(value);
                    this.SendPropertyChanging();
                    this._frp_cPurviewCode = value;
                    this.SendPropertyChanged("frp_cPurviewCode");
                    this.Onfrp_cPurviewCodeChanged();
                }
            }
        }

        [Column(Storage = "_frp_cFunctionNumber", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string frp_cFunctionNumber
        {
            get
            {
                return this._frp_cFunctionNumber;
            }
            set
            {
                if ((this._frp_cFunctionNumber != value))
                {
                    this.Onfrp_cFunctionNumberChanging(value);
                    this.SendPropertyChanging();
                    this._frp_cFunctionNumber = value;
                    this.SendPropertyChanged("frp_cFunctionNumber");
                    this.Onfrp_cFunctionNumberChanged();
                }
            }
        }

        [Column(Storage = "_frp_cFormNumber", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string frp_cFormNumber
        {
            get
            {
                return this._frp_cFormNumber;
            }
            set
            {
                if ((this._frp_cFormNumber != value))
                {
                    if (this._Sys_FormMaster_fom.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onfrp_cFormNumberChanging(value);
                    this.SendPropertyChanging();
                    this._frp_cFormNumber = value;
                    this.SendPropertyChanged("frp_cFormNumber");
                    this.Onfrp_cFormNumberChanged();
                }
            }
        }

        [Association(Name = "Sys_FormMaster_fom_Sys_FormPurview_frp", Storage = "_Sys_FormMaster_fom", ThisKey = "frp_cFormNumber", OtherKey = "fom_cFormNumber", IsForeignKey = false)]
        public Sys_FormMaster_fom Sys_FormMaster_fom
        {
            get
            {
                return this._Sys_FormMaster_fom.Entity;
            }
            set
            {
                Sys_FormMaster_fom previousValue = this._Sys_FormMaster_fom.Entity;
                if (((previousValue != value)
                            || (this._Sys_FormMaster_fom.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Sys_FormMaster_fom.Entity = null;
                        previousValue.Sys_FormPurview_frp.Remove(this);
                    }
                    this._Sys_FormMaster_fom.Entity = value;
                    if ((value != null))
                    {
                        value.Sys_FormPurview_frp.Add(this);
                        this._frp_cFormNumber = value.fom_cFormNumber;
                    }
                    else
                    {
                        this._frp_cFormNumber = default(string);
                    }
                    this.SendPropertyChanged("Sys_FormMaster_fom");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.Sys_FunctionMaster_fum")]
    public partial class Sys_FunctionMaster_fum : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _fum_iRecordID;

        private string _fum_cFunctionNumber;

        private string _fum_cFunctionDesc;

        private string _fum_cRemark;

        private string _fum_cAdd;

        private System.DateTime _fum_dAddDate;

        private string _fum_cLast;

        private System.DateTime _fum_dLastDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onfum_iRecordIDChanging(int value);
        partial void Onfum_iRecordIDChanged();
        partial void Onfum_cFunctionNumberChanging(string value);
        partial void Onfum_cFunctionNumberChanged();
        partial void Onfum_cFunctionDescChanging(string value);
        partial void Onfum_cFunctionDescChanged();
        partial void Onfum_cRemarkChanging(string value);
        partial void Onfum_cRemarkChanged();
        partial void Onfum_cAddChanging(string value);
        partial void Onfum_cAddChanged();
        partial void Onfum_dAddDateChanging(System.DateTime value);
        partial void Onfum_dAddDateChanged();
        partial void Onfum_cLastChanging(string value);
        partial void Onfum_cLastChanged();
        partial void Onfum_dLastDateChanging(System.DateTime value);
        partial void Onfum_dLastDateChanged();
        #endregion

        public Sys_FunctionMaster_fum()
        {
            OnCreated();
        }

        [Column(Storage = "_fum_iRecordID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int fum_iRecordID
        {
            get
            {
                return this._fum_iRecordID;
            }
            set
            {
                if ((this._fum_iRecordID != value))
                {
                    this.Onfum_iRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._fum_iRecordID = value;
                    this.SendPropertyChanged("fum_iRecordID");
                    this.Onfum_iRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_fum_cFunctionNumber", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string fum_cFunctionNumber
        {
            get
            {
                return this._fum_cFunctionNumber;
            }
            set
            {
                if ((this._fum_cFunctionNumber != value))
                {
                    this.Onfum_cFunctionNumberChanging(value);
                    this.SendPropertyChanging();
                    this._fum_cFunctionNumber = value;
                    this.SendPropertyChanged("fum_cFunctionNumber");
                    this.Onfum_cFunctionNumberChanged();
                }
            }
        }

        [Column(Storage = "_fum_cFunctionDesc", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string fum_cFunctionDesc
        {
            get
            {
                return this._fum_cFunctionDesc;
            }
            set
            {
                if ((this._fum_cFunctionDesc != value))
                {
                    this.Onfum_cFunctionDescChanging(value);
                    this.SendPropertyChanging();
                    this._fum_cFunctionDesc = value;
                    this.SendPropertyChanged("fum_cFunctionDesc");
                    this.Onfum_cFunctionDescChanged();
                }
            }
        }

        [Column(Storage = "_fum_cRemark", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string fum_cRemark
        {
            get
            {
                return this._fum_cRemark;
            }
            set
            {
                if ((this._fum_cRemark != value))
                {
                    this.Onfum_cRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._fum_cRemark = value;
                    this.SendPropertyChanged("fum_cRemark");
                    this.Onfum_cRemarkChanged();
                }
            }
        }

        [Column(Storage = "_fum_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string fum_cAdd
        {
            get
            {
                return this._fum_cAdd;
            }
            set
            {
                if ((this._fum_cAdd != value))
                {
                    this.Onfum_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._fum_cAdd = value;
                    this.SendPropertyChanged("fum_cAdd");
                    this.Onfum_cAddChanged();
                }
            }
        }

        [Column(Storage = "_fum_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime fum_dAddDate
        {
            get
            {
                return this._fum_dAddDate;
            }
            set
            {
                if ((this._fum_dAddDate != value))
                {
                    this.Onfum_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._fum_dAddDate = value;
                    this.SendPropertyChanged("fum_dAddDate");
                    this.Onfum_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_fum_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string fum_cLast
        {
            get
            {
                return this._fum_cLast;
            }
            set
            {
                if ((this._fum_cLast != value))
                {
                    this.Onfum_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._fum_cLast = value;
                    this.SendPropertyChanged("fum_cLast");
                    this.Onfum_cLastChanged();
                }
            }
        }

        [Column(Storage = "_fum_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime fum_dLastDate
        {
            get
            {
                return this._fum_dLastDate;
            }
            set
            {
                if ((this._fum_dLastDate != value))
                {
                    this.Onfum_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._fum_dLastDate = value;
                    this.SendPropertyChanged("fum_dLastDate");
                    this.Onfum_dLastDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.Sys_RecordLockRegister_rlr")]
    public partial class Sys_RecordLockRegister_rlr : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _rlr_cTableName;

        private long _rlr_iByLockRecordID;

        private string _rlr_cKeys;

        private System.DateTime _rlr_dLockDateTime;

        private string _rlr_cLockedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onrlr_cTableNameChanging(string value);
        partial void Onrlr_cTableNameChanged();
        partial void Onrlr_iByLockRecordIDChanging(long value);
        partial void Onrlr_iByLockRecordIDChanged();
        partial void Onrlr_cKeysChanging(string value);
        partial void Onrlr_cKeysChanged();
        partial void Onrlr_dLockDateTimeChanging(System.DateTime value);
        partial void Onrlr_dLockDateTimeChanged();
        partial void Onrlr_cLockedByChanging(string value);
        partial void Onrlr_cLockedByChanged();
        #endregion

        public Sys_RecordLockRegister_rlr()
        {
            OnCreated();
        }

        [Column(Storage = "_rlr_cTableName", DbType = "VarChar(100) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string rlr_cTableName
        {
            get
            {
                return this._rlr_cTableName;
            }
            set
            {
                if ((this._rlr_cTableName != value))
                {
                    this.Onrlr_cTableNameChanging(value);
                    this.SendPropertyChanging();
                    this._rlr_cTableName = value;
                    this.SendPropertyChanged("rlr_cTableName");
                    this.Onrlr_cTableNameChanged();
                }
            }
        }

        [Column(Storage = "_rlr_iByLockRecordID", DbType = "BigInt NOT NULL", IsPrimaryKey = true)]
        public long rlr_iByLockRecordID
        {
            get
            {
                return this._rlr_iByLockRecordID;
            }
            set
            {
                if ((this._rlr_iByLockRecordID != value))
                {
                    this.Onrlr_iByLockRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._rlr_iByLockRecordID = value;
                    this.SendPropertyChanged("rlr_iByLockRecordID");
                    this.Onrlr_iByLockRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_rlr_cKeys", DbType = "VarChar(200) NOT NULL", CanBeNull = false)]
        public string rlr_cKeys
        {
            get
            {
                return this._rlr_cKeys;
            }
            set
            {
                if ((this._rlr_cKeys != value))
                {
                    this.Onrlr_cKeysChanging(value);
                    this.SendPropertyChanging();
                    this._rlr_cKeys = value;
                    this.SendPropertyChanged("rlr_cKeys");
                    this.Onrlr_cKeysChanged();
                }
            }
        }

        [Column(Storage = "_rlr_dLockDateTime", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime rlr_dLockDateTime
        {
            get
            {
                return this._rlr_dLockDateTime;
            }
            set
            {
                if ((this._rlr_dLockDateTime != value))
                {
                    this.Onrlr_dLockDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._rlr_dLockDateTime = value;
                    this.SendPropertyChanged("rlr_dLockDateTime");
                    this.Onrlr_dLockDateTimeChanged();
                }
            }
        }

        [Column(Storage = "_rlr_cLockedBy", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string rlr_cLockedBy
        {
            get
            {
                return this._rlr_cLockedBy;
            }
            set
            {
                if ((this._rlr_cLockedBy != value))
                {
                    this.Onrlr_cLockedByChanging(value);
                    this.SendPropertyChanging();
                    this._rlr_cLockedBy = value;
                    this.SendPropertyChanged("rlr_cLockedBy");
                    this.Onrlr_cLockedByChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.Sys_RoleMaster_rlm")]
    public partial class Sys_RoleMaster_rlm : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _rlm_iRecordID;

        private string _rlm_cRoleID;

        private string _rlm_cRoleDesc;

        private string _rlm_cAdd;

        private System.DateTime _rlm_dAddDate;

        private string _rlm_cLast;

        private System.DateTime _rlm_dLastDate;

        private EntitySet<Sys_UserRoles_usr> _Sys_UserRoles_usr;

        private EntitySet<Sys_UserPurview_usp> _Sys_UserPurview_usp;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onrlm_iRecordIDChanging(int value);
        partial void Onrlm_iRecordIDChanged();
        partial void Onrlm_cRoleIDChanging(string value);
        partial void Onrlm_cRoleIDChanged();
        partial void Onrlm_cRoleDescChanging(string value);
        partial void Onrlm_cRoleDescChanged();
        partial void Onrlm_cAddChanging(string value);
        partial void Onrlm_cAddChanged();
        partial void Onrlm_dAddDateChanging(System.DateTime value);
        partial void Onrlm_dAddDateChanged();
        partial void Onrlm_cLastChanging(string value);
        partial void Onrlm_cLastChanged();
        partial void Onrlm_dLastDateChanging(System.DateTime value);
        partial void Onrlm_dLastDateChanged();
        #endregion

        public Sys_RoleMaster_rlm()
        {
            this._Sys_UserRoles_usr = new EntitySet<Sys_UserRoles_usr>(new Action<Sys_UserRoles_usr>(this.attach_Sys_UserRoles_usr), new Action<Sys_UserRoles_usr>(this.detach_Sys_UserRoles_usr));
            this._Sys_UserPurview_usp = new EntitySet<Sys_UserPurview_usp>(new Action<Sys_UserPurview_usp>(this.attach_Sys_UserPurview_usp), new Action<Sys_UserPurview_usp>(this.detach_Sys_UserPurview_usp));
            OnCreated();
        }

        [Column(Storage = "_rlm_iRecordID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int rlm_iRecordID
        {
            get
            {
                return this._rlm_iRecordID;
            }
            set
            {
                if ((this._rlm_iRecordID != value))
                {
                    this.Onrlm_iRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._rlm_iRecordID = value;
                    this.SendPropertyChanged("rlm_iRecordID");
                    this.Onrlm_iRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_rlm_cRoleID", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string rlm_cRoleID
        {
            get
            {
                return this._rlm_cRoleID;
            }
            set
            {
                if ((this._rlm_cRoleID != value))
                {
                    this.Onrlm_cRoleIDChanging(value);
                    this.SendPropertyChanging();
                    this._rlm_cRoleID = value;
                    this.SendPropertyChanged("rlm_cRoleID");
                    this.Onrlm_cRoleIDChanged();
                }
            }
        }

        [Column(Storage = "_rlm_cRoleDesc", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string rlm_cRoleDesc
        {
            get
            {
                return this._rlm_cRoleDesc;
            }
            set
            {
                if ((this._rlm_cRoleDesc != value))
                {
                    this.Onrlm_cRoleDescChanging(value);
                    this.SendPropertyChanging();
                    this._rlm_cRoleDesc = value;
                    this.SendPropertyChanged("rlm_cRoleDesc");
                    this.Onrlm_cRoleDescChanged();
                }
            }
        }

        [Column(Storage = "_rlm_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string rlm_cAdd
        {
            get
            {
                return this._rlm_cAdd;
            }
            set
            {
                if ((this._rlm_cAdd != value))
                {
                    this.Onrlm_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._rlm_cAdd = value;
                    this.SendPropertyChanged("rlm_cAdd");
                    this.Onrlm_cAddChanged();
                }
            }
        }

        [Column(Storage = "_rlm_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime rlm_dAddDate
        {
            get
            {
                return this._rlm_dAddDate;
            }
            set
            {
                if ((this._rlm_dAddDate != value))
                {
                    this.Onrlm_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._rlm_dAddDate = value;
                    this.SendPropertyChanged("rlm_dAddDate");
                    this.Onrlm_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_rlm_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string rlm_cLast
        {
            get
            {
                return this._rlm_cLast;
            }
            set
            {
                if ((this._rlm_cLast != value))
                {
                    this.Onrlm_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._rlm_cLast = value;
                    this.SendPropertyChanged("rlm_cLast");
                    this.Onrlm_cLastChanged();
                }
            }
        }

        [Column(Storage = "_rlm_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime rlm_dLastDate
        {
            get
            {
                return this._rlm_dLastDate;
            }
            set
            {
                if ((this._rlm_dLastDate != value))
                {
                    this.Onrlm_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._rlm_dLastDate = value;
                    this.SendPropertyChanged("rlm_dLastDate");
                    this.Onrlm_dLastDateChanged();
                }
            }
        }

        [Association(Name = "Sys_RoleMaster_rlm_Sys_UserRoles_usr", Storage = "_Sys_UserRoles_usr", ThisKey = "rlm_cRoleID", OtherKey = "usr_cRoleID")]
        public EntitySet<Sys_UserRoles_usr> Sys_UserRoles_usr
        {
            get
            {
                return this._Sys_UserRoles_usr;
            }
            set
            {
                this._Sys_UserRoles_usr.Assign(value);
            }
        }

        [Association(Name = "Sys_RoleMaster_rlm_Sys_UserPurview_usp", Storage = "_Sys_UserPurview_usp", ThisKey = "rlm_cRoleID", OtherKey = "usp_cRoleID")]
        public EntitySet<Sys_UserPurview_usp> Sys_UserPurview_usp
        {
            get
            {
                return this._Sys_UserPurview_usp;
            }
            set
            {
                this._Sys_UserPurview_usp.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Sys_UserRoles_usr(Sys_UserRoles_usr entity)
        {
            this.SendPropertyChanging();
            entity.Sys_RoleMaster_rlm = this;
        }

        private void detach_Sys_UserRoles_usr(Sys_UserRoles_usr entity)
        {
            this.SendPropertyChanging();
            entity.Sys_RoleMaster_rlm = null;
        }

        private void attach_Sys_UserPurview_usp(Sys_UserPurview_usp entity)
        {
            this.SendPropertyChanging();
            entity.Sys_RoleMaster_rlm = this;
        }

        private void detach_Sys_UserPurview_usp(Sys_UserPurview_usp entity)
        {
            this.SendPropertyChanging();
            entity.Sys_RoleMaster_rlm = null;
        }
    }

    [Table(Name = "dbo.Sys_UserRoles_usr")]
    public partial class Sys_UserRoles_usr : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _usr_iRecordID;

        private string _usr_cUserLoginID;

        private string _usr_cRoleID;

        private EntityRef<Sys_RoleMaster_rlm> _Sys_RoleMaster_rlm;

        private EntityRef<Sys_UserMaster_usm> _Sys_UserMaster_usm;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onusr_iRecordIDChanging(int value);
        partial void Onusr_iRecordIDChanged();
        partial void Onusr_cUserLoginIDChanging(string value);
        partial void Onusr_cUserLoginIDChanged();
        partial void Onusr_cRoleIDChanging(string value);
        partial void Onusr_cRoleIDChanged();
        #endregion

        public Sys_UserRoles_usr()
        {
            this._Sys_RoleMaster_rlm = default(EntityRef<Sys_RoleMaster_rlm>);
            this._Sys_UserMaster_usm = default(EntityRef<Sys_UserMaster_usm>);
            OnCreated();
        }

        [Column(Storage = "_usr_iRecordID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int usr_iRecordID
        {
            get
            {
                return this._usr_iRecordID;
            }
            set
            {
                if ((this._usr_iRecordID != value))
                {
                    this.Onusr_iRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._usr_iRecordID = value;
                    this.SendPropertyChanged("usr_iRecordID");
                    this.Onusr_iRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_usr_cUserLoginID", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string usr_cUserLoginID
        {
            get
            {
                return this._usr_cUserLoginID;
            }
            set
            {
                if ((this._usr_cUserLoginID != value))
                {
                    if (this._Sys_UserMaster_usm.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onusr_cUserLoginIDChanging(value);
                    this.SendPropertyChanging();
                    this._usr_cUserLoginID = value;
                    this.SendPropertyChanged("usr_cUserLoginID");
                    this.Onusr_cUserLoginIDChanged();
                }
            }
        }

        [Column(Storage = "_usr_cRoleID", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string usr_cRoleID
        {
            get
            {
                return this._usr_cRoleID;
            }
            set
            {
                if ((this._usr_cRoleID != value))
                {
                    if (this._Sys_RoleMaster_rlm.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onusr_cRoleIDChanging(value);
                    this.SendPropertyChanging();
                    this._usr_cRoleID = value;
                    this.SendPropertyChanged("usr_cRoleID");
                    this.Onusr_cRoleIDChanged();
                }
            }
        }

        [Association(Name = "Sys_RoleMaster_rlm_Sys_UserRoles_usr", Storage = "_Sys_RoleMaster_rlm", ThisKey = "usr_cRoleID", OtherKey = "rlm_cRoleID", IsForeignKey = false)]
        public Sys_RoleMaster_rlm Sys_RoleMaster_rlm
        {
            get
            {
                return this._Sys_RoleMaster_rlm.Entity;
            }
            set
            {
                Sys_RoleMaster_rlm previousValue = this._Sys_RoleMaster_rlm.Entity;
                if (((previousValue != value)
                            || (this._Sys_RoleMaster_rlm.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Sys_RoleMaster_rlm.Entity = null;
                        previousValue.Sys_UserRoles_usr.Remove(this);
                    }
                    this._Sys_RoleMaster_rlm.Entity = value;
                    if ((value != null))
                    {
                        value.Sys_UserRoles_usr.Add(this);
                        this._usr_cRoleID = value.rlm_cRoleID;
                    }
                    else
                    {
                        this._usr_cRoleID = default(string);
                    }
                    this.SendPropertyChanged("Sys_RoleMaster_rlm");
                }
            }
        }

        [Association(Name = "Sys_UserMaster_usm_Sys_UserRoles_usr", Storage = "_Sys_UserMaster_usm", ThisKey = "usr_cUserLoginID", OtherKey = "usm_cUserLoginID", IsForeignKey = false)]
        public Sys_UserMaster_usm Sys_UserMaster_usm
        {
            get
            {
                return this._Sys_UserMaster_usm.Entity;
            }
            set
            {
                Sys_UserMaster_usm previousValue = this._Sys_UserMaster_usm.Entity;
                if (((previousValue != value)
                            || (this._Sys_UserMaster_usm.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Sys_UserMaster_usm.Entity = null;
                        previousValue.Sys_UserRoles_usr.Remove(this);
                    }
                    this._Sys_UserMaster_usm.Entity = value;
                    if ((value != null))
                    {
                        value.Sys_UserRoles_usr.Add(this);
                        this._usr_cUserLoginID = value.usm_cUserLoginID;
                    }
                    else
                    {
                        this._usr_cUserLoginID = default(string);
                    }
                    this.SendPropertyChanged("Sys_UserMaster_usm");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.ClassMaster_csm")]
    public partial class ClassMaster_csm : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _csm_cRecordID;

        private string _csm_cClassName;

        private System.Guid _csm_cGDMID;

        private string _csm_cClassNum;

        private System.Nullable<System.Guid> _csm_cMasterID;

        private string _csm_cRemark;

        private string _csm_cAdd;

        private System.Nullable<System.DateTime> _csm_dAddDate;

        private string _csm_cLast;

        private System.Nullable<System.DateTime> _csm_dLastDate;

        private EntityRef<ChangeClassRecord_ccr> _ChangeClassRecord_ccr;

        private EntityRef<GradeMaster_gdm> _GradeMaster_gdm;

        private EntityRef<CardUserMaster_cus> _CardUserMaster_cus;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Oncsm_cRecordIDChanging(System.Guid value);
        partial void Oncsm_cRecordIDChanged();
        partial void Oncsm_cClassNameChanging(string value);
        partial void Oncsm_cClassNameChanged();
        partial void Oncsm_cGDMIDChanging(System.Guid value);
        partial void Oncsm_cGDMIDChanged();
        partial void Oncsm_cClassNumChanging(string value);
        partial void Oncsm_cClassNumChanged();
        partial void Oncsm_cMasterIDChanging(System.Nullable<System.Guid> value);
        partial void Oncsm_cMasterIDChanged();
        partial void Oncsm_cRemarkChanging(string value);
        partial void Oncsm_cRemarkChanged();
        partial void Oncsm_cAddChanging(string value);
        partial void Oncsm_cAddChanged();
        partial void Oncsm_dAddDateChanging(System.Nullable<System.DateTime> value);
        partial void Oncsm_dAddDateChanged();
        partial void Oncsm_cLastChanging(string value);
        partial void Oncsm_cLastChanged();
        partial void Oncsm_dLastDateChanging(System.Nullable<System.DateTime> value);
        partial void Oncsm_dLastDateChanged();
        #endregion

        public ClassMaster_csm()
        {
            this._ChangeClassRecord_ccr = default(EntityRef<ChangeClassRecord_ccr>);
            this._GradeMaster_gdm = default(EntityRef<GradeMaster_gdm>);
            this._CardUserMaster_cus = default(EntityRef<CardUserMaster_cus>);
            OnCreated();
        }

        [Column(Storage = "_csm_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid csm_cRecordID
        {
            get
            {
                return this._csm_cRecordID;
            }
            set
            {
                if ((this._csm_cRecordID != value))
                {
                    if (this._ChangeClassRecord_ccr.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Oncsm_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._csm_cRecordID = value;
                    this.SendPropertyChanged("csm_cRecordID");
                    this.Oncsm_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_csm_cClassName", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string csm_cClassName
        {
            get
            {
                return this._csm_cClassName;
            }
            set
            {
                if ((this._csm_cClassName != value))
                {
                    this.Oncsm_cClassNameChanging(value);
                    this.SendPropertyChanging();
                    this._csm_cClassName = value;
                    this.SendPropertyChanged("csm_cClassName");
                    this.Oncsm_cClassNameChanged();
                }
            }
        }

        [Column(Storage = "_csm_cGDMID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid csm_cGDMID
        {
            get
            {
                return this._csm_cGDMID;
            }
            set
            {
                if ((this._csm_cGDMID != value))
                {
                    if (this._GradeMaster_gdm.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Oncsm_cGDMIDChanging(value);
                    this.SendPropertyChanging();
                    this._csm_cGDMID = value;
                    this.SendPropertyChanged("csm_cGDMID");
                    this.Oncsm_cGDMIDChanged();
                }
            }
        }

        [Column(Storage = "_csm_cClassNum", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string csm_cClassNum
        {
            get
            {
                return this._csm_cClassNum;
            }
            set
            {
                if ((this._csm_cClassNum != value))
                {
                    this.Oncsm_cClassNumChanging(value);
                    this.SendPropertyChanging();
                    this._csm_cClassNum = value;
                    this.SendPropertyChanged("csm_cClassNum");
                    this.Oncsm_cClassNumChanged();
                }
            }
        }

        [Column(Storage = "_csm_cMasterID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> csm_cMasterID
        {
            get
            {
                return this._csm_cMasterID;
            }
            set
            {
                if ((this._csm_cMasterID != value))
                {
                    if (this._CardUserMaster_cus.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Oncsm_cMasterIDChanging(value);
                    this.SendPropertyChanging();
                    this._csm_cMasterID = value;
                    this.SendPropertyChanged("csm_cMasterID");
                    this.Oncsm_cMasterIDChanged();
                }
            }
        }

        [Column(Storage = "_csm_cRemark", DbType = "NVarChar(50)")]
        public string csm_cRemark
        {
            get
            {
                return this._csm_cRemark;
            }
            set
            {
                if ((this._csm_cRemark != value))
                {
                    this.Oncsm_cRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._csm_cRemark = value;
                    this.SendPropertyChanged("csm_cRemark");
                    this.Oncsm_cRemarkChanged();
                }
            }
        }

        [Column(Storage = "_csm_cAdd", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string csm_cAdd
        {
            get
            {
                return this._csm_cAdd;
            }
            set
            {
                if ((this._csm_cAdd != value))
                {
                    this.Oncsm_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._csm_cAdd = value;
                    this.SendPropertyChanged("csm_cAdd");
                    this.Oncsm_cAddChanged();
                }
            }
        }

        [Column(Storage = "_csm_dAddDate", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> csm_dAddDate
        {
            get
            {
                return this._csm_dAddDate;
            }
            set
            {
                if ((this._csm_dAddDate != value))
                {
                    this.Oncsm_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._csm_dAddDate = value;
                    this.SendPropertyChanged("csm_dAddDate");
                    this.Oncsm_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_csm_cLast", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string csm_cLast
        {
            get
            {
                return this._csm_cLast;
            }
            set
            {
                if ((this._csm_cLast != value))
                {
                    this.Oncsm_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._csm_cLast = value;
                    this.SendPropertyChanged("csm_cLast");
                    this.Oncsm_cLastChanged();
                }
            }
        }

        [Column(Storage = "_csm_dLastDate", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> csm_dLastDate
        {
            get
            {
                return this._csm_dLastDate;
            }
            set
            {
                if ((this._csm_dLastDate != value))
                {
                    this.Oncsm_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._csm_dLastDate = value;
                    this.SendPropertyChanged("csm_dLastDate");
                    this.Oncsm_dLastDateChanged();
                }
            }
        }

        [Association(Name = "ChangeClassRecord_ccr_ClassMaster_csm", Storage = "_ChangeClassRecord_ccr", ThisKey = "csm_cRecordID", OtherKey = "ccr_cClassID", IsForeignKey = false)]
        public ChangeClassRecord_ccr ChangeClassRecord_ccr
        {
            get
            {
                return this._ChangeClassRecord_ccr.Entity;
            }
            set
            {
                ChangeClassRecord_ccr previousValue = this._ChangeClassRecord_ccr.Entity;
                if (((previousValue != value)
                            || (this._ChangeClassRecord_ccr.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ChangeClassRecord_ccr.Entity = null;
                        previousValue.ClassMaster_csm.Remove(this);
                    }
                    this._ChangeClassRecord_ccr.Entity = value;
                    if ((value != null))
                    {
                        value.ClassMaster_csm.Add(this);
                        this._csm_cRecordID = value.ccr_cClassID;
                    }
                    else
                    {
                        this._csm_cRecordID = default(System.Guid);
                    }
                    this.SendPropertyChanged("ChangeClassRecord_ccr");
                }
            }
        }

        [Association(Name = "GradeMaster_gdm_ClassMaster_csm", Storage = "_GradeMaster_gdm", ThisKey = "csm_cGDMID", OtherKey = "gdm_cRecordID", IsForeignKey = false)]
        public GradeMaster_gdm GradeMaster_gdm
        {
            get
            {
                return this._GradeMaster_gdm.Entity;
            }
            set
            {
                GradeMaster_gdm previousValue = this._GradeMaster_gdm.Entity;
                if (((previousValue != value)
                            || (this._GradeMaster_gdm.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._GradeMaster_gdm.Entity = null;
                        previousValue.ClassMaster_csm.Remove(this);
                    }
                    this._GradeMaster_gdm.Entity = value;
                    if ((value != null))
                    {
                        value.ClassMaster_csm.Add(this);
                        this._csm_cGDMID = value.gdm_cRecordID;
                    }
                    else
                    {
                        this._csm_cGDMID = default(System.Guid);
                    }
                    this.SendPropertyChanged("GradeMaster_gdm");
                }
            }
        }

        [Association(Name = "CardUserMaster_cus_ClassMaster_csm", Storage = "_CardUserMaster_cus", ThisKey = "csm_cMasterID", OtherKey = "cus_cRecordID", IsForeignKey = false)]
        public CardUserMaster_cus CardUserMaster_cus
        {
            get
            {
                return this._CardUserMaster_cus.Entity;
            }
            set
            {
                CardUserMaster_cus previousValue = this._CardUserMaster_cus.Entity;
                if (((previousValue != value)
                            || (this._CardUserMaster_cus.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CardUserMaster_cus.Entity = null;
                        previousValue.ClassMaster_csm.Remove(this);
                    }
                    this._CardUserMaster_cus.Entity = value;
                    if ((value != null))
                    {
                        value.ClassMaster_csm.Add(this);
                        this._csm_cMasterID = value.cus_cRecordID;
                    }
                    else
                    {
                        this._csm_cMasterID = default(Nullable<System.Guid>);
                    }
                    this.SendPropertyChanged("CardUserMaster_cus");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.UserCardPair_ucp")]
    public partial class UserCardPair_ucp : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _ucp_cRecordID;

        private int _ucp_iCardNo;

        private string _ucp_cCardID;

        private System.Guid _ucp_cCUSID;

        private System.DateTime _ucp_dPairTime;

        private System.Nullable<System.DateTime> _ucp_dReturnTime;

        private string _ucp_cUseStatus;

        private bool _ucp_lIsActive;

        private string _ucp_cAdd;

        private System.DateTime _ucp_dAddDate;

        private string _ucp_cLast;

        private System.DateTime _ucp_dLastDate;

        private EntityRef<ConsumeCardMaster_ccm> _ConsumeCardMaster_ccm;

        private EntityRef<CardUserMaster_cus> _CardUserMaster_cus;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onucp_cRecordIDChanging(System.Guid value);
        partial void Onucp_cRecordIDChanged();
        partial void Onucp_iCardNoChanging(int value);
        partial void Onucp_iCardNoChanged();
        partial void Onucp_cCardIDChanging(string value);
        partial void Onucp_cCardIDChanged();
        partial void Onucp_cCUSIDChanging(System.Guid value);
        partial void Onucp_cCUSIDChanged();
        partial void Onucp_dPairTimeChanging(System.DateTime value);
        partial void Onucp_dPairTimeChanged();
        partial void Onucp_dReturnTimeChanging(System.Nullable<System.DateTime> value);
        partial void Onucp_dReturnTimeChanged();
        partial void Onucp_cUseStatusChanging(string value);
        partial void Onucp_cUseStatusChanged();
        partial void Onucp_lIsActiveChanging(bool value);
        partial void Onucp_lIsActiveChanged();
        partial void Onucp_cAddChanging(string value);
        partial void Onucp_cAddChanged();
        partial void Onucp_dAddDateChanging(System.DateTime value);
        partial void Onucp_dAddDateChanged();
        partial void Onucp_cLastChanging(string value);
        partial void Onucp_cLastChanged();
        partial void Onucp_dLastDateChanging(System.DateTime value);
        partial void Onucp_dLastDateChanged();
        #endregion

        public UserCardPair_ucp()
        {
            this._ConsumeCardMaster_ccm = default(EntityRef<ConsumeCardMaster_ccm>);
            this._CardUserMaster_cus = default(EntityRef<CardUserMaster_cus>);
            OnCreated();
        }

        [Column(Storage = "_ucp_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid ucp_cRecordID
        {
            get
            {
                return this._ucp_cRecordID;
            }
            set
            {
                if ((this._ucp_cRecordID != value))
                {
                    this.Onucp_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_cRecordID = value;
                    this.SendPropertyChanged("ucp_cRecordID");
                    this.Onucp_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_ucp_iCardNo", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int ucp_iCardNo
        {
            get
            {
                return this._ucp_iCardNo;
            }
            set
            {
                if ((this._ucp_iCardNo != value))
                {
                    this.Onucp_iCardNoChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_iCardNo = value;
                    this.SendPropertyChanged("ucp_iCardNo");
                    this.Onucp_iCardNoChanged();
                }
            }
        }

        [Column(Storage = "_ucp_cCardID", DbType = "VarChar(36) NOT NULL", CanBeNull = false)]
        public string ucp_cCardID
        {
            get
            {
                return this._ucp_cCardID;
            }
            set
            {
                if ((this._ucp_cCardID != value))
                {
                    if (this._ConsumeCardMaster_ccm.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onucp_cCardIDChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_cCardID = value;
                    this.SendPropertyChanged("ucp_cCardID");
                    this.Onucp_cCardIDChanged();
                }
            }
        }

        [Column(Storage = "_ucp_cCUSID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid ucp_cCUSID
        {
            get
            {
                return this._ucp_cCUSID;
            }
            set
            {
                if ((this._ucp_cCUSID != value))
                {
                    if (this._CardUserMaster_cus.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onucp_cCUSIDChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_cCUSID = value;
                    this.SendPropertyChanged("ucp_cCUSID");
                    this.Onucp_cCUSIDChanged();
                }
            }
        }

        [Column(Storage = "_ucp_dPairTime", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime ucp_dPairTime
        {
            get
            {
                return this._ucp_dPairTime;
            }
            set
            {
                if ((this._ucp_dPairTime != value))
                {
                    this.Onucp_dPairTimeChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_dPairTime = value;
                    this.SendPropertyChanged("ucp_dPairTime");
                    this.Onucp_dPairTimeChanged();
                }
            }
        }

        [Column(Storage = "_ucp_dReturnTime", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> ucp_dReturnTime
        {
            get
            {
                return this._ucp_dReturnTime;
            }
            set
            {
                if ((this._ucp_dReturnTime != value))
                {
                    this.Onucp_dReturnTimeChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_dReturnTime = value;
                    this.SendPropertyChanged("ucp_dReturnTime");
                    this.Onucp_dReturnTimeChanged();
                }
            }
        }

        [Column(Storage = "_ucp_cUseStatus", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string ucp_cUseStatus
        {
            get
            {
                return this._ucp_cUseStatus;
            }
            set
            {
                if ((this._ucp_cUseStatus != value))
                {
                    this.Onucp_cUseStatusChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_cUseStatus = value;
                    this.SendPropertyChanged("ucp_cUseStatus");
                    this.Onucp_cUseStatusChanged();
                }
            }
        }

        [Column(Storage = "_ucp_lIsActive", DbType = "Bit NOT NULL")]
        public bool ucp_lIsActive
        {
            get
            {
                return this._ucp_lIsActive;
            }
            set
            {
                if ((this._ucp_lIsActive != value))
                {
                    this.Onucp_lIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_lIsActive = value;
                    this.SendPropertyChanged("ucp_lIsActive");
                    this.Onucp_lIsActiveChanged();
                }
            }
        }

        [Column(Storage = "_ucp_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string ucp_cAdd
        {
            get
            {
                return this._ucp_cAdd;
            }
            set
            {
                if ((this._ucp_cAdd != value))
                {
                    this.Onucp_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_cAdd = value;
                    this.SendPropertyChanged("ucp_cAdd");
                    this.Onucp_cAddChanged();
                }
            }
        }

        [Column(Storage = "_ucp_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime ucp_dAddDate
        {
            get
            {
                return this._ucp_dAddDate;
            }
            set
            {
                if ((this._ucp_dAddDate != value))
                {
                    this.Onucp_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_dAddDate = value;
                    this.SendPropertyChanged("ucp_dAddDate");
                    this.Onucp_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_ucp_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string ucp_cLast
        {
            get
            {
                return this._ucp_cLast;
            }
            set
            {
                if ((this._ucp_cLast != value))
                {
                    this.Onucp_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_cLast = value;
                    this.SendPropertyChanged("ucp_cLast");
                    this.Onucp_cLastChanged();
                }
            }
        }

        [Column(Storage = "_ucp_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime ucp_dLastDate
        {
            get
            {
                return this._ucp_dLastDate;
            }
            set
            {
                if ((this._ucp_dLastDate != value))
                {
                    this.Onucp_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._ucp_dLastDate = value;
                    this.SendPropertyChanged("ucp_dLastDate");
                    this.Onucp_dLastDateChanged();
                }
            }
        }

        [Association(Name = "ConsumeCardMaster_ccm_UserCardPair_ucp", Storage = "_ConsumeCardMaster_ccm", ThisKey = "ucp_cCardID", OtherKey = "ccm_cCardID", IsForeignKey = false)]
        public ConsumeCardMaster_ccm ConsumeCardMaster_ccm
        {
            get
            {
                return this._ConsumeCardMaster_ccm.Entity;
            }
            set
            {
                ConsumeCardMaster_ccm previousValue = this._ConsumeCardMaster_ccm.Entity;
                if (((previousValue != value)
                            || (this._ConsumeCardMaster_ccm.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ConsumeCardMaster_ccm.Entity = null;
                        previousValue.UserCardPair_ucp.Remove(this);
                    }
                    this._ConsumeCardMaster_ccm.Entity = value;
                    if ((value != null))
                    {
                        value.UserCardPair_ucp.Add(this);
                        this._ucp_cCardID = value.ccm_cCardID;
                    }
                    else
                    {
                        this._ucp_cCardID = default(string);
                    }
                    this.SendPropertyChanged("ConsumeCardMaster_ccm");
                }
            }
        }

        [Association(Name = "CardUserMaster_cus_UserCardPair_ucp", Storage = "_CardUserMaster_cus", ThisKey = "ucp_cCUSID", OtherKey = "cus_cRecordID", IsForeignKey = false)]
        public CardUserMaster_cus CardUserMaster_cus
        {
            get
            {
                return this._CardUserMaster_cus.Entity;
            }
            set
            {
                CardUserMaster_cus previousValue = this._CardUserMaster_cus.Entity;
                if (((previousValue != value)
                            || (this._CardUserMaster_cus.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CardUserMaster_cus.Entity = null;
                        previousValue.UserCardPair_ucp.Remove(this);
                    }
                    this._CardUserMaster_cus.Entity = value;
                    if ((value != null))
                    {
                        value.UserCardPair_ucp.Add(this);
                        this._ucp_cCUSID = value.cus_cRecordID;
                    }
                    else
                    {
                        this._ucp_cCUSID = default(System.Guid);
                    }
                    this.SendPropertyChanged("CardUserMaster_cus");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.CardUserAccount_cua")]
    public partial class CardUserAccount_cua : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _cua_cRecordID;

        private System.Guid _cua_cCUSID;

        private decimal _cua_fOriginalBalance;

        private decimal _cua_fCurrentBalance;

        private System.DateTime _cua_dLastSyncTime;

        private bool _cua_lIsActive;

        private string _cua_cAdd;

        private System.DateTime _cua_dAddDate;

        private EntitySet<PreConsumeRecord_pcs> _PreConsumeRecord_pcs;

        private EntitySet<CardUserAccountDetail_cuad> _CardUserAccountDetail_cuad;

        private EntityRef<CardUserMaster_cus> _CardUserMaster_cus;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Oncua_cRecordIDChanging(System.Guid value);
        partial void Oncua_cRecordIDChanged();
        partial void Oncua_cCUSIDChanging(System.Guid value);
        partial void Oncua_cCUSIDChanged();
        partial void Oncua_fOriginalBalanceChanging(decimal value);
        partial void Oncua_fOriginalBalanceChanged();
        partial void Oncua_fCurrentBalanceChanging(decimal value);
        partial void Oncua_fCurrentBalanceChanged();
        partial void Oncua_dLastSyncTimeChanging(System.DateTime value);
        partial void Oncua_dLastSyncTimeChanged();
        partial void Oncua_lIsActiveChanging(bool value);
        partial void Oncua_lIsActiveChanged();
        partial void Oncua_cAddChanging(string value);
        partial void Oncua_cAddChanged();
        partial void Oncua_dAddDateChanging(System.DateTime value);
        partial void Oncua_dAddDateChanged();
        #endregion

        public CardUserAccount_cua()
        {
            this._PreConsumeRecord_pcs = new EntitySet<PreConsumeRecord_pcs>(new Action<PreConsumeRecord_pcs>(this.attach_PreConsumeRecord_pcs), new Action<PreConsumeRecord_pcs>(this.detach_PreConsumeRecord_pcs));
            this._CardUserAccountDetail_cuad = new EntitySet<CardUserAccountDetail_cuad>(new Action<CardUserAccountDetail_cuad>(this.attach_CardUserAccountDetail_cuad), new Action<CardUserAccountDetail_cuad>(this.detach_CardUserAccountDetail_cuad));
            this._CardUserMaster_cus = default(EntityRef<CardUserMaster_cus>);
            OnCreated();
        }

        [Column(Storage = "_cua_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid cua_cRecordID
        {
            get
            {
                return this._cua_cRecordID;
            }
            set
            {
                if ((this._cua_cRecordID != value))
                {
                    this.Oncua_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._cua_cRecordID = value;
                    this.SendPropertyChanged("cua_cRecordID");
                    this.Oncua_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_cua_cCUSID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid cua_cCUSID
        {
            get
            {
                return this._cua_cCUSID;
            }
            set
            {
                if ((this._cua_cCUSID != value))
                {
                    if (this._CardUserMaster_cus.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Oncua_cCUSIDChanging(value);
                    this.SendPropertyChanging();
                    this._cua_cCUSID = value;
                    this.SendPropertyChanged("cua_cCUSID");
                    this.Oncua_cCUSIDChanged();
                }
            }
        }

        [Column(Storage = "_cua_fOriginalBalance", DbType = "Decimal(18,2) NOT NULL")]
        public decimal cua_fOriginalBalance
        {
            get
            {
                return this._cua_fOriginalBalance;
            }
            set
            {
                if ((this._cua_fOriginalBalance != value))
                {
                    this.Oncua_fOriginalBalanceChanging(value);
                    this.SendPropertyChanging();
                    this._cua_fOriginalBalance = value;
                    this.SendPropertyChanged("cua_fOriginalBalance");
                    this.Oncua_fOriginalBalanceChanged();
                }
            }
        }

        [Column(Storage = "_cua_fCurrentBalance", DbType = "Decimal(18,2) NOT NULL")]
        public decimal cua_fCurrentBalance
        {
            get
            {
                return this._cua_fCurrentBalance;
            }
            set
            {
                if ((this._cua_fCurrentBalance != value))
                {
                    this.Oncua_fCurrentBalanceChanging(value);
                    this.SendPropertyChanging();
                    this._cua_fCurrentBalance = value;
                    this.SendPropertyChanged("cua_fCurrentBalance");
                    this.Oncua_fCurrentBalanceChanged();
                }
            }
        }

        [Column(Storage = "_cua_dLastSyncTime", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime cua_dLastSyncTime
        {
            get
            {
                return this._cua_dLastSyncTime;
            }
            set
            {
                if ((this._cua_dLastSyncTime != value))
                {
                    this.Oncua_dLastSyncTimeChanging(value);
                    this.SendPropertyChanging();
                    this._cua_dLastSyncTime = value;
                    this.SendPropertyChanged("cua_dLastSyncTime");
                    this.Oncua_dLastSyncTimeChanged();
                }
            }
        }

        [Column(Storage = "_cua_lIsActive", DbType = "Bit NOT NULL")]
        public bool cua_lIsActive
        {
            get
            {
                return this._cua_lIsActive;
            }
            set
            {
                if ((this._cua_lIsActive != value))
                {
                    this.Oncua_lIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._cua_lIsActive = value;
                    this.SendPropertyChanged("cua_lIsActive");
                    this.Oncua_lIsActiveChanged();
                }
            }
        }

        [Column(Storage = "_cua_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string cua_cAdd
        {
            get
            {
                return this._cua_cAdd;
            }
            set
            {
                if ((this._cua_cAdd != value))
                {
                    this.Oncua_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._cua_cAdd = value;
                    this.SendPropertyChanged("cua_cAdd");
                    this.Oncua_cAddChanged();
                }
            }
        }

        [Column(Storage = "_cua_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime cua_dAddDate
        {
            get
            {
                return this._cua_dAddDate;
            }
            set
            {
                if ((this._cua_dAddDate != value))
                {
                    this.Oncua_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._cua_dAddDate = value;
                    this.SendPropertyChanged("cua_dAddDate");
                    this.Oncua_dAddDateChanged();
                }
            }
        }

        [Association(Name = "CardUserAccount_cua_PreConsumeRecord_pcs", Storage = "_PreConsumeRecord_pcs", ThisKey = "cua_cRecordID", OtherKey = "pcs_cAccountID")]
        public EntitySet<PreConsumeRecord_pcs> PreConsumeRecord_pcs
        {
            get
            {
                return this._PreConsumeRecord_pcs;
            }
            set
            {
                this._PreConsumeRecord_pcs.Assign(value);
            }
        }

        [Association(Name = "CardUserAccount_cua_CardUserAccountDetail_cuad", Storage = "_CardUserAccountDetail_cuad", ThisKey = "cua_cRecordID", OtherKey = "cuad_cCUAID")]
        public EntitySet<CardUserAccountDetail_cuad> CardUserAccountDetail_cuad
        {
            get
            {
                return this._CardUserAccountDetail_cuad;
            }
            set
            {
                this._CardUserAccountDetail_cuad.Assign(value);
            }
        }

        [Association(Name = "CardUserMaster_cus_CardUserAccount_cua", Storage = "_CardUserMaster_cus", ThisKey = "cua_cCUSID", OtherKey = "cus_cRecordID", IsForeignKey = false)]
        public CardUserMaster_cus CardUserMaster_cus
        {
            get
            {
                return this._CardUserMaster_cus.Entity;
            }
            set
            {
                CardUserMaster_cus previousValue = this._CardUserMaster_cus.Entity;
                if (((previousValue != value)
                            || (this._CardUserMaster_cus.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CardUserMaster_cus.Entity = null;
                        previousValue.CardUserAccount_cua.Remove(this);
                    }
                    this._CardUserMaster_cus.Entity = value;
                    if ((value != null))
                    {
                        value.CardUserAccount_cua.Add(this);
                        this._cua_cCUSID = value.cus_cRecordID;
                    }
                    else
                    {
                        this._cua_cCUSID = default(System.Guid);
                    }
                    this.SendPropertyChanged("CardUserMaster_cus");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_PreConsumeRecord_pcs(PreConsumeRecord_pcs entity)
        {
            this.SendPropertyChanging();
            entity.CardUserAccount_cua = this;
        }

        private void detach_PreConsumeRecord_pcs(PreConsumeRecord_pcs entity)
        {
            this.SendPropertyChanging();
            entity.CardUserAccount_cua = null;
        }

        private void attach_CardUserAccountDetail_cuad(CardUserAccountDetail_cuad entity)
        {
            this.SendPropertyChanging();
            entity.CardUserAccount_cua = this;
        }

        private void detach_CardUserAccountDetail_cuad(CardUserAccountDetail_cuad entity)
        {
            this.SendPropertyChanging();
            entity.CardUserAccount_cua = null;
        }
    }

    [Table(Name = "dbo.ChangeClassRecord_ccr")]
    public partial class ChangeClassRecord_ccr : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ccr_iID;

        private System.Guid _ccr_cCardUserMasterID;

        private System.Guid _ccr_cClassID;

        private System.Guid _ccr_cMasterID;

        private string _ccr_cStudentID;

        private System.DateTime _ccr_dAddDate;

        private EntitySet<ClassMaster_csm> _ClassMaster_csm;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onccr_iIDChanging(int value);
        partial void Onccr_iIDChanged();
        partial void Onccr_cCardUserMasterIDChanging(System.Guid value);
        partial void Onccr_cCardUserMasterIDChanged();
        partial void Onccr_cClassIDChanging(System.Guid value);
        partial void Onccr_cClassIDChanged();
        partial void Onccr_cMasterIDChanging(System.Guid value);
        partial void Onccr_cMasterIDChanged();
        partial void Onccr_cStudentIDChanging(string value);
        partial void Onccr_cStudentIDChanged();
        partial void Onccr_dAddDateChanging(System.DateTime value);
        partial void Onccr_dAddDateChanged();
        #endregion

        public ChangeClassRecord_ccr()
        {
            this._ClassMaster_csm = new EntitySet<ClassMaster_csm>(new Action<ClassMaster_csm>(this.attach_ClassMaster_csm), new Action<ClassMaster_csm>(this.detach_ClassMaster_csm));
            OnCreated();
        }

        [Column(Storage = "_ccr_iID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ccr_iID
        {
            get
            {
                return this._ccr_iID;
            }
            set
            {
                if ((this._ccr_iID != value))
                {
                    this.Onccr_iIDChanging(value);
                    this.SendPropertyChanging();
                    this._ccr_iID = value;
                    this.SendPropertyChanged("ccr_iID");
                    this.Onccr_iIDChanged();
                }
            }
        }

        [Column(Storage = "_ccr_cCardUserMasterID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid ccr_cCardUserMasterID
        {
            get
            {
                return this._ccr_cCardUserMasterID;
            }
            set
            {
                if ((this._ccr_cCardUserMasterID != value))
                {
                    this.Onccr_cCardUserMasterIDChanging(value);
                    this.SendPropertyChanging();
                    this._ccr_cCardUserMasterID = value;
                    this.SendPropertyChanged("ccr_cCardUserMasterID");
                    this.Onccr_cCardUserMasterIDChanged();
                }
            }
        }

        [Column(Storage = "_ccr_cClassID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid ccr_cClassID
        {
            get
            {
                return this._ccr_cClassID;
            }
            set
            {
                if ((this._ccr_cClassID != value))
                {
                    this.Onccr_cClassIDChanging(value);
                    this.SendPropertyChanging();
                    this._ccr_cClassID = value;
                    this.SendPropertyChanged("ccr_cClassID");
                    this.Onccr_cClassIDChanged();
                }
            }
        }

        [Column(Storage = "_ccr_cMasterID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid ccr_cMasterID
        {
            get
            {
                return this._ccr_cMasterID;
            }
            set
            {
                if ((this._ccr_cMasterID != value))
                {
                    this.Onccr_cMasterIDChanging(value);
                    this.SendPropertyChanging();
                    this._ccr_cMasterID = value;
                    this.SendPropertyChanged("ccr_cMasterID");
                    this.Onccr_cMasterIDChanged();
                }
            }
        }

        [Column(Storage = "_ccr_cStudentID", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ccr_cStudentID
        {
            get
            {
                return this._ccr_cStudentID;
            }
            set
            {
                if ((this._ccr_cStudentID != value))
                {
                    this.Onccr_cStudentIDChanging(value);
                    this.SendPropertyChanging();
                    this._ccr_cStudentID = value;
                    this.SendPropertyChanged("ccr_cStudentID");
                    this.Onccr_cStudentIDChanged();
                }
            }
        }

        [Column(Storage = "_ccr_dAddDate", DbType = "DateTime NOT NULL")]
        public System.DateTime ccr_dAddDate
        {
            get
            {
                return this._ccr_dAddDate;
            }
            set
            {
                if ((this._ccr_dAddDate != value))
                {
                    this.Onccr_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._ccr_dAddDate = value;
                    this.SendPropertyChanged("ccr_dAddDate");
                    this.Onccr_dAddDateChanged();
                }
            }
        }

        [Association(Name = "ChangeClassRecord_ccr_ClassMaster_csm", Storage = "_ClassMaster_csm", ThisKey = "ccr_cClassID", OtherKey = "csm_cRecordID")]
        public EntitySet<ClassMaster_csm> ClassMaster_csm
        {
            get
            {
                return this._ClassMaster_csm;
            }
            set
            {
                this._ClassMaster_csm.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ClassMaster_csm(ClassMaster_csm entity)
        {
            this.SendPropertyChanging();
            entity.ChangeClassRecord_ccr = this;
        }

        private void detach_ClassMaster_csm(ClassMaster_csm entity)
        {
            this.SendPropertyChanging();
            entity.ChangeClassRecord_ccr = null;
        }
    }

    [Table(Name = "dbo.GradeMaster_gdm")]
    public partial class GradeMaster_gdm : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _gdm_cRecordID;

        private string _gdm_cGradeName;

        private System.Nullable<System.Guid> _gdm_cPraepostorID;

        private string _gdm_cAbbreviation;

        private string _gdm_cRemark;

        private string _gdm_cAdd;

        private System.DateTime _gdm_dAddDate;

        private string _gdm_cLast;

        private System.DateTime _gdm_cLastDate;

        private EntitySet<ClassMaster_csm> _ClassMaster_csm;

        private EntityRef<CardUserMaster_cus> _CardUserMaster_cus;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Ongdm_cRecordIDChanging(System.Guid value);
        partial void Ongdm_cRecordIDChanged();
        partial void Ongdm_cGradeNameChanging(string value);
        partial void Ongdm_cGradeNameChanged();
        partial void Ongdm_cPraepostorIDChanging(System.Nullable<System.Guid> value);
        partial void Ongdm_cPraepostorIDChanged();
        partial void Ongdm_cAbbreviationChanging(string value);
        partial void Ongdm_cAbbreviationChanged();
        partial void Ongdm_cRemarkChanging(string value);
        partial void Ongdm_cRemarkChanged();
        partial void Ongdm_cAddChanging(string value);
        partial void Ongdm_cAddChanged();
        partial void Ongdm_dAddDateChanging(System.DateTime value);
        partial void Ongdm_dAddDateChanged();
        partial void Ongdm_cLastChanging(string value);
        partial void Ongdm_cLastChanged();
        partial void Ongdm_cLastDateChanging(System.DateTime value);
        partial void Ongdm_cLastDateChanged();
        #endregion

        public GradeMaster_gdm()
        {
            this._ClassMaster_csm = new EntitySet<ClassMaster_csm>(new Action<ClassMaster_csm>(this.attach_ClassMaster_csm), new Action<ClassMaster_csm>(this.detach_ClassMaster_csm));
            this._CardUserMaster_cus = default(EntityRef<CardUserMaster_cus>);
            OnCreated();
        }

        [Column(Storage = "_gdm_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid gdm_cRecordID
        {
            get
            {
                return this._gdm_cRecordID;
            }
            set
            {
                if ((this._gdm_cRecordID != value))
                {
                    this.Ongdm_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._gdm_cRecordID = value;
                    this.SendPropertyChanged("gdm_cRecordID");
                    this.Ongdm_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_gdm_cGradeName", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string gdm_cGradeName
        {
            get
            {
                return this._gdm_cGradeName;
            }
            set
            {
                if ((this._gdm_cGradeName != value))
                {
                    this.Ongdm_cGradeNameChanging(value);
                    this.SendPropertyChanging();
                    this._gdm_cGradeName = value;
                    this.SendPropertyChanged("gdm_cGradeName");
                    this.Ongdm_cGradeNameChanged();
                }
            }
        }

        [Column(Storage = "_gdm_cPraepostorID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> gdm_cPraepostorID
        {
            get
            {
                return this._gdm_cPraepostorID;
            }
            set
            {
                if ((this._gdm_cPraepostorID != value))
                {
                    if (this._CardUserMaster_cus.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Ongdm_cPraepostorIDChanging(value);
                    this.SendPropertyChanging();
                    this._gdm_cPraepostorID = value;
                    this.SendPropertyChanged("gdm_cPraepostorID");
                    this.Ongdm_cPraepostorIDChanged();
                }
            }
        }

        [Column(Storage = "_gdm_cAbbreviation", DbType = "NVarChar(10) NOT NULL", CanBeNull = false)]
        public string gdm_cAbbreviation
        {
            get
            {
                return this._gdm_cAbbreviation;
            }
            set
            {
                if ((this._gdm_cAbbreviation != value))
                {
                    this.Ongdm_cAbbreviationChanging(value);
                    this.SendPropertyChanging();
                    this._gdm_cAbbreviation = value;
                    this.SendPropertyChanged("gdm_cAbbreviation");
                    this.Ongdm_cAbbreviationChanged();
                }
            }
        }

        [Column(Storage = "_gdm_cRemark", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string gdm_cRemark
        {
            get
            {
                return this._gdm_cRemark;
            }
            set
            {
                if ((this._gdm_cRemark != value))
                {
                    this.Ongdm_cRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._gdm_cRemark = value;
                    this.SendPropertyChanged("gdm_cRemark");
                    this.Ongdm_cRemarkChanged();
                }
            }
        }

        [Column(Storage = "_gdm_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string gdm_cAdd
        {
            get
            {
                return this._gdm_cAdd;
            }
            set
            {
                if ((this._gdm_cAdd != value))
                {
                    this.Ongdm_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._gdm_cAdd = value;
                    this.SendPropertyChanged("gdm_cAdd");
                    this.Ongdm_cAddChanged();
                }
            }
        }

        [Column(Storage = "_gdm_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime gdm_dAddDate
        {
            get
            {
                return this._gdm_dAddDate;
            }
            set
            {
                if ((this._gdm_dAddDate != value))
                {
                    this.Ongdm_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._gdm_dAddDate = value;
                    this.SendPropertyChanged("gdm_dAddDate");
                    this.Ongdm_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_gdm_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string gdm_cLast
        {
            get
            {
                return this._gdm_cLast;
            }
            set
            {
                if ((this._gdm_cLast != value))
                {
                    this.Ongdm_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._gdm_cLast = value;
                    this.SendPropertyChanged("gdm_cLast");
                    this.Ongdm_cLastChanged();
                }
            }
        }

        [Column(Storage = "_gdm_cLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime gdm_cLastDate
        {
            get
            {
                return this._gdm_cLastDate;
            }
            set
            {
                if ((this._gdm_cLastDate != value))
                {
                    this.Ongdm_cLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._gdm_cLastDate = value;
                    this.SendPropertyChanged("gdm_cLastDate");
                    this.Ongdm_cLastDateChanged();
                }
            }
        }

        [Association(Name = "GradeMaster_gdm_ClassMaster_csm", Storage = "_ClassMaster_csm", ThisKey = "gdm_cRecordID", OtherKey = "csm_cGDMID")]
        public EntitySet<ClassMaster_csm> ClassMaster_csm
        {
            get
            {
                return this._ClassMaster_csm;
            }
            set
            {
                this._ClassMaster_csm.Assign(value);
            }
        }

        [Association(Name = "CardUserMaster_cus_GradeMaster_gdm", Storage = "_CardUserMaster_cus", ThisKey = "gdm_cPraepostorID", OtherKey = "cus_cRecordID", IsForeignKey = false)]
        public CardUserMaster_cus CardUserMaster_cus
        {
            get
            {
                return this._CardUserMaster_cus.Entity;
            }
            set
            {
                CardUserMaster_cus previousValue = this._CardUserMaster_cus.Entity;
                if (((previousValue != value)
                            || (this._CardUserMaster_cus.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CardUserMaster_cus.Entity = null;
                        previousValue.GradeMaster_gdm.Remove(this);
                    }
                    this._CardUserMaster_cus.Entity = value;
                    if ((value != null))
                    {
                        value.GradeMaster_gdm.Add(this);
                        this._gdm_cPraepostorID = value.cus_cRecordID;
                    }
                    else
                    {
                        this._gdm_cPraepostorID = default(Nullable<System.Guid>);
                    }
                    this.SendPropertyChanged("CardUserMaster_cus");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ClassMaster_csm(ClassMaster_csm entity)
        {
            this.SendPropertyChanging();
            entity.GradeMaster_gdm = this;
        }

        private void detach_ClassMaster_csm(ClassMaster_csm entity)
        {
            this.SendPropertyChanging();
            entity.GradeMaster_gdm = null;
        }
    }

    [Table(Name = "dbo.SystemAccountDetail_sad")]
    public partial class SystemAccountDetail_sad : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _sad_cRecordID;

        private decimal _sad_cFLowMoney;

        private string _sad_cFlowType;

        private System.Nullable<System.Guid> _sad_cConsumeID;

        private string _sad_cDesc;

        private string _sad_cOpt;

        private System.DateTime _sad_dOptTime;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onsad_cRecordIDChanging(System.Guid value);
        partial void Onsad_cRecordIDChanged();
        partial void Onsad_cFLowMoneyChanging(decimal value);
        partial void Onsad_cFLowMoneyChanged();
        partial void Onsad_cFlowTypeChanging(string value);
        partial void Onsad_cFlowTypeChanged();
        partial void Onsad_cConsumeIDChanging(System.Nullable<System.Guid> value);
        partial void Onsad_cConsumeIDChanged();
        partial void Onsad_cDescChanging(string value);
        partial void Onsad_cDescChanged();
        partial void Onsad_cOptChanging(string value);
        partial void Onsad_cOptChanged();
        partial void Onsad_dOptTimeChanging(System.DateTime value);
        partial void Onsad_dOptTimeChanged();
        #endregion

        public SystemAccountDetail_sad()
        {
            OnCreated();
        }

        [Column(Storage = "_sad_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid sad_cRecordID
        {
            get
            {
                return this._sad_cRecordID;
            }
            set
            {
                if ((this._sad_cRecordID != value))
                {
                    this.Onsad_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._sad_cRecordID = value;
                    this.SendPropertyChanged("sad_cRecordID");
                    this.Onsad_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_sad_cFLowMoney", DbType = "Decimal(18,2) NOT NULL")]
        public decimal sad_cFLowMoney
        {
            get
            {
                return this._sad_cFLowMoney;
            }
            set
            {
                if ((this._sad_cFLowMoney != value))
                {
                    this.Onsad_cFLowMoneyChanging(value);
                    this.SendPropertyChanging();
                    this._sad_cFLowMoney = value;
                    this.SendPropertyChanged("sad_cFLowMoney");
                    this.Onsad_cFLowMoneyChanged();
                }
            }
        }

        [Column(Storage = "_sad_cFlowType", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string sad_cFlowType
        {
            get
            {
                return this._sad_cFlowType;
            }
            set
            {
                if ((this._sad_cFlowType != value))
                {
                    this.Onsad_cFlowTypeChanging(value);
                    this.SendPropertyChanging();
                    this._sad_cFlowType = value;
                    this.SendPropertyChanged("sad_cFlowType");
                    this.Onsad_cFlowTypeChanged();
                }
            }
        }

        [Column(Storage = "_sad_cConsumeID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> sad_cConsumeID
        {
            get
            {
                return this._sad_cConsumeID;
            }
            set
            {
                if ((this._sad_cConsumeID != value))
                {
                    this.Onsad_cConsumeIDChanging(value);
                    this.SendPropertyChanging();
                    this._sad_cConsumeID = value;
                    this.SendPropertyChanged("sad_cConsumeID");
                    this.Onsad_cConsumeIDChanged();
                }
            }
        }

        [Column(Storage = "_sad_cDesc", DbType = "NVarChar(50)")]
        public string sad_cDesc
        {
            get
            {
                return this._sad_cDesc;
            }
            set
            {
                if ((this._sad_cDesc != value))
                {
                    this.Onsad_cDescChanging(value);
                    this.SendPropertyChanging();
                    this._sad_cDesc = value;
                    this.SendPropertyChanged("sad_cDesc");
                    this.Onsad_cDescChanged();
                }
            }
        }

        [Column(Storage = "_sad_cOpt", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string sad_cOpt
        {
            get
            {
                return this._sad_cOpt;
            }
            set
            {
                if ((this._sad_cOpt != value))
                {
                    this.Onsad_cOptChanging(value);
                    this.SendPropertyChanging();
                    this._sad_cOpt = value;
                    this.SendPropertyChanged("sad_cOpt");
                    this.Onsad_cOptChanged();
                }
            }
        }

        [Column(Storage = "_sad_dOptTime", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime sad_dOptTime
        {
            get
            {
                return this._sad_dOptTime;
            }
            set
            {
                if ((this._sad_dOptTime != value))
                {
                    this.Onsad_dOptTimeChanging(value);
                    this.SendPropertyChanging();
                    this._sad_dOptTime = value;
                    this.SendPropertyChanged("sad_dOptTime");
                    this.Onsad_dOptTimeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.Sys_UserPurview_usp")]
    public partial class Sys_UserPurview_usp : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _usp_iRecordID;

        private string _usp_cUserLoginID;

        private string _usp_cRoleID;

        private int _usp_iFormID;

        private string _usp_cPurviewCode;

        private string _usp_cAdd;

        private System.DateTime _usp_dAddDate;

        private string _usp_cLast;

        private System.DateTime _usp_dLastDate;

        private EntityRef<Sys_RoleMaster_rlm> _Sys_RoleMaster_rlm;

        private EntityRef<Sys_UserMaster_usm> _Sys_UserMaster_usm;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onusp_iRecordIDChanging(int value);
        partial void Onusp_iRecordIDChanged();
        partial void Onusp_cUserLoginIDChanging(string value);
        partial void Onusp_cUserLoginIDChanged();
        partial void Onusp_cRoleIDChanging(string value);
        partial void Onusp_cRoleIDChanged();
        partial void Onusp_iFormIDChanging(int value);
        partial void Onusp_iFormIDChanged();
        partial void Onusp_cPurviewCodeChanging(string value);
        partial void Onusp_cPurviewCodeChanged();
        partial void Onusp_cAddChanging(string value);
        partial void Onusp_cAddChanged();
        partial void Onusp_dAddDateChanging(System.DateTime value);
        partial void Onusp_dAddDateChanged();
        partial void Onusp_cLastChanging(string value);
        partial void Onusp_cLastChanged();
        partial void Onusp_dLastDateChanging(System.DateTime value);
        partial void Onusp_dLastDateChanged();
        #endregion

        public Sys_UserPurview_usp()
        {
            this._Sys_RoleMaster_rlm = default(EntityRef<Sys_RoleMaster_rlm>);
            this._Sys_UserMaster_usm = default(EntityRef<Sys_UserMaster_usm>);
            OnCreated();
        }

        [Column(Storage = "_usp_iRecordID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int usp_iRecordID
        {
            get
            {
                return this._usp_iRecordID;
            }
            set
            {
                if ((this._usp_iRecordID != value))
                {
                    this.Onusp_iRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._usp_iRecordID = value;
                    this.SendPropertyChanged("usp_iRecordID");
                    this.Onusp_iRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_usp_cUserLoginID", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string usp_cUserLoginID
        {
            get
            {
                return this._usp_cUserLoginID;
            }
            set
            {
                if ((this._usp_cUserLoginID != value))
                {
                    if (this._Sys_UserMaster_usm.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onusp_cUserLoginIDChanging(value);
                    this.SendPropertyChanging();
                    this._usp_cUserLoginID = value;
                    this.SendPropertyChanged("usp_cUserLoginID");
                    this.Onusp_cUserLoginIDChanged();
                }
            }
        }

        [Column(Storage = "_usp_cRoleID", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string usp_cRoleID
        {
            get
            {
                return this._usp_cRoleID;
            }
            set
            {
                if ((this._usp_cRoleID != value))
                {
                    if (this._Sys_RoleMaster_rlm.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onusp_cRoleIDChanging(value);
                    this.SendPropertyChanging();
                    this._usp_cRoleID = value;
                    this.SendPropertyChanged("usp_cRoleID");
                    this.Onusp_cRoleIDChanged();
                }
            }
        }

        [Column(Storage = "_usp_iFormID", DbType = "Int NOT NULL")]
        public int usp_iFormID
        {
            get
            {
                return this._usp_iFormID;
            }
            set
            {
                if ((this._usp_iFormID != value))
                {
                    this.Onusp_iFormIDChanging(value);
                    this.SendPropertyChanging();
                    this._usp_iFormID = value;
                    this.SendPropertyChanged("usp_iFormID");
                    this.Onusp_iFormIDChanged();
                }
            }
        }

        [Column(Storage = "_usp_cPurviewCode", DbType = "VarChar(60) NOT NULL", CanBeNull = false)]
        public string usp_cPurviewCode
        {
            get
            {
                return this._usp_cPurviewCode;
            }
            set
            {
                if ((this._usp_cPurviewCode != value))
                {
                    this.Onusp_cPurviewCodeChanging(value);
                    this.SendPropertyChanging();
                    this._usp_cPurviewCode = value;
                    this.SendPropertyChanged("usp_cPurviewCode");
                    this.Onusp_cPurviewCodeChanged();
                }
            }
        }

        [Column(Storage = "_usp_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string usp_cAdd
        {
            get
            {
                return this._usp_cAdd;
            }
            set
            {
                if ((this._usp_cAdd != value))
                {
                    this.Onusp_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._usp_cAdd = value;
                    this.SendPropertyChanged("usp_cAdd");
                    this.Onusp_cAddChanged();
                }
            }
        }

        [Column(Storage = "_usp_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime usp_dAddDate
        {
            get
            {
                return this._usp_dAddDate;
            }
            set
            {
                if ((this._usp_dAddDate != value))
                {
                    this.Onusp_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._usp_dAddDate = value;
                    this.SendPropertyChanged("usp_dAddDate");
                    this.Onusp_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_usp_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string usp_cLast
        {
            get
            {
                return this._usp_cLast;
            }
            set
            {
                if ((this._usp_cLast != value))
                {
                    this.Onusp_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._usp_cLast = value;
                    this.SendPropertyChanged("usp_cLast");
                    this.Onusp_cLastChanged();
                }
            }
        }

        [Column(Storage = "_usp_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime usp_dLastDate
        {
            get
            {
                return this._usp_dLastDate;
            }
            set
            {
                if ((this._usp_dLastDate != value))
                {
                    this.Onusp_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._usp_dLastDate = value;
                    this.SendPropertyChanged("usp_dLastDate");
                    this.Onusp_dLastDateChanged();
                }
            }
        }

        [Association(Name = "Sys_RoleMaster_rlm_Sys_UserPurview_usp", Storage = "_Sys_RoleMaster_rlm", ThisKey = "usp_cRoleID", OtherKey = "rlm_cRoleID", IsForeignKey = false)]
        public Sys_RoleMaster_rlm Sys_RoleMaster_rlm
        {
            get
            {
                return this._Sys_RoleMaster_rlm.Entity;
            }
            set
            {
                Sys_RoleMaster_rlm previousValue = this._Sys_RoleMaster_rlm.Entity;
                if (((previousValue != value)
                            || (this._Sys_RoleMaster_rlm.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Sys_RoleMaster_rlm.Entity = null;
                        previousValue.Sys_UserPurview_usp.Remove(this);
                    }
                    this._Sys_RoleMaster_rlm.Entity = value;
                    if ((value != null))
                    {
                        value.Sys_UserPurview_usp.Add(this);
                        this._usp_cRoleID = value.rlm_cRoleID;
                    }
                    else
                    {
                        this._usp_cRoleID = default(string);
                    }
                    this.SendPropertyChanged("Sys_RoleMaster_rlm");
                }
            }
        }

        [Association(Name = "Sys_UserMaster_usm_Sys_UserPurview_usp", Storage = "_Sys_UserMaster_usm", ThisKey = "usp_cUserLoginID", OtherKey = "usm_cUserLoginID", IsForeignKey = false)]
        public Sys_UserMaster_usm Sys_UserMaster_usm
        {
            get
            {
                return this._Sys_UserMaster_usm.Entity;
            }
            set
            {
                Sys_UserMaster_usm previousValue = this._Sys_UserMaster_usm.Entity;
                if (((previousValue != value)
                            || (this._Sys_UserMaster_usm.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Sys_UserMaster_usm.Entity = null;
                        previousValue.Sys_UserPurview_usp.Remove(this);
                    }
                    this._Sys_UserMaster_usm.Entity = value;
                    if ((value != null))
                    {
                        value.Sys_UserPurview_usp.Add(this);
                        this._usp_cUserLoginID = value.usm_cUserLoginID;
                    }
                    else
                    {
                        this._usp_cUserLoginID = default(string);
                    }
                    this.SendPropertyChanged("Sys_UserMaster_usm");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.PaymentUDMealState_pms")]
    public partial class PaymentUDMealState_pms : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _pms_cRecordID;

        private System.Nullable<System.DateTime> _pms_dStartDate;

        private System.Nullable<System.DateTime> _pms_dEndDate;

        private System.Nullable<System.Guid> _pms_cCardUserID;

        private System.Nullable<System.Guid> _pms_cClassID;

        private System.Nullable<System.Guid> _pms_cGradeID;

        private System.Nullable<bool> _pms_cBreakfast;

        private System.Nullable<bool> _pms_cLunch;

        private System.Nullable<bool> _pms_cDinner;

        private System.Nullable<bool> _pms_cSnack;

        private string _pms_cAdd;

        private System.DateTime _pms_dAddDate;

        private string _pms_cLast;

        private System.DateTime _pms_dLastDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onpms_cRecordIDChanging(System.Guid value);
        partial void Onpms_cRecordIDChanged();
        partial void Onpms_dStartDateChanging(System.Nullable<System.DateTime> value);
        partial void Onpms_dStartDateChanged();
        partial void Onpms_dEndDateChanging(System.Nullable<System.DateTime> value);
        partial void Onpms_dEndDateChanged();
        partial void Onpms_cCardUserIDChanging(System.Nullable<System.Guid> value);
        partial void Onpms_cCardUserIDChanged();
        partial void Onpms_cClassIDChanging(System.Nullable<System.Guid> value);
        partial void Onpms_cClassIDChanged();
        partial void Onpms_cGradeIDChanging(System.Nullable<System.Guid> value);
        partial void Onpms_cGradeIDChanged();
        partial void Onpms_cBreakfastChanging(System.Nullable<bool> value);
        partial void Onpms_cBreakfastChanged();
        partial void Onpms_cLunchChanging(System.Nullable<bool> value);
        partial void Onpms_cLunchChanged();
        partial void Onpms_cDinnerChanging(System.Nullable<bool> value);
        partial void Onpms_cDinnerChanged();
        partial void Onpms_cSnackChanging(System.Nullable<bool> value);
        partial void Onpms_cSnackChanged();
        partial void Onpms_cAddChanging(string value);
        partial void Onpms_cAddChanged();
        partial void Onpms_dAddDateChanging(System.DateTime value);
        partial void Onpms_dAddDateChanged();
        partial void Onpms_cLastChanging(string value);
        partial void Onpms_cLastChanged();
        partial void Onpms_dLastDateChanging(System.DateTime value);
        partial void Onpms_dLastDateChanged();
        #endregion

        public PaymentUDMealState_pms()
        {
            OnCreated();
        }

        [Column(Storage = "_pms_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid pms_cRecordID
        {
            get
            {
                return this._pms_cRecordID;
            }
            set
            {
                if ((this._pms_cRecordID != value))
                {
                    this.Onpms_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._pms_cRecordID = value;
                    this.SendPropertyChanged("pms_cRecordID");
                    this.Onpms_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_pms_dStartDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> pms_dStartDate
        {
            get
            {
                return this._pms_dStartDate;
            }
            set
            {
                if ((this._pms_dStartDate != value))
                {
                    this.Onpms_dStartDateChanging(value);
                    this.SendPropertyChanging();
                    this._pms_dStartDate = value;
                    this.SendPropertyChanged("pms_dStartDate");
                    this.Onpms_dStartDateChanged();
                }
            }
        }

        [Column(Storage = "_pms_dEndDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> pms_dEndDate
        {
            get
            {
                return this._pms_dEndDate;
            }
            set
            {
                if ((this._pms_dEndDate != value))
                {
                    this.Onpms_dEndDateChanging(value);
                    this.SendPropertyChanging();
                    this._pms_dEndDate = value;
                    this.SendPropertyChanged("pms_dEndDate");
                    this.Onpms_dEndDateChanged();
                }
            }
        }

        [Column(Storage = "_pms_cCardUserID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> pms_cCardUserID
        {
            get
            {
                return this._pms_cCardUserID;
            }
            set
            {
                if ((this._pms_cCardUserID != value))
                {
                    this.Onpms_cCardUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._pms_cCardUserID = value;
                    this.SendPropertyChanged("pms_cCardUserID");
                    this.Onpms_cCardUserIDChanged();
                }
            }
        }

        [Column(Storage = "_pms_cClassID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> pms_cClassID
        {
            get
            {
                return this._pms_cClassID;
            }
            set
            {
                if ((this._pms_cClassID != value))
                {
                    this.Onpms_cClassIDChanging(value);
                    this.SendPropertyChanging();
                    this._pms_cClassID = value;
                    this.SendPropertyChanged("pms_cClassID");
                    this.Onpms_cClassIDChanged();
                }
            }
        }

        [Column(Storage = "_pms_cGradeID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> pms_cGradeID
        {
            get
            {
                return this._pms_cGradeID;
            }
            set
            {
                if ((this._pms_cGradeID != value))
                {
                    this.Onpms_cGradeIDChanging(value);
                    this.SendPropertyChanging();
                    this._pms_cGradeID = value;
                    this.SendPropertyChanged("pms_cGradeID");
                    this.Onpms_cGradeIDChanged();
                }
            }
        }

        [Column(Storage = "_pms_cBreakfast", DbType = "Bit")]
        public System.Nullable<bool> pms_cBreakfast
        {
            get
            {
                return this._pms_cBreakfast;
            }
            set
            {
                if ((this._pms_cBreakfast != value))
                {
                    this.Onpms_cBreakfastChanging(value);
                    this.SendPropertyChanging();
                    this._pms_cBreakfast = value;
                    this.SendPropertyChanged("pms_cBreakfast");
                    this.Onpms_cBreakfastChanged();
                }
            }
        }

        [Column(Storage = "_pms_cLunch", DbType = "Bit")]
        public System.Nullable<bool> pms_cLunch
        {
            get
            {
                return this._pms_cLunch;
            }
            set
            {
                if ((this._pms_cLunch != value))
                {
                    this.Onpms_cLunchChanging(value);
                    this.SendPropertyChanging();
                    this._pms_cLunch = value;
                    this.SendPropertyChanged("pms_cLunch");
                    this.Onpms_cLunchChanged();
                }
            }
        }

        [Column(Storage = "_pms_cDinner", DbType = "Bit")]
        public System.Nullable<bool> pms_cDinner
        {
            get
            {
                return this._pms_cDinner;
            }
            set
            {
                if ((this._pms_cDinner != value))
                {
                    this.Onpms_cDinnerChanging(value);
                    this.SendPropertyChanging();
                    this._pms_cDinner = value;
                    this.SendPropertyChanged("pms_cDinner");
                    this.Onpms_cDinnerChanged();
                }
            }
        }

        [Column(Storage = "_pms_cSnack", DbType = "Bit")]
        public System.Nullable<bool> pms_cSnack
        {
            get
            {
                return this._pms_cSnack;
            }
            set
            {
                if ((this._pms_cSnack != value))
                {
                    this.Onpms_cSnackChanging(value);
                    this.SendPropertyChanging();
                    this._pms_cSnack = value;
                    this.SendPropertyChanged("pms_cSnack");
                    this.Onpms_cSnackChanged();
                }
            }
        }

        [Column(Storage = "_pms_cAdd", DbType = "NVarChar(40) NOT NULL", CanBeNull = false)]
        public string pms_cAdd
        {
            get
            {
                return this._pms_cAdd;
            }
            set
            {
                if ((this._pms_cAdd != value))
                {
                    this.Onpms_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._pms_cAdd = value;
                    this.SendPropertyChanged("pms_cAdd");
                    this.Onpms_cAddChanged();
                }
            }
        }

        [Column(Storage = "_pms_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime pms_dAddDate
        {
            get
            {
                return this._pms_dAddDate;
            }
            set
            {
                if ((this._pms_dAddDate != value))
                {
                    this.Onpms_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._pms_dAddDate = value;
                    this.SendPropertyChanged("pms_dAddDate");
                    this.Onpms_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_pms_cLast", DbType = "NVarChar(40) NOT NULL", CanBeNull = false)]
        public string pms_cLast
        {
            get
            {
                return this._pms_cLast;
            }
            set
            {
                if ((this._pms_cLast != value))
                {
                    this.Onpms_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._pms_cLast = value;
                    this.SendPropertyChanged("pms_cLast");
                    this.Onpms_cLastChanged();
                }
            }
        }

        [Column(Storage = "_pms_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime pms_dLastDate
        {
            get
            {
                return this._pms_dLastDate;
            }
            set
            {
                if ((this._pms_dLastDate != value))
                {
                    this.Onpms_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._pms_dLastDate = value;
                    this.SendPropertyChanged("pms_dLastDate");
                    this.Onpms_dLastDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.PaymentUDGeneralSetting_pus")]
    public partial class PaymentUDGeneralSetting_pus : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _pus_cRecordID;

        private System.Nullable<System.Guid> _pus_cGradeID;

        private System.Nullable<System.Guid> _pus_cCardUserID;

        private System.Nullable<System.Guid> _pus_cClassID;

        private int _pus_iWeek;

        private System.Nullable<bool> _pus_cBreakfast;

        private System.Nullable<bool> _pus_cLunch;

        private System.Nullable<bool> _pus_cDinner;

        private System.Nullable<bool> _pus_cSnack;

        private string _pus_cAdd;

        private System.DateTime _pus_dAddDate;

        private string _pus_cLast;

        private System.DateTime _pus_dLastDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onpus_cRecordIDChanging(System.Guid value);
        partial void Onpus_cRecordIDChanged();
        partial void Onpus_cGradeIDChanging(System.Nullable<System.Guid> value);
        partial void Onpus_cGradeIDChanged();
        partial void Onpus_cCardUserIDChanging(System.Nullable<System.Guid> value);
        partial void Onpus_cCardUserIDChanged();
        partial void Onpus_cClassIDChanging(System.Nullable<System.Guid> value);
        partial void Onpus_cClassIDChanged();
        partial void Onpus_iWeekChanging(int value);
        partial void Onpus_iWeekChanged();
        partial void Onpus_cBreakfastChanging(System.Nullable<bool> value);
        partial void Onpus_cBreakfastChanged();
        partial void Onpus_cLunchChanging(System.Nullable<bool> value);
        partial void Onpus_cLunchChanged();
        partial void Onpus_cDinnerChanging(System.Nullable<bool> value);
        partial void Onpus_cDinnerChanged();
        partial void Onpus_cSnackChanging(System.Nullable<bool> value);
        partial void Onpus_cSnackChanged();
        partial void Onpus_cAddChanging(string value);
        partial void Onpus_cAddChanged();
        partial void Onpus_dAddDateChanging(System.DateTime value);
        partial void Onpus_dAddDateChanged();
        partial void Onpus_cLastChanging(string value);
        partial void Onpus_cLastChanged();
        partial void Onpus_dLastDateChanging(System.DateTime value);
        partial void Onpus_dLastDateChanged();
        #endregion

        public PaymentUDGeneralSetting_pus()
        {
            OnCreated();
        }

        [Column(Storage = "_pus_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid pus_cRecordID
        {
            get
            {
                return this._pus_cRecordID;
            }
            set
            {
                if ((this._pus_cRecordID != value))
                {
                    this.Onpus_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._pus_cRecordID = value;
                    this.SendPropertyChanged("pus_cRecordID");
                    this.Onpus_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_pus_cGradeID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> pus_cGradeID
        {
            get
            {
                return this._pus_cGradeID;
            }
            set
            {
                if ((this._pus_cGradeID != value))
                {
                    this.Onpus_cGradeIDChanging(value);
                    this.SendPropertyChanging();
                    this._pus_cGradeID = value;
                    this.SendPropertyChanged("pus_cGradeID");
                    this.Onpus_cGradeIDChanged();
                }
            }
        }

        [Column(Storage = "_pus_cCardUserID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> pus_cCardUserID
        {
            get
            {
                return this._pus_cCardUserID;
            }
            set
            {
                if ((this._pus_cCardUserID != value))
                {
                    this.Onpus_cCardUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._pus_cCardUserID = value;
                    this.SendPropertyChanged("pus_cCardUserID");
                    this.Onpus_cCardUserIDChanged();
                }
            }
        }

        [Column(Storage = "_pus_cClassID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> pus_cClassID
        {
            get
            {
                return this._pus_cClassID;
            }
            set
            {
                if ((this._pus_cClassID != value))
                {
                    this.Onpus_cClassIDChanging(value);
                    this.SendPropertyChanging();
                    this._pus_cClassID = value;
                    this.SendPropertyChanged("pus_cClassID");
                    this.Onpus_cClassIDChanged();
                }
            }
        }

        [Column(Storage = "_pus_iWeek", DbType = "Int NOT NULL")]
        public int pus_iWeek
        {
            get
            {
                return this._pus_iWeek;
            }
            set
            {
                if ((this._pus_iWeek != value))
                {
                    this.Onpus_iWeekChanging(value);
                    this.SendPropertyChanging();
                    this._pus_iWeek = value;
                    this.SendPropertyChanged("pus_iWeek");
                    this.Onpus_iWeekChanged();
                }
            }
        }

        [Column(Storage = "_pus_cBreakfast", DbType = "Bit")]
        public System.Nullable<bool> pus_cBreakfast
        {
            get
            {
                return this._pus_cBreakfast;
            }
            set
            {
                if ((this._pus_cBreakfast != value))
                {
                    this.Onpus_cBreakfastChanging(value);
                    this.SendPropertyChanging();
                    this._pus_cBreakfast = value;
                    this.SendPropertyChanged("pus_cBreakfast");
                    this.Onpus_cBreakfastChanged();
                }
            }
        }

        [Column(Storage = "_pus_cLunch", DbType = "Bit")]
        public System.Nullable<bool> pus_cLunch
        {
            get
            {
                return this._pus_cLunch;
            }
            set
            {
                if ((this._pus_cLunch != value))
                {
                    this.Onpus_cLunchChanging(value);
                    this.SendPropertyChanging();
                    this._pus_cLunch = value;
                    this.SendPropertyChanged("pus_cLunch");
                    this.Onpus_cLunchChanged();
                }
            }
        }

        [Column(Storage = "_pus_cDinner", DbType = "Bit")]
        public System.Nullable<bool> pus_cDinner
        {
            get
            {
                return this._pus_cDinner;
            }
            set
            {
                if ((this._pus_cDinner != value))
                {
                    this.Onpus_cDinnerChanging(value);
                    this.SendPropertyChanging();
                    this._pus_cDinner = value;
                    this.SendPropertyChanged("pus_cDinner");
                    this.Onpus_cDinnerChanged();
                }
            }
        }

        [Column(Storage = "_pus_cSnack", DbType = "Bit")]
        public System.Nullable<bool> pus_cSnack
        {
            get
            {
                return this._pus_cSnack;
            }
            set
            {
                if ((this._pus_cSnack != value))
                {
                    this.Onpus_cSnackChanging(value);
                    this.SendPropertyChanging();
                    this._pus_cSnack = value;
                    this.SendPropertyChanged("pus_cSnack");
                    this.Onpus_cSnackChanged();
                }
            }
        }

        [Column(Storage = "_pus_cAdd", DbType = "NVarChar(40) NOT NULL", CanBeNull = false)]
        public string pus_cAdd
        {
            get
            {
                return this._pus_cAdd;
            }
            set
            {
                if ((this._pus_cAdd != value))
                {
                    this.Onpus_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._pus_cAdd = value;
                    this.SendPropertyChanged("pus_cAdd");
                    this.Onpus_cAddChanged();
                }
            }
        }

        [Column(Storage = "_pus_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime pus_dAddDate
        {
            get
            {
                return this._pus_dAddDate;
            }
            set
            {
                if ((this._pus_dAddDate != value))
                {
                    this.Onpus_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._pus_dAddDate = value;
                    this.SendPropertyChanged("pus_dAddDate");
                    this.Onpus_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_pus_cLast", DbType = "NVarChar(40) NOT NULL", CanBeNull = false)]
        public string pus_cLast
        {
            get
            {
                return this._pus_cLast;
            }
            set
            {
                if ((this._pus_cLast != value))
                {
                    this.Onpus_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._pus_cLast = value;
                    this.SendPropertyChanged("pus_cLast");
                    this.Onpus_cLastChanged();
                }
            }
        }

        [Column(Storage = "_pus_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime pus_dLastDate
        {
            get
            {
                return this._pus_dLastDate;
            }
            set
            {
                if ((this._pus_dLastDate != value))
                {
                    this.Onpus_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._pus_dLastDate = value;
                    this.SendPropertyChanged("pus_dLastDate");
                    this.Onpus_dLastDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.Sys_UserMaster_usm")]
    public partial class Sys_UserMaster_usm : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _usm_iRecordID;

        private string _usm_cUserLoginID;

        private string _usm_cChaName;

        private string _usm_cPwd;

        private string _usm_cEmail;

        private bool _usm_iLock;

        private string _usm_cRemark;

        private string _usm_cAdd;

        private System.DateTime _usm_dAddDate;

        private string _usm_cLast;

        private System.DateTime _usm_dLastDate;

        private EntitySet<Sys_UserRoles_usr> _Sys_UserRoles_usr;

        private EntitySet<Sys_UserPurview_usp> _Sys_UserPurview_usp;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onusm_iRecordIDChanging(int value);
        partial void Onusm_iRecordIDChanged();
        partial void Onusm_cUserLoginIDChanging(string value);
        partial void Onusm_cUserLoginIDChanged();
        partial void Onusm_cChaNameChanging(string value);
        partial void Onusm_cChaNameChanged();
        partial void Onusm_cPwdChanging(string value);
        partial void Onusm_cPwdChanged();
        partial void Onusm_cEmailChanging(string value);
        partial void Onusm_cEmailChanged();
        partial void Onusm_iLockChanging(bool value);
        partial void Onusm_iLockChanged();
        partial void Onusm_cRemarkChanging(string value);
        partial void Onusm_cRemarkChanged();
        partial void Onusm_cAddChanging(string value);
        partial void Onusm_cAddChanged();
        partial void Onusm_dAddDateChanging(System.DateTime value);
        partial void Onusm_dAddDateChanged();
        partial void Onusm_cLastChanging(string value);
        partial void Onusm_cLastChanged();
        partial void Onusm_dLastDateChanging(System.DateTime value);
        partial void Onusm_dLastDateChanged();
        #endregion

        public Sys_UserMaster_usm()
        {
            this._Sys_UserRoles_usr = new EntitySet<Sys_UserRoles_usr>(new Action<Sys_UserRoles_usr>(this.attach_Sys_UserRoles_usr), new Action<Sys_UserRoles_usr>(this.detach_Sys_UserRoles_usr));
            this._Sys_UserPurview_usp = new EntitySet<Sys_UserPurview_usp>(new Action<Sys_UserPurview_usp>(this.attach_Sys_UserPurview_usp), new Action<Sys_UserPurview_usp>(this.detach_Sys_UserPurview_usp));
            OnCreated();
        }

        [Column(Storage = "_usm_iRecordID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int usm_iRecordID
        {
            get
            {
                return this._usm_iRecordID;
            }
            set
            {
                if ((this._usm_iRecordID != value))
                {
                    this.Onusm_iRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._usm_iRecordID = value;
                    this.SendPropertyChanged("usm_iRecordID");
                    this.Onusm_iRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_usm_cUserLoginID", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string usm_cUserLoginID
        {
            get
            {
                return this._usm_cUserLoginID;
            }
            set
            {
                if ((this._usm_cUserLoginID != value))
                {
                    this.Onusm_cUserLoginIDChanging(value);
                    this.SendPropertyChanging();
                    this._usm_cUserLoginID = value;
                    this.SendPropertyChanged("usm_cUserLoginID");
                    this.Onusm_cUserLoginIDChanged();
                }
            }
        }

        [Column(Storage = "_usm_cChaName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string usm_cChaName
        {
            get
            {
                return this._usm_cChaName;
            }
            set
            {
                if ((this._usm_cChaName != value))
                {
                    this.Onusm_cChaNameChanging(value);
                    this.SendPropertyChanging();
                    this._usm_cChaName = value;
                    this.SendPropertyChanged("usm_cChaName");
                    this.Onusm_cChaNameChanged();
                }
            }
        }

        [Column(Storage = "_usm_cPwd", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string usm_cPwd
        {
            get
            {
                return this._usm_cPwd;
            }
            set
            {
                if ((this._usm_cPwd != value))
                {
                    this.Onusm_cPwdChanging(value);
                    this.SendPropertyChanging();
                    this._usm_cPwd = value;
                    this.SendPropertyChanged("usm_cPwd");
                    this.Onusm_cPwdChanged();
                }
            }
        }

        [Column(Storage = "_usm_cEmail", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string usm_cEmail
        {
            get
            {
                return this._usm_cEmail;
            }
            set
            {
                if ((this._usm_cEmail != value))
                {
                    this.Onusm_cEmailChanging(value);
                    this.SendPropertyChanging();
                    this._usm_cEmail = value;
                    this.SendPropertyChanged("usm_cEmail");
                    this.Onusm_cEmailChanged();
                }
            }
        }

        [Column(Storage = "_usm_iLock", DbType = "Bit NOT NULL")]
        public bool usm_iLock
        {
            get
            {
                return this._usm_iLock;
            }
            set
            {
                if ((this._usm_iLock != value))
                {
                    this.Onusm_iLockChanging(value);
                    this.SendPropertyChanging();
                    this._usm_iLock = value;
                    this.SendPropertyChanged("usm_iLock");
                    this.Onusm_iLockChanged();
                }
            }
        }

        [Column(Storage = "_usm_cRemark", DbType = "NVarChar(200) NOT NULL", CanBeNull = false)]
        public string usm_cRemark
        {
            get
            {
                return this._usm_cRemark;
            }
            set
            {
                if ((this._usm_cRemark != value))
                {
                    this.Onusm_cRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._usm_cRemark = value;
                    this.SendPropertyChanged("usm_cRemark");
                    this.Onusm_cRemarkChanged();
                }
            }
        }

        [Column(Storage = "_usm_cAdd", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string usm_cAdd
        {
            get
            {
                return this._usm_cAdd;
            }
            set
            {
                if ((this._usm_cAdd != value))
                {
                    this.Onusm_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._usm_cAdd = value;
                    this.SendPropertyChanged("usm_cAdd");
                    this.Onusm_cAddChanged();
                }
            }
        }

        [Column(Storage = "_usm_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime usm_dAddDate
        {
            get
            {
                return this._usm_dAddDate;
            }
            set
            {
                if ((this._usm_dAddDate != value))
                {
                    this.Onusm_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._usm_dAddDate = value;
                    this.SendPropertyChanged("usm_dAddDate");
                    this.Onusm_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_usm_cLast", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string usm_cLast
        {
            get
            {
                return this._usm_cLast;
            }
            set
            {
                if ((this._usm_cLast != value))
                {
                    this.Onusm_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._usm_cLast = value;
                    this.SendPropertyChanged("usm_cLast");
                    this.Onusm_cLastChanged();
                }
            }
        }

        [Column(Storage = "_usm_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime usm_dLastDate
        {
            get
            {
                return this._usm_dLastDate;
            }
            set
            {
                if ((this._usm_dLastDate != value))
                {
                    this.Onusm_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._usm_dLastDate = value;
                    this.SendPropertyChanged("usm_dLastDate");
                    this.Onusm_dLastDateChanged();
                }
            }
        }

        [Association(Name = "Sys_UserMaster_usm_Sys_UserRoles_usr", Storage = "_Sys_UserRoles_usr", ThisKey = "usm_cUserLoginID", OtherKey = "usr_cUserLoginID")]
        public EntitySet<Sys_UserRoles_usr> Sys_UserRoles_usr
        {
            get
            {
                return this._Sys_UserRoles_usr;
            }
            set
            {
                this._Sys_UserRoles_usr.Assign(value);
            }
        }

        [Association(Name = "Sys_UserMaster_usm_Sys_UserPurview_usp", Storage = "_Sys_UserPurview_usp", ThisKey = "usm_cUserLoginID", OtherKey = "usp_cUserLoginID")]
        public EntitySet<Sys_UserPurview_usp> Sys_UserPurview_usp
        {
            get
            {
                return this._Sys_UserPurview_usp;
            }
            set
            {
                this._Sys_UserPurview_usp.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Sys_UserRoles_usr(Sys_UserRoles_usr entity)
        {
            this.SendPropertyChanging();
            entity.Sys_UserMaster_usm = this;
        }

        private void detach_Sys_UserRoles_usr(Sys_UserRoles_usr entity)
        {
            this.SendPropertyChanging();
            entity.Sys_UserMaster_usm = null;
        }

        private void attach_Sys_UserPurview_usp(Sys_UserPurview_usp entity)
        {
            this.SendPropertyChanging();
            entity.Sys_UserMaster_usm = this;
        }

        private void detach_Sys_UserPurview_usp(Sys_UserPurview_usp entity)
        {
            this.SendPropertyChanging();
            entity.Sys_UserMaster_usm = null;
        }
    }

    [Table(Name = "dbo.SourceConsumeRecord_scr")]
    public partial class SourceConsumeRecord_scr : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _scr_cRecordID;

        private string _scr_cCardNo;

        private decimal _scr_fBalance;

        private decimal _scr_fConsume;

        private System.DateTime _scr_dRecordTime;

        private int _scr_iMacNo;

        private bool _src_lIsSync;

        private string _scr_cAdd;

        private System.DateTime _scr_dAddDate;

        private EntitySet<ConsumeRecord_csr> _ConsumeRecord_csr;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onscr_cRecordIDChanging(System.Guid value);
        partial void Onscr_cRecordIDChanged();
        partial void Onscr_cCardNoChanging(string value);
        partial void Onscr_cCardNoChanged();
        partial void Onscr_fBalanceChanging(decimal value);
        partial void Onscr_fBalanceChanged();
        partial void Onscr_fConsumeChanging(decimal value);
        partial void Onscr_fConsumeChanged();
        partial void Onscr_dRecordTimeChanging(System.DateTime value);
        partial void Onscr_dRecordTimeChanged();
        partial void Onscr_iMacNoChanging(int value);
        partial void Onscr_iMacNoChanged();
        partial void Onsrc_lIsSyncChanging(bool value);
        partial void Onsrc_lIsSyncChanged();
        partial void Onscr_cAddChanging(string value);
        partial void Onscr_cAddChanged();
        partial void Onscr_dAddDateChanging(System.DateTime value);
        partial void Onscr_dAddDateChanged();
        #endregion

        public SourceConsumeRecord_scr()
        {
            this._ConsumeRecord_csr = new EntitySet<ConsumeRecord_csr>(new Action<ConsumeRecord_csr>(this.attach_ConsumeRecord_csr), new Action<ConsumeRecord_csr>(this.detach_ConsumeRecord_csr));
            OnCreated();
        }

        [Column(Storage = "_scr_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid scr_cRecordID
        {
            get
            {
                return this._scr_cRecordID;
            }
            set
            {
                if ((this._scr_cRecordID != value))
                {
                    this.Onscr_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._scr_cRecordID = value;
                    this.SendPropertyChanged("scr_cRecordID");
                    this.Onscr_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_scr_cCardNo", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string scr_cCardNo
        {
            get
            {
                return this._scr_cCardNo;
            }
            set
            {
                if ((this._scr_cCardNo != value))
                {
                    this.Onscr_cCardNoChanging(value);
                    this.SendPropertyChanging();
                    this._scr_cCardNo = value;
                    this.SendPropertyChanged("scr_cCardNo");
                    this.Onscr_cCardNoChanged();
                }
            }
        }

        [Column(Storage = "_scr_fBalance", DbType = "Decimal(18,2) NOT NULL")]
        public decimal scr_fBalance
        {
            get
            {
                return this._scr_fBalance;
            }
            set
            {
                if ((this._scr_fBalance != value))
                {
                    this.Onscr_fBalanceChanging(value);
                    this.SendPropertyChanging();
                    this._scr_fBalance = value;
                    this.SendPropertyChanged("scr_fBalance");
                    this.Onscr_fBalanceChanged();
                }
            }
        }

        [Column(Storage = "_scr_fConsume", DbType = "Decimal(18,2) NOT NULL")]
        public decimal scr_fConsume
        {
            get
            {
                return this._scr_fConsume;
            }
            set
            {
                if ((this._scr_fConsume != value))
                {
                    this.Onscr_fConsumeChanging(value);
                    this.SendPropertyChanging();
                    this._scr_fConsume = value;
                    this.SendPropertyChanged("scr_fConsume");
                    this.Onscr_fConsumeChanged();
                }
            }
        }

        [Column(Storage = "_scr_dRecordTime", DbType = "DateTime NOT NULL")]
        public System.DateTime scr_dRecordTime
        {
            get
            {
                return this._scr_dRecordTime;
            }
            set
            {
                if ((this._scr_dRecordTime != value))
                {
                    this.Onscr_dRecordTimeChanging(value);
                    this.SendPropertyChanging();
                    this._scr_dRecordTime = value;
                    this.SendPropertyChanged("scr_dRecordTime");
                    this.Onscr_dRecordTimeChanged();
                }
            }
        }

        [Column(Storage = "_scr_iMacNo", DbType = "Int NOT NULL")]
        public int scr_iMacNo
        {
            get
            {
                return this._scr_iMacNo;
            }
            set
            {
                if ((this._scr_iMacNo != value))
                {
                    this.Onscr_iMacNoChanging(value);
                    this.SendPropertyChanging();
                    this._scr_iMacNo = value;
                    this.SendPropertyChanged("scr_iMacNo");
                    this.Onscr_iMacNoChanged();
                }
            }
        }

        [Column(Storage = "_src_lIsSync", DbType = "Bit NOT NULL")]
        public bool src_lIsSync
        {
            get
            {
                return this._src_lIsSync;
            }
            set
            {
                if ((this._src_lIsSync != value))
                {
                    this.Onsrc_lIsSyncChanging(value);
                    this.SendPropertyChanging();
                    this._src_lIsSync = value;
                    this.SendPropertyChanged("src_lIsSync");
                    this.Onsrc_lIsSyncChanged();
                }
            }
        }

        [Column(Storage = "_scr_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string scr_cAdd
        {
            get
            {
                return this._scr_cAdd;
            }
            set
            {
                if ((this._scr_cAdd != value))
                {
                    this.Onscr_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._scr_cAdd = value;
                    this.SendPropertyChanged("scr_cAdd");
                    this.Onscr_cAddChanged();
                }
            }
        }

        [Column(Storage = "_scr_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime scr_dAddDate
        {
            get
            {
                return this._scr_dAddDate;
            }
            set
            {
                if ((this._scr_dAddDate != value))
                {
                    this.Onscr_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._scr_dAddDate = value;
                    this.SendPropertyChanged("scr_dAddDate");
                    this.Onscr_dAddDateChanged();
                }
            }
        }

        [Association(Name = "SourceConsumeRecord_scr_ConsumeRecord_csr", Storage = "_ConsumeRecord_csr", ThisKey = "scr_cRecordID", OtherKey = "csr_cSourceID")]
        public EntitySet<ConsumeRecord_csr> ConsumeRecord_csr
        {
            get
            {
                return this._ConsumeRecord_csr;
            }
            set
            {
                this._ConsumeRecord_csr.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ConsumeRecord_csr(ConsumeRecord_csr entity)
        {
            this.SendPropertyChanging();
            entity.SourceConsumeRecord_scr = this;
        }

        private void detach_ConsumeRecord_csr(ConsumeRecord_csr entity)
        {
            this.SendPropertyChanging();
            entity.SourceConsumeRecord_scr = null;
        }
    }

    [Table(Name = "dbo.ConsumeMachineMaster_cmm")]
    public partial class ConsumeMachineMaster_cmm : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _cmm_cRecordID;

        private int _cmm_iMacNo;

        private string _cmm_cMacName;

        private string _cmm_cIPAddr;

        private int _cmm_iPort;

        private string _cmm_cUsageType;

        private string _cmm_cStatus;

        private System.Nullable<System.DateTime> _cmm_dLastAccessTime;

        private bool _cmm_lLastAccessRes;

        private string _cmm_cDesc;

        private bool _cmm_lIsActive;

        private string _cmm_cAdd;

        private System.DateTime _cmm_dAddDate;

        private string _cmm_cLast;

        private System.DateTime _cmm_dLastDate;

        private EntitySet<ConsumeRecord_csr> _ConsumeRecord_csr;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Oncmm_cRecordIDChanging(System.Guid value);
        partial void Oncmm_cRecordIDChanged();
        partial void Oncmm_iMacNoChanging(int value);
        partial void Oncmm_iMacNoChanged();
        partial void Oncmm_cMacNameChanging(string value);
        partial void Oncmm_cMacNameChanged();
        partial void Oncmm_cIPAddrChanging(string value);
        partial void Oncmm_cIPAddrChanged();
        partial void Oncmm_iPortChanging(int value);
        partial void Oncmm_iPortChanged();
        partial void Oncmm_cUsageTypeChanging(string value);
        partial void Oncmm_cUsageTypeChanged();
        partial void Oncmm_cStatusChanging(string value);
        partial void Oncmm_cStatusChanged();
        partial void Oncmm_dLastAccessTimeChanging(System.Nullable<System.DateTime> value);
        partial void Oncmm_dLastAccessTimeChanged();
        partial void Oncmm_lLastAccessResChanging(bool value);
        partial void Oncmm_lLastAccessResChanged();
        partial void Oncmm_cDescChanging(string value);
        partial void Oncmm_cDescChanged();
        partial void Oncmm_lIsActiveChanging(bool value);
        partial void Oncmm_lIsActiveChanged();
        partial void Oncmm_cAddChanging(string value);
        partial void Oncmm_cAddChanged();
        partial void Oncmm_dAddDateChanging(System.DateTime value);
        partial void Oncmm_dAddDateChanged();
        partial void Oncmm_cLastChanging(string value);
        partial void Oncmm_cLastChanged();
        partial void Oncmm_dLastDateChanging(System.DateTime value);
        partial void Oncmm_dLastDateChanged();
        #endregion

        public ConsumeMachineMaster_cmm()
        {
            this._ConsumeRecord_csr = new EntitySet<ConsumeRecord_csr>(new Action<ConsumeRecord_csr>(this.attach_ConsumeRecord_csr), new Action<ConsumeRecord_csr>(this.detach_ConsumeRecord_csr));
            OnCreated();
        }

        [Column(Storage = "_cmm_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid cmm_cRecordID
        {
            get
            {
                return this._cmm_cRecordID;
            }
            set
            {
                if ((this._cmm_cRecordID != value))
                {
                    this.Oncmm_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_cRecordID = value;
                    this.SendPropertyChanged("cmm_cRecordID");
                    this.Oncmm_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_cmm_iMacNo", DbType = "Int NOT NULL")]
        public int cmm_iMacNo
        {
            get
            {
                return this._cmm_iMacNo;
            }
            set
            {
                if ((this._cmm_iMacNo != value))
                {
                    this.Oncmm_iMacNoChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_iMacNo = value;
                    this.SendPropertyChanged("cmm_iMacNo");
                    this.Oncmm_iMacNoChanged();
                }
            }
        }

        [Column(Storage = "_cmm_cMacName", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string cmm_cMacName
        {
            get
            {
                return this._cmm_cMacName;
            }
            set
            {
                if ((this._cmm_cMacName != value))
                {
                    this.Oncmm_cMacNameChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_cMacName = value;
                    this.SendPropertyChanged("cmm_cMacName");
                    this.Oncmm_cMacNameChanged();
                }
            }
        }

        [Column(Storage = "_cmm_cIPAddr", DbType = "VarChar(16) NOT NULL", CanBeNull = false)]
        public string cmm_cIPAddr
        {
            get
            {
                return this._cmm_cIPAddr;
            }
            set
            {
                if ((this._cmm_cIPAddr != value))
                {
                    this.Oncmm_cIPAddrChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_cIPAddr = value;
                    this.SendPropertyChanged("cmm_cIPAddr");
                    this.Oncmm_cIPAddrChanged();
                }
            }
        }

        [Column(Storage = "_cmm_iPort", DbType = "Int NOT NULL")]
        public int cmm_iPort
        {
            get
            {
                return this._cmm_iPort;
            }
            set
            {
                if ((this._cmm_iPort != value))
                {
                    this.Oncmm_iPortChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_iPort = value;
                    this.SendPropertyChanged("cmm_iPort");
                    this.Oncmm_iPortChanged();
                }
            }
        }

        [Column(Storage = "_cmm_cUsageType", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string cmm_cUsageType
        {
            get
            {
                return this._cmm_cUsageType;
            }
            set
            {
                if ((this._cmm_cUsageType != value))
                {
                    this.Oncmm_cUsageTypeChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_cUsageType = value;
                    this.SendPropertyChanged("cmm_cUsageType");
                    this.Oncmm_cUsageTypeChanged();
                }
            }
        }

        [Column(Storage = "_cmm_cStatus", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string cmm_cStatus
        {
            get
            {
                return this._cmm_cStatus;
            }
            set
            {
                if ((this._cmm_cStatus != value))
                {
                    this.Oncmm_cStatusChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_cStatus = value;
                    this.SendPropertyChanged("cmm_cStatus");
                    this.Oncmm_cStatusChanged();
                }
            }
        }

        [Column(Storage = "_cmm_dLastAccessTime", DbType = "SmallDateTime")]
        public System.Nullable<System.DateTime> cmm_dLastAccessTime
        {
            get
            {
                return this._cmm_dLastAccessTime;
            }
            set
            {
                if ((this._cmm_dLastAccessTime != value))
                {
                    this.Oncmm_dLastAccessTimeChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_dLastAccessTime = value;
                    this.SendPropertyChanged("cmm_dLastAccessTime");
                    this.Oncmm_dLastAccessTimeChanged();
                }
            }
        }

        [Column(Storage = "_cmm_lLastAccessRes", DbType = "Bit NOT NULL")]
        public bool cmm_lLastAccessRes
        {
            get
            {
                return this._cmm_lLastAccessRes;
            }
            set
            {
                if ((this._cmm_lLastAccessRes != value))
                {
                    this.Oncmm_lLastAccessResChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_lLastAccessRes = value;
                    this.SendPropertyChanged("cmm_lLastAccessRes");
                    this.Oncmm_lLastAccessResChanged();
                }
            }
        }

        [Column(Storage = "_cmm_cDesc", DbType = "NVarChar(50)")]
        public string cmm_cDesc
        {
            get
            {
                return this._cmm_cDesc;
            }
            set
            {
                if ((this._cmm_cDesc != value))
                {
                    this.Oncmm_cDescChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_cDesc = value;
                    this.SendPropertyChanged("cmm_cDesc");
                    this.Oncmm_cDescChanged();
                }
            }
        }

        [Column(Storage = "_cmm_lIsActive", DbType = "Bit NOT NULL")]
        public bool cmm_lIsActive
        {
            get
            {
                return this._cmm_lIsActive;
            }
            set
            {
                if ((this._cmm_lIsActive != value))
                {
                    this.Oncmm_lIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_lIsActive = value;
                    this.SendPropertyChanged("cmm_lIsActive");
                    this.Oncmm_lIsActiveChanged();
                }
            }
        }

        [Column(Storage = "_cmm_cAdd", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string cmm_cAdd
        {
            get
            {
                return this._cmm_cAdd;
            }
            set
            {
                if ((this._cmm_cAdd != value))
                {
                    this.Oncmm_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_cAdd = value;
                    this.SendPropertyChanged("cmm_cAdd");
                    this.Oncmm_cAddChanged();
                }
            }
        }

        [Column(Storage = "_cmm_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime cmm_dAddDate
        {
            get
            {
                return this._cmm_dAddDate;
            }
            set
            {
                if ((this._cmm_dAddDate != value))
                {
                    this.Oncmm_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_dAddDate = value;
                    this.SendPropertyChanged("cmm_dAddDate");
                    this.Oncmm_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_cmm_cLast", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string cmm_cLast
        {
            get
            {
                return this._cmm_cLast;
            }
            set
            {
                if ((this._cmm_cLast != value))
                {
                    this.Oncmm_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_cLast = value;
                    this.SendPropertyChanged("cmm_cLast");
                    this.Oncmm_cLastChanged();
                }
            }
        }

        [Column(Storage = "_cmm_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime cmm_dLastDate
        {
            get
            {
                return this._cmm_dLastDate;
            }
            set
            {
                if ((this._cmm_dLastDate != value))
                {
                    this.Oncmm_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._cmm_dLastDate = value;
                    this.SendPropertyChanged("cmm_dLastDate");
                    this.Oncmm_dLastDateChanged();
                }
            }
        }

        [Association(Name = "ConsumeMachineMaster_cmm_ConsumeRecord_csr", Storage = "_ConsumeRecord_csr", ThisKey = "cmm_cRecordID", OtherKey = "csr_cMachineID")]
        public EntitySet<ConsumeRecord_csr> ConsumeRecord_csr
        {
            get
            {
                return this._ConsumeRecord_csr;
            }
            set
            {
                this._ConsumeRecord_csr.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ConsumeRecord_csr(ConsumeRecord_csr entity)
        {
            this.SendPropertyChanging();
            entity.ConsumeMachineMaster_cmm = this;
        }

        private void detach_ConsumeRecord_csr(ConsumeRecord_csr entity)
        {
            this.SendPropertyChanging();
            entity.ConsumeMachineMaster_cmm = null;
        }
    }

    [Table(Name = "dbo.PreRechargeRecord_prr")]
    public partial class PreRechargeRecord_prr : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _prr_cRecordID;

        private System.Guid _prr_cUserID;

        private System.Nullable<System.Guid> _prr_cRCRID;

        private decimal _prr_fRechargeMoney;

        private System.DateTime _prr_dRechargeTime;

        private string _prr_cRechargeType;

        private string _prr_cStatus;

        private string _prr_cDesc;

        private string _prr_cAdd;

        private System.DateTime _prr_dAddDate;

        private string _prr_cLast;

        private System.DateTime _prr_dLastDate;

        private EntityRef<CardUserMaster_cus> _CardUserMaster_cus;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onprr_cRecordIDChanging(System.Guid value);
        partial void Onprr_cRecordIDChanged();
        partial void Onprr_cUserIDChanging(System.Guid value);
        partial void Onprr_cUserIDChanged();
        partial void Onprr_cRCRIDChanging(System.Nullable<System.Guid> value);
        partial void Onprr_cRCRIDChanged();
        partial void Onprr_fRechargeMoneyChanging(decimal value);
        partial void Onprr_fRechargeMoneyChanged();
        partial void Onprr_dRechargeTimeChanging(System.DateTime value);
        partial void Onprr_dRechargeTimeChanged();
        partial void Onprr_cRechargeTypeChanging(string value);
        partial void Onprr_cRechargeTypeChanged();
        partial void Onprr_cStatusChanging(string value);
        partial void Onprr_cStatusChanged();
        partial void Onprr_cDescChanging(string value);
        partial void Onprr_cDescChanged();
        partial void Onprr_cAddChanging(string value);
        partial void Onprr_cAddChanged();
        partial void Onprr_dAddDateChanging(System.DateTime value);
        partial void Onprr_dAddDateChanged();
        partial void Onprr_cLastChanging(string value);
        partial void Onprr_cLastChanged();
        partial void Onprr_dLastDateChanging(System.DateTime value);
        partial void Onprr_dLastDateChanged();
        #endregion

        public PreRechargeRecord_prr()
        {
            this._CardUserMaster_cus = default(EntityRef<CardUserMaster_cus>);
            OnCreated();
        }

        [Column(Storage = "_prr_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid prr_cRecordID
        {
            get
            {
                return this._prr_cRecordID;
            }
            set
            {
                if ((this._prr_cRecordID != value))
                {
                    this.Onprr_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._prr_cRecordID = value;
                    this.SendPropertyChanged("prr_cRecordID");
                    this.Onprr_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_prr_cUserID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid prr_cUserID
        {
            get
            {
                return this._prr_cUserID;
            }
            set
            {
                if ((this._prr_cUserID != value))
                {
                    if (this._CardUserMaster_cus.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onprr_cUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._prr_cUserID = value;
                    this.SendPropertyChanged("prr_cUserID");
                    this.Onprr_cUserIDChanged();
                }
            }
        }

        [Column(Storage = "_prr_cRCRID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> prr_cRCRID
        {
            get
            {
                return this._prr_cRCRID;
            }
            set
            {
                if ((this._prr_cRCRID != value))
                {
                    this.Onprr_cRCRIDChanging(value);
                    this.SendPropertyChanging();
                    this._prr_cRCRID = value;
                    this.SendPropertyChanged("prr_cRCRID");
                    this.Onprr_cRCRIDChanged();
                }
            }
        }

        [Column(Storage = "_prr_fRechargeMoney", DbType = "Decimal(18,2) NOT NULL")]
        public decimal prr_fRechargeMoney
        {
            get
            {
                return this._prr_fRechargeMoney;
            }
            set
            {
                if ((this._prr_fRechargeMoney != value))
                {
                    this.Onprr_fRechargeMoneyChanging(value);
                    this.SendPropertyChanging();
                    this._prr_fRechargeMoney = value;
                    this.SendPropertyChanged("prr_fRechargeMoney");
                    this.Onprr_fRechargeMoneyChanged();
                }
            }
        }

        [Column(Storage = "_prr_dRechargeTime", DbType = "DateTime NOT NULL")]
        public System.DateTime prr_dRechargeTime
        {
            get
            {
                return this._prr_dRechargeTime;
            }
            set
            {
                if ((this._prr_dRechargeTime != value))
                {
                    this.Onprr_dRechargeTimeChanging(value);
                    this.SendPropertyChanging();
                    this._prr_dRechargeTime = value;
                    this.SendPropertyChanged("prr_dRechargeTime");
                    this.Onprr_dRechargeTimeChanged();
                }
            }
        }

        [Column(Storage = "_prr_cRechargeType", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string prr_cRechargeType
        {
            get
            {
                return this._prr_cRechargeType;
            }
            set
            {
                if ((this._prr_cRechargeType != value))
                {
                    this.Onprr_cRechargeTypeChanging(value);
                    this.SendPropertyChanging();
                    this._prr_cRechargeType = value;
                    this.SendPropertyChanged("prr_cRechargeType");
                    this.Onprr_cRechargeTypeChanged();
                }
            }
        }

        [Column(Storage = "_prr_cStatus", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string prr_cStatus
        {
            get
            {
                return this._prr_cStatus;
            }
            set
            {
                if ((this._prr_cStatus != value))
                {
                    this.Onprr_cStatusChanging(value);
                    this.SendPropertyChanging();
                    this._prr_cStatus = value;
                    this.SendPropertyChanged("prr_cStatus");
                    this.Onprr_cStatusChanged();
                }
            }
        }

        [Column(Storage = "_prr_cDesc", DbType = "NVarChar(200)")]
        public string prr_cDesc
        {
            get
            {
                return this._prr_cDesc;
            }
            set
            {
                if ((this._prr_cDesc != value))
                {
                    this.Onprr_cDescChanging(value);
                    this.SendPropertyChanging();
                    this._prr_cDesc = value;
                    this.SendPropertyChanged("prr_cDesc");
                    this.Onprr_cDescChanged();
                }
            }
        }

        [Column(Storage = "_prr_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string prr_cAdd
        {
            get
            {
                return this._prr_cAdd;
            }
            set
            {
                if ((this._prr_cAdd != value))
                {
                    this.Onprr_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._prr_cAdd = value;
                    this.SendPropertyChanged("prr_cAdd");
                    this.Onprr_cAddChanged();
                }
            }
        }

        [Column(Storage = "_prr_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime prr_dAddDate
        {
            get
            {
                return this._prr_dAddDate;
            }
            set
            {
                if ((this._prr_dAddDate != value))
                {
                    this.Onprr_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._prr_dAddDate = value;
                    this.SendPropertyChanged("prr_dAddDate");
                    this.Onprr_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_prr_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string prr_cLast
        {
            get
            {
                return this._prr_cLast;
            }
            set
            {
                if ((this._prr_cLast != value))
                {
                    this.Onprr_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._prr_cLast = value;
                    this.SendPropertyChanged("prr_cLast");
                    this.Onprr_cLastChanged();
                }
            }
        }

        [Column(Storage = "_prr_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime prr_dLastDate
        {
            get
            {
                return this._prr_dLastDate;
            }
            set
            {
                if ((this._prr_dLastDate != value))
                {
                    this.Onprr_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._prr_dLastDate = value;
                    this.SendPropertyChanged("prr_dLastDate");
                    this.Onprr_dLastDateChanged();
                }
            }
        }

        [Association(Name = "CardUserMaster_cus_PreRechargeRecord_prr", Storage = "_CardUserMaster_cus", ThisKey = "prr_cUserID", OtherKey = "cus_cRecordID", IsForeignKey = false)]
        public CardUserMaster_cus CardUserMaster_cus
        {
            get
            {
                return this._CardUserMaster_cus.Entity;
            }
            set
            {
                CardUserMaster_cus previousValue = this._CardUserMaster_cus.Entity;
                if (((previousValue != value)
                            || (this._CardUserMaster_cus.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CardUserMaster_cus.Entity = null;
                        previousValue.PreRechargeRecord_prr.Remove(this);
                    }
                    this._CardUserMaster_cus.Entity = value;
                    if ((value != null))
                    {
                        value.PreRechargeRecord_prr.Add(this);
                        this._prr_cUserID = value.cus_cRecordID;
                    }
                    else
                    {
                        this._prr_cUserID = default(System.Guid);
                    }
                    this.SendPropertyChanged("CardUserMaster_cus");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.RechargeRecord_rcr")]
    public partial class RechargeRecord_rcr : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _rcr_cRecordID;

        private string _rcr_cCardID;

        private System.Guid _rcr_cUserID;

        private decimal _rcr_fRechargeMoney;

        private decimal _rcr_fBalance;

        private System.DateTime _rcr_dRechargeTime;

        private string _rcr_cRechargeType;

        private string _rcr_cStatus;

        private string _rcr_cDesc;

        private string _rcr_cAdd;

        private string _rcr_cLast;

        private System.DateTime _rcr_dLastDate;

        private EntityRef<ConsumeCardMaster_ccm> _ConsumeCardMaster_ccm;

        private EntityRef<CardUserMaster_cus> _CardUserMaster_cus;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onrcr_cRecordIDChanging(System.Guid value);
        partial void Onrcr_cRecordIDChanged();
        partial void Onrcr_cCardIDChanging(string value);
        partial void Onrcr_cCardIDChanged();
        partial void Onrcr_cUserIDChanging(System.Guid value);
        partial void Onrcr_cUserIDChanged();
        partial void Onrcr_fRechargeMoneyChanging(decimal value);
        partial void Onrcr_fRechargeMoneyChanged();
        partial void Onrcr_fBalanceChanging(decimal value);
        partial void Onrcr_fBalanceChanged();
        partial void Onrcr_dRechargeTimeChanging(System.DateTime value);
        partial void Onrcr_dRechargeTimeChanged();
        partial void Onrcr_cRechargeTypeChanging(string value);
        partial void Onrcr_cRechargeTypeChanged();
        partial void Onrcr_cStatusChanging(string value);
        partial void Onrcr_cStatusChanged();
        partial void Onrcr_cDescChanging(string value);
        partial void Onrcr_cDescChanged();
        partial void Onrcr_cAddChanging(string value);
        partial void Onrcr_cAddChanged();
        partial void Onrcr_cLastChanging(string value);
        partial void Onrcr_cLastChanged();
        partial void Onrcr_dLastDateChanging(System.DateTime value);
        partial void Onrcr_dLastDateChanged();
        #endregion

        public RechargeRecord_rcr()
        {
            this._ConsumeCardMaster_ccm = default(EntityRef<ConsumeCardMaster_ccm>);
            this._CardUserMaster_cus = default(EntityRef<CardUserMaster_cus>);
            OnCreated();
        }

        [Column(Storage = "_rcr_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid rcr_cRecordID
        {
            get
            {
                return this._rcr_cRecordID;
            }
            set
            {
                if ((this._rcr_cRecordID != value))
                {
                    this.Onrcr_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_cRecordID = value;
                    this.SendPropertyChanged("rcr_cRecordID");
                    this.Onrcr_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_rcr_cCardID", DbType = "VarChar(36) NOT NULL", CanBeNull = false)]
        public string rcr_cCardID
        {
            get
            {
                return this._rcr_cCardID;
            }
            set
            {
                if ((this._rcr_cCardID != value))
                {
                    if (this._ConsumeCardMaster_ccm.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onrcr_cCardIDChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_cCardID = value;
                    this.SendPropertyChanged("rcr_cCardID");
                    this.Onrcr_cCardIDChanged();
                }
            }
        }

        [Column(Storage = "_rcr_cUserID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid rcr_cUserID
        {
            get
            {
                return this._rcr_cUserID;
            }
            set
            {
                if ((this._rcr_cUserID != value))
                {
                    if (this._CardUserMaster_cus.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onrcr_cUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_cUserID = value;
                    this.SendPropertyChanged("rcr_cUserID");
                    this.Onrcr_cUserIDChanged();
                }
            }
        }

        [Column(Storage = "_rcr_fRechargeMoney", DbType = "Decimal(18,2) NOT NULL")]
        public decimal rcr_fRechargeMoney
        {
            get
            {
                return this._rcr_fRechargeMoney;
            }
            set
            {
                if ((this._rcr_fRechargeMoney != value))
                {
                    this.Onrcr_fRechargeMoneyChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_fRechargeMoney = value;
                    this.SendPropertyChanged("rcr_fRechargeMoney");
                    this.Onrcr_fRechargeMoneyChanged();
                }
            }
        }

        [Column(Storage = "_rcr_fBalance", DbType = "Decimal(18,2) NOT NULL")]
        public decimal rcr_fBalance
        {
            get
            {
                return this._rcr_fBalance;
            }
            set
            {
                if ((this._rcr_fBalance != value))
                {
                    this.Onrcr_fBalanceChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_fBalance = value;
                    this.SendPropertyChanged("rcr_fBalance");
                    this.Onrcr_fBalanceChanged();
                }
            }
        }

        [Column(Storage = "_rcr_dRechargeTime", DbType = "DateTime NOT NULL")]
        public System.DateTime rcr_dRechargeTime
        {
            get
            {
                return this._rcr_dRechargeTime;
            }
            set
            {
                if ((this._rcr_dRechargeTime != value))
                {
                    this.Onrcr_dRechargeTimeChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_dRechargeTime = value;
                    this.SendPropertyChanged("rcr_dRechargeTime");
                    this.Onrcr_dRechargeTimeChanged();
                }
            }
        }

        [Column(Storage = "_rcr_cRechargeType", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string rcr_cRechargeType
        {
            get
            {
                return this._rcr_cRechargeType;
            }
            set
            {
                if ((this._rcr_cRechargeType != value))
                {
                    this.Onrcr_cRechargeTypeChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_cRechargeType = value;
                    this.SendPropertyChanged("rcr_cRechargeType");
                    this.Onrcr_cRechargeTypeChanged();
                }
            }
        }

        [Column(Storage = "_rcr_cStatus", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string rcr_cStatus
        {
            get
            {
                return this._rcr_cStatus;
            }
            set
            {
                if ((this._rcr_cStatus != value))
                {
                    this.Onrcr_cStatusChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_cStatus = value;
                    this.SendPropertyChanged("rcr_cStatus");
                    this.Onrcr_cStatusChanged();
                }
            }
        }

        [Column(Storage = "_rcr_cDesc", DbType = "NVarChar(200)")]
        public string rcr_cDesc
        {
            get
            {
                return this._rcr_cDesc;
            }
            set
            {
                if ((this._rcr_cDesc != value))
                {
                    this.Onrcr_cDescChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_cDesc = value;
                    this.SendPropertyChanged("rcr_cDesc");
                    this.Onrcr_cDescChanged();
                }
            }
        }

        [Column(Storage = "_rcr_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string rcr_cAdd
        {
            get
            {
                return this._rcr_cAdd;
            }
            set
            {
                if ((this._rcr_cAdd != value))
                {
                    this.Onrcr_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_cAdd = value;
                    this.SendPropertyChanged("rcr_cAdd");
                    this.Onrcr_cAddChanged();
                }
            }
        }

        [Column(Storage = "_rcr_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string rcr_cLast
        {
            get
            {
                return this._rcr_cLast;
            }
            set
            {
                if ((this._rcr_cLast != value))
                {
                    this.Onrcr_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_cLast = value;
                    this.SendPropertyChanged("rcr_cLast");
                    this.Onrcr_cLastChanged();
                }
            }
        }

        [Column(Storage = "_rcr_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime rcr_dLastDate
        {
            get
            {
                return this._rcr_dLastDate;
            }
            set
            {
                if ((this._rcr_dLastDate != value))
                {
                    this.Onrcr_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._rcr_dLastDate = value;
                    this.SendPropertyChanged("rcr_dLastDate");
                    this.Onrcr_dLastDateChanged();
                }
            }
        }

        [Association(Name = "ConsumeCardMaster_ccm_RechargeRecord_rcr", Storage = "_ConsumeCardMaster_ccm", ThisKey = "rcr_cCardID", OtherKey = "ccm_cCardID", IsForeignKey = false)]
        public ConsumeCardMaster_ccm ConsumeCardMaster_ccm
        {
            get
            {
                return this._ConsumeCardMaster_ccm.Entity;
            }
            set
            {
                ConsumeCardMaster_ccm previousValue = this._ConsumeCardMaster_ccm.Entity;
                if (((previousValue != value)
                            || (this._ConsumeCardMaster_ccm.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ConsumeCardMaster_ccm.Entity = null;
                        previousValue.RechargeRecord_rcr.Remove(this);
                    }
                    this._ConsumeCardMaster_ccm.Entity = value;
                    if ((value != null))
                    {
                        value.RechargeRecord_rcr.Add(this);
                        this._rcr_cCardID = value.ccm_cCardID;
                    }
                    else
                    {
                        this._rcr_cCardID = default(string);
                    }
                    this.SendPropertyChanged("ConsumeCardMaster_ccm");
                }
            }
        }

        [Association(Name = "CardUserMaster_cus_RechargeRecord_rcr", Storage = "_CardUserMaster_cus", ThisKey = "rcr_cUserID", OtherKey = "cus_cRecordID", IsForeignKey = false)]
        public CardUserMaster_cus CardUserMaster_cus
        {
            get
            {
                return this._CardUserMaster_cus.Entity;
            }
            set
            {
                CardUserMaster_cus previousValue = this._CardUserMaster_cus.Entity;
                if (((previousValue != value)
                            || (this._CardUserMaster_cus.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CardUserMaster_cus.Entity = null;
                        previousValue.RechargeRecord_rcr.Remove(this);
                    }
                    this._CardUserMaster_cus.Entity = value;
                    if ((value != null))
                    {
                        value.RechargeRecord_rcr.Add(this);
                        this._rcr_cUserID = value.cus_cRecordID;
                    }
                    else
                    {
                        this._rcr_cUserID = default(System.Guid);
                    }
                    this.SendPropertyChanged("CardUserMaster_cus");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.ConsumeRecord_csr")]
    public partial class ConsumeRecord_csr : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _csr_cRecordID;

        private System.Guid _csr_cSourceID;

        private int _csr_iCardNo;

        private string _csr_cCardID;

        private System.Guid _csr_cMachineID;

        private decimal _csr_fConsumeMoney;

        private decimal _csr_fCardBalance;

        private System.DateTime _csr_dConsumeDate;

        private System.Guid _csr_cCardUserID;

        private string _csr_cConsumeType;

        private string _csr_cMealType;

        private bool _csr_lIsSettled;

        private System.Nullable<System.DateTime> _csr_dSettleTime;

        private string _csr_cAdd;

        private System.DateTime _csr_dAddDate;

        private EntityRef<ConsumeCardMaster_ccm> _ConsumeCardMaster_ccm;

        private EntityRef<ConsumeMachineMaster_cmm> _ConsumeMachineMaster_cmm;

        private EntityRef<SourceConsumeRecord_scr> _SourceConsumeRecord_scr;

        private EntityRef<CardUserMaster_cus> _CardUserMaster_cus;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Oncsr_cRecordIDChanging(System.Guid value);
        partial void Oncsr_cRecordIDChanged();
        partial void Oncsr_cSourceIDChanging(System.Guid value);
        partial void Oncsr_cSourceIDChanged();
        partial void Oncsr_iCardNoChanging(int value);
        partial void Oncsr_iCardNoChanged();
        partial void Oncsr_cCardIDChanging(string value);
        partial void Oncsr_cCardIDChanged();
        partial void Oncsr_cMachineIDChanging(System.Guid value);
        partial void Oncsr_cMachineIDChanged();
        partial void Oncsr_fConsumeMoneyChanging(decimal value);
        partial void Oncsr_fConsumeMoneyChanged();
        partial void Oncsr_fCardBalanceChanging(decimal value);
        partial void Oncsr_fCardBalanceChanged();
        partial void Oncsr_dConsumeDateChanging(System.DateTime value);
        partial void Oncsr_dConsumeDateChanged();
        partial void Oncsr_cCardUserIDChanging(System.Guid value);
        partial void Oncsr_cCardUserIDChanged();
        partial void Oncsr_cConsumeTypeChanging(string value);
        partial void Oncsr_cConsumeTypeChanged();
        partial void Oncsr_cMealTypeChanging(string value);
        partial void Oncsr_cMealTypeChanged();
        partial void Oncsr_lIsSettledChanging(bool value);
        partial void Oncsr_lIsSettledChanged();
        partial void Oncsr_dSettleTimeChanging(System.Nullable<System.DateTime> value);
        partial void Oncsr_dSettleTimeChanged();
        partial void Oncsr_cAddChanging(string value);
        partial void Oncsr_cAddChanged();
        partial void Oncsr_dAddDateChanging(System.DateTime value);
        partial void Oncsr_dAddDateChanged();
        #endregion

        public ConsumeRecord_csr()
        {
            this._ConsumeCardMaster_ccm = default(EntityRef<ConsumeCardMaster_ccm>);
            this._ConsumeMachineMaster_cmm = default(EntityRef<ConsumeMachineMaster_cmm>);
            this._SourceConsumeRecord_scr = default(EntityRef<SourceConsumeRecord_scr>);
            this._CardUserMaster_cus = default(EntityRef<CardUserMaster_cus>);
            OnCreated();
        }

        [Column(Storage = "_csr_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid csr_cRecordID
        {
            get
            {
                return this._csr_cRecordID;
            }
            set
            {
                if ((this._csr_cRecordID != value))
                {
                    this.Oncsr_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._csr_cRecordID = value;
                    this.SendPropertyChanged("csr_cRecordID");
                    this.Oncsr_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_csr_cSourceID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid csr_cSourceID
        {
            get
            {
                return this._csr_cSourceID;
            }
            set
            {
                if ((this._csr_cSourceID != value))
                {
                    if (this._SourceConsumeRecord_scr.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Oncsr_cSourceIDChanging(value);
                    this.SendPropertyChanging();
                    this._csr_cSourceID = value;
                    this.SendPropertyChanged("csr_cSourceID");
                    this.Oncsr_cSourceIDChanged();
                }
            }
        }

        [Column(Storage = "_csr_iCardNo", DbType = "Int NOT NULL")]
        public int csr_iCardNo
        {
            get
            {
                return this._csr_iCardNo;
            }
            set
            {
                if ((this._csr_iCardNo != value))
                {
                    this.Oncsr_iCardNoChanging(value);
                    this.SendPropertyChanging();
                    this._csr_iCardNo = value;
                    this.SendPropertyChanged("csr_iCardNo");
                    this.Oncsr_iCardNoChanged();
                }
            }
        }

        [Column(Storage = "_csr_cCardID", DbType = "VarChar(36) NOT NULL", CanBeNull = false)]
        public string csr_cCardID
        {
            get
            {
                return this._csr_cCardID;
            }
            set
            {
                if ((this._csr_cCardID != value))
                {
                    if (this._ConsumeCardMaster_ccm.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Oncsr_cCardIDChanging(value);
                    this.SendPropertyChanging();
                    this._csr_cCardID = value;
                    this.SendPropertyChanged("csr_cCardID");
                    this.Oncsr_cCardIDChanged();
                }
            }
        }

        [Column(Storage = "_csr_cMachineID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid csr_cMachineID
        {
            get
            {
                return this._csr_cMachineID;
            }
            set
            {
                if ((this._csr_cMachineID != value))
                {
                    if (this._ConsumeMachineMaster_cmm.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Oncsr_cMachineIDChanging(value);
                    this.SendPropertyChanging();
                    this._csr_cMachineID = value;
                    this.SendPropertyChanged("csr_cMachineID");
                    this.Oncsr_cMachineIDChanged();
                }
            }
        }

        [Column(Storage = "_csr_fConsumeMoney", DbType = "Decimal(18,2) NOT NULL")]
        public decimal csr_fConsumeMoney
        {
            get
            {
                return this._csr_fConsumeMoney;
            }
            set
            {
                if ((this._csr_fConsumeMoney != value))
                {
                    this.Oncsr_fConsumeMoneyChanging(value);
                    this.SendPropertyChanging();
                    this._csr_fConsumeMoney = value;
                    this.SendPropertyChanged("csr_fConsumeMoney");
                    this.Oncsr_fConsumeMoneyChanged();
                }
            }
        }

        [Column(Storage = "_csr_fCardBalance", DbType = "Decimal(18,2) NOT NULL")]
        public decimal csr_fCardBalance
        {
            get
            {
                return this._csr_fCardBalance;
            }
            set
            {
                if ((this._csr_fCardBalance != value))
                {
                    this.Oncsr_fCardBalanceChanging(value);
                    this.SendPropertyChanging();
                    this._csr_fCardBalance = value;
                    this.SendPropertyChanged("csr_fCardBalance");
                    this.Oncsr_fCardBalanceChanged();
                }
            }
        }

        [Column(Storage = "_csr_dConsumeDate", DbType = "DateTime NOT NULL")]
        public System.DateTime csr_dConsumeDate
        {
            get
            {
                return this._csr_dConsumeDate;
            }
            set
            {
                if ((this._csr_dConsumeDate != value))
                {
                    this.Oncsr_dConsumeDateChanging(value);
                    this.SendPropertyChanging();
                    this._csr_dConsumeDate = value;
                    this.SendPropertyChanged("csr_dConsumeDate");
                    this.Oncsr_dConsumeDateChanged();
                }
            }
        }

        [Column(Storage = "_csr_cCardUserID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid csr_cCardUserID
        {
            get
            {
                return this._csr_cCardUserID;
            }
            set
            {
                if ((this._csr_cCardUserID != value))
                {
                    if (this._CardUserMaster_cus.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Oncsr_cCardUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._csr_cCardUserID = value;
                    this.SendPropertyChanged("csr_cCardUserID");
                    this.Oncsr_cCardUserIDChanged();
                }
            }
        }

        [Column(Storage = "_csr_cConsumeType", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string csr_cConsumeType
        {
            get
            {
                return this._csr_cConsumeType;
            }
            set
            {
                if ((this._csr_cConsumeType != value))
                {
                    this.Oncsr_cConsumeTypeChanging(value);
                    this.SendPropertyChanging();
                    this._csr_cConsumeType = value;
                    this.SendPropertyChanged("csr_cConsumeType");
                    this.Oncsr_cConsumeTypeChanged();
                }
            }
        }

        [Column(Storage = "_csr_cMealType", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string csr_cMealType
        {
            get
            {
                return this._csr_cMealType;
            }
            set
            {
                if ((this._csr_cMealType != value))
                {
                    this.Oncsr_cMealTypeChanging(value);
                    this.SendPropertyChanging();
                    this._csr_cMealType = value;
                    this.SendPropertyChanged("csr_cMealType");
                    this.Oncsr_cMealTypeChanged();
                }
            }
        }

        [Column(Storage = "_csr_lIsSettled", DbType = "Bit NOT NULL")]
        public bool csr_lIsSettled
        {
            get
            {
                return this._csr_lIsSettled;
            }
            set
            {
                if ((this._csr_lIsSettled != value))
                {
                    this.Oncsr_lIsSettledChanging(value);
                    this.SendPropertyChanging();
                    this._csr_lIsSettled = value;
                    this.SendPropertyChanged("csr_lIsSettled");
                    this.Oncsr_lIsSettledChanged();
                }
            }
        }

        [Column(Storage = "_csr_dSettleTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> csr_dSettleTime
        {
            get
            {
                return this._csr_dSettleTime;
            }
            set
            {
                if ((this._csr_dSettleTime != value))
                {
                    this.Oncsr_dSettleTimeChanging(value);
                    this.SendPropertyChanging();
                    this._csr_dSettleTime = value;
                    this.SendPropertyChanged("csr_dSettleTime");
                    this.Oncsr_dSettleTimeChanged();
                }
            }
        }

        [Column(Storage = "_csr_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string csr_cAdd
        {
            get
            {
                return this._csr_cAdd;
            }
            set
            {
                if ((this._csr_cAdd != value))
                {
                    this.Oncsr_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._csr_cAdd = value;
                    this.SendPropertyChanged("csr_cAdd");
                    this.Oncsr_cAddChanged();
                }
            }
        }

        [Column(Storage = "_csr_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime csr_dAddDate
        {
            get
            {
                return this._csr_dAddDate;
            }
            set
            {
                if ((this._csr_dAddDate != value))
                {
                    this.Oncsr_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._csr_dAddDate = value;
                    this.SendPropertyChanged("csr_dAddDate");
                    this.Oncsr_dAddDateChanged();
                }
            }
        }

        [Association(Name = "ConsumeCardMaster_ccm_ConsumeRecord_csr", Storage = "_ConsumeCardMaster_ccm", ThisKey = "csr_cCardID", OtherKey = "ccm_cCardID", IsForeignKey = false)]
        public ConsumeCardMaster_ccm ConsumeCardMaster_ccm
        {
            get
            {
                return this._ConsumeCardMaster_ccm.Entity;
            }
            set
            {
                ConsumeCardMaster_ccm previousValue = this._ConsumeCardMaster_ccm.Entity;
                if (((previousValue != value)
                            || (this._ConsumeCardMaster_ccm.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ConsumeCardMaster_ccm.Entity = null;
                        previousValue.ConsumeRecord_csr.Remove(this);
                    }
                    this._ConsumeCardMaster_ccm.Entity = value;
                    if ((value != null))
                    {
                        value.ConsumeRecord_csr.Add(this);
                        this._csr_cCardID = value.ccm_cCardID;
                    }
                    else
                    {
                        this._csr_cCardID = default(string);
                    }
                    this.SendPropertyChanged("ConsumeCardMaster_ccm");
                }
            }
        }

        [Association(Name = "ConsumeMachineMaster_cmm_ConsumeRecord_csr", Storage = "_ConsumeMachineMaster_cmm", ThisKey = "csr_cMachineID", OtherKey = "cmm_cRecordID", IsForeignKey = false)]
        public ConsumeMachineMaster_cmm ConsumeMachineMaster_cmm
        {
            get
            {
                return this._ConsumeMachineMaster_cmm.Entity;
            }
            set
            {
                ConsumeMachineMaster_cmm previousValue = this._ConsumeMachineMaster_cmm.Entity;
                if (((previousValue != value)
                            || (this._ConsumeMachineMaster_cmm.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ConsumeMachineMaster_cmm.Entity = null;
                        previousValue.ConsumeRecord_csr.Remove(this);
                    }
                    this._ConsumeMachineMaster_cmm.Entity = value;
                    if ((value != null))
                    {
                        value.ConsumeRecord_csr.Add(this);
                        this._csr_cMachineID = value.cmm_cRecordID;
                    }
                    else
                    {
                        this._csr_cMachineID = default(System.Guid);
                    }
                    this.SendPropertyChanged("ConsumeMachineMaster_cmm");
                }
            }
        }

        [Association(Name = "SourceConsumeRecord_scr_ConsumeRecord_csr", Storage = "_SourceConsumeRecord_scr", ThisKey = "csr_cSourceID", OtherKey = "scr_cRecordID", IsForeignKey = false)]
        public SourceConsumeRecord_scr SourceConsumeRecord_scr
        {
            get
            {
                return this._SourceConsumeRecord_scr.Entity;
            }
            set
            {
                SourceConsumeRecord_scr previousValue = this._SourceConsumeRecord_scr.Entity;
                if (((previousValue != value)
                            || (this._SourceConsumeRecord_scr.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._SourceConsumeRecord_scr.Entity = null;
                        previousValue.ConsumeRecord_csr.Remove(this);
                    }
                    this._SourceConsumeRecord_scr.Entity = value;
                    if ((value != null))
                    {
                        value.ConsumeRecord_csr.Add(this);
                        this._csr_cSourceID = value.scr_cRecordID;
                    }
                    else
                    {
                        this._csr_cSourceID = default(System.Guid);
                    }
                    this.SendPropertyChanged("SourceConsumeRecord_scr");
                }
            }
        }

        [Association(Name = "CardUserMaster_cus_ConsumeRecord_csr", Storage = "_CardUserMaster_cus", ThisKey = "csr_cCardUserID", OtherKey = "cus_cRecordID", IsForeignKey = false)]
        public CardUserMaster_cus CardUserMaster_cus
        {
            get
            {
                return this._CardUserMaster_cus.Entity;
            }
            set
            {
                CardUserMaster_cus previousValue = this._CardUserMaster_cus.Entity;
                if (((previousValue != value)
                            || (this._CardUserMaster_cus.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CardUserMaster_cus.Entity = null;
                        previousValue.ConsumeRecord_csr.Remove(this);
                    }
                    this._CardUserMaster_cus.Entity = value;
                    if ((value != null))
                    {
                        value.ConsumeRecord_csr.Add(this);
                        this._csr_cCardUserID = value.cus_cRecordID;
                    }
                    else
                    {
                        this._csr_cCardUserID = default(System.Guid);
                    }
                    this.SendPropertyChanged("CardUserMaster_cus");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.MealBookingHistory_mbh")]
    public partial class MealBookingHistory_mbh : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _mbh_cRecordID;

        private string _mbh_cMealType;

        private bool _mbh_lIsSet;

        private System.Guid _mbh_cTargetID;

        private string _mbh_cTargetType;

        private System.DateTime _mbh_dMealDate;

        private decimal _mbh_fMealCost;

        private string _mbh_cAdd;

        private System.DateTime _mbh_dAddDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onmbh_cRecordIDChanging(System.Guid value);
        partial void Onmbh_cRecordIDChanged();
        partial void Onmbh_cMealTypeChanging(string value);
        partial void Onmbh_cMealTypeChanged();
        partial void Onmbh_lIsSetChanging(bool value);
        partial void Onmbh_lIsSetChanged();
        partial void Onmbh_cTargetIDChanging(System.Guid value);
        partial void Onmbh_cTargetIDChanged();
        partial void Onmbh_cTargetTypeChanging(string value);
        partial void Onmbh_cTargetTypeChanged();
        partial void Onmbh_dMealDateChanging(System.DateTime value);
        partial void Onmbh_dMealDateChanged();
        partial void Onmbh_fMealCostChanging(decimal value);
        partial void Onmbh_fMealCostChanged();
        partial void Onmbh_cAddChanging(string value);
        partial void Onmbh_cAddChanged();
        partial void Onmbh_dAddDateChanging(System.DateTime value);
        partial void Onmbh_dAddDateChanged();
        #endregion

        public MealBookingHistory_mbh()
        {
            OnCreated();
        }

        [Column(Storage = "_mbh_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid mbh_cRecordID
        {
            get
            {
                return this._mbh_cRecordID;
            }
            set
            {
                if ((this._mbh_cRecordID != value))
                {
                    this.Onmbh_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._mbh_cRecordID = value;
                    this.SendPropertyChanged("mbh_cRecordID");
                    this.Onmbh_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_mbh_cMealType", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string mbh_cMealType
        {
            get
            {
                return this._mbh_cMealType;
            }
            set
            {
                if ((this._mbh_cMealType != value))
                {
                    this.Onmbh_cMealTypeChanging(value);
                    this.SendPropertyChanging();
                    this._mbh_cMealType = value;
                    this.SendPropertyChanged("mbh_cMealType");
                    this.Onmbh_cMealTypeChanged();
                }
            }
        }

        [Column(Storage = "_mbh_lIsSet", DbType = "Bit NOT NULL")]
        public bool mbh_lIsSet
        {
            get
            {
                return this._mbh_lIsSet;
            }
            set
            {
                if ((this._mbh_lIsSet != value))
                {
                    this.Onmbh_lIsSetChanging(value);
                    this.SendPropertyChanging();
                    this._mbh_lIsSet = value;
                    this.SendPropertyChanged("mbh_lIsSet");
                    this.Onmbh_lIsSetChanged();
                }
            }
        }

        [Column(Storage = "_mbh_cTargetID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid mbh_cTargetID
        {
            get
            {
                return this._mbh_cTargetID;
            }
            set
            {
                if ((this._mbh_cTargetID != value))
                {
                    this.Onmbh_cTargetIDChanging(value);
                    this.SendPropertyChanging();
                    this._mbh_cTargetID = value;
                    this.SendPropertyChanged("mbh_cTargetID");
                    this.Onmbh_cTargetIDChanged();
                }
            }
        }

        [Column(Storage = "_mbh_cTargetType", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string mbh_cTargetType
        {
            get
            {
                return this._mbh_cTargetType;
            }
            set
            {
                if ((this._mbh_cTargetType != value))
                {
                    this.Onmbh_cTargetTypeChanging(value);
                    this.SendPropertyChanging();
                    this._mbh_cTargetType = value;
                    this.SendPropertyChanged("mbh_cTargetType");
                    this.Onmbh_cTargetTypeChanged();
                }
            }
        }

        [Column(Storage = "_mbh_dMealDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime mbh_dMealDate
        {
            get
            {
                return this._mbh_dMealDate;
            }
            set
            {
                if ((this._mbh_dMealDate != value))
                {
                    this.Onmbh_dMealDateChanging(value);
                    this.SendPropertyChanging();
                    this._mbh_dMealDate = value;
                    this.SendPropertyChanged("mbh_dMealDate");
                    this.Onmbh_dMealDateChanged();
                }
            }
        }

        [Column(Storage = "_mbh_fMealCost", DbType = "Decimal(18,2) NOT NULL")]
        public decimal mbh_fMealCost
        {
            get
            {
                return this._mbh_fMealCost;
            }
            set
            {
                if ((this._mbh_fMealCost != value))
                {
                    this.Onmbh_fMealCostChanging(value);
                    this.SendPropertyChanging();
                    this._mbh_fMealCost = value;
                    this.SendPropertyChanged("mbh_fMealCost");
                    this.Onmbh_fMealCostChanged();
                }
            }
        }

        [Column(Storage = "_mbh_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string mbh_cAdd
        {
            get
            {
                return this._mbh_cAdd;
            }
            set
            {
                if ((this._mbh_cAdd != value))
                {
                    this.Onmbh_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._mbh_cAdd = value;
                    this.SendPropertyChanged("mbh_cAdd");
                    this.Onmbh_cAddChanged();
                }
            }
        }

        [Column(Storage = "_mbh_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime mbh_dAddDate
        {
            get
            {
                return this._mbh_dAddDate;
            }
            set
            {
                if ((this._mbh_dAddDate != value))
                {
                    this.Onmbh_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._mbh_dAddDate = value;
                    this.SendPropertyChanged("mbh_dAddDate");
                    this.Onmbh_dAddDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.TimeIntervalMaster_tim")]
    public partial class TimeIntervalMaster_tim : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _tim_cRecord;

        private string _tim_cIntervalName;

        private string _tim_cIntervalType;

        private int _tim_cIntervalIndex;

        private string _tim_cBeginTime;

        private string _tim_cEndTime;

        private decimal _tim_fValue;

        private bool _tim_lIsUsed;

        private bool _tim_lIsActive;

        private string _tim_cAdd;

        private System.DateTime _tim_dAddDate;

        private string _timcLast;

        private System.DateTime _tim_dLastDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Ontim_cRecordChanging(System.Guid value);
        partial void Ontim_cRecordChanged();
        partial void Ontim_cIntervalNameChanging(string value);
        partial void Ontim_cIntervalNameChanged();
        partial void Ontim_cIntervalTypeChanging(string value);
        partial void Ontim_cIntervalTypeChanged();
        partial void Ontim_cIntervalIndexChanging(int value);
        partial void Ontim_cIntervalIndexChanged();
        partial void Ontim_cBeginTimeChanging(string value);
        partial void Ontim_cBeginTimeChanged();
        partial void Ontim_cEndTimeChanging(string value);
        partial void Ontim_cEndTimeChanged();
        partial void Ontim_fValueChanging(decimal value);
        partial void Ontim_fValueChanged();
        partial void Ontim_lIsUsedChanging(bool value);
        partial void Ontim_lIsUsedChanged();
        partial void Ontim_lIsActiveChanging(bool value);
        partial void Ontim_lIsActiveChanged();
        partial void Ontim_cAddChanging(string value);
        partial void Ontim_cAddChanged();
        partial void Ontim_dAddDateChanging(System.DateTime value);
        partial void Ontim_dAddDateChanged();
        partial void OntimcLastChanging(string value);
        partial void OntimcLastChanged();
        partial void Ontim_dLastDateChanging(System.DateTime value);
        partial void Ontim_dLastDateChanged();
        #endregion

        public TimeIntervalMaster_tim()
        {
            OnCreated();
        }

        [Column(Storage = "_tim_cRecord", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid tim_cRecord
        {
            get
            {
                return this._tim_cRecord;
            }
            set
            {
                if ((this._tim_cRecord != value))
                {
                    this.Ontim_cRecordChanging(value);
                    this.SendPropertyChanging();
                    this._tim_cRecord = value;
                    this.SendPropertyChanged("tim_cRecord");
                    this.Ontim_cRecordChanged();
                }
            }
        }

        [Column(Storage = "_tim_cIntervalName", DbType = "NVarChar(20)")]
        public string tim_cIntervalName
        {
            get
            {
                return this._tim_cIntervalName;
            }
            set
            {
                if ((this._tim_cIntervalName != value))
                {
                    this.Ontim_cIntervalNameChanging(value);
                    this.SendPropertyChanging();
                    this._tim_cIntervalName = value;
                    this.SendPropertyChanged("tim_cIntervalName");
                    this.Ontim_cIntervalNameChanged();
                }
            }
        }

        [Column(Storage = "_tim_cIntervalType", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string tim_cIntervalType
        {
            get
            {
                return this._tim_cIntervalType;
            }
            set
            {
                if ((this._tim_cIntervalType != value))
                {
                    this.Ontim_cIntervalTypeChanging(value);
                    this.SendPropertyChanging();
                    this._tim_cIntervalType = value;
                    this.SendPropertyChanged("tim_cIntervalType");
                    this.Ontim_cIntervalTypeChanged();
                }
            }
        }

        [Column(Storage = "_tim_cIntervalIndex", DbType = "Int NOT NULL")]
        public int tim_cIntervalIndex
        {
            get
            {
                return this._tim_cIntervalIndex;
            }
            set
            {
                if ((this._tim_cIntervalIndex != value))
                {
                    this.Ontim_cIntervalIndexChanging(value);
                    this.SendPropertyChanging();
                    this._tim_cIntervalIndex = value;
                    this.SendPropertyChanged("tim_cIntervalIndex");
                    this.Ontim_cIntervalIndexChanged();
                }
            }
        }

        [Column(Storage = "_tim_cBeginTime", DbType = "VarChar(8) NOT NULL", CanBeNull = false)]
        public string tim_cBeginTime
        {
            get
            {
                return this._tim_cBeginTime;
            }
            set
            {
                if ((this._tim_cBeginTime != value))
                {
                    this.Ontim_cBeginTimeChanging(value);
                    this.SendPropertyChanging();
                    this._tim_cBeginTime = value;
                    this.SendPropertyChanged("tim_cBeginTime");
                    this.Ontim_cBeginTimeChanged();
                }
            }
        }

        [Column(Storage = "_tim_cEndTime", DbType = "VarChar(8) NOT NULL", CanBeNull = false)]
        public string tim_cEndTime
        {
            get
            {
                return this._tim_cEndTime;
            }
            set
            {
                if ((this._tim_cEndTime != value))
                {
                    this.Ontim_cEndTimeChanging(value);
                    this.SendPropertyChanging();
                    this._tim_cEndTime = value;
                    this.SendPropertyChanged("tim_cEndTime");
                    this.Ontim_cEndTimeChanged();
                }
            }
        }

        [Column(Storage = "_tim_fValue", DbType = "Decimal(18,2) NOT NULL")]
        public decimal tim_fValue
        {
            get
            {
                return this._tim_fValue;
            }
            set
            {
                if ((this._tim_fValue != value))
                {
                    this.Ontim_fValueChanging(value);
                    this.SendPropertyChanging();
                    this._tim_fValue = value;
                    this.SendPropertyChanged("tim_fValue");
                    this.Ontim_fValueChanged();
                }
            }
        }

        [Column(Storage = "_tim_lIsUsed", DbType = "Bit NOT NULL")]
        public bool tim_lIsUsed
        {
            get
            {
                return this._tim_lIsUsed;
            }
            set
            {
                if ((this._tim_lIsUsed != value))
                {
                    this.Ontim_lIsUsedChanging(value);
                    this.SendPropertyChanging();
                    this._tim_lIsUsed = value;
                    this.SendPropertyChanged("tim_lIsUsed");
                    this.Ontim_lIsUsedChanged();
                }
            }
        }

        [Column(Storage = "_tim_lIsActive", DbType = "Bit NOT NULL")]
        public bool tim_lIsActive
        {
            get
            {
                return this._tim_lIsActive;
            }
            set
            {
                if ((this._tim_lIsActive != value))
                {
                    this.Ontim_lIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._tim_lIsActive = value;
                    this.SendPropertyChanged("tim_lIsActive");
                    this.Ontim_lIsActiveChanged();
                }
            }
        }

        [Column(Storage = "_tim_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string tim_cAdd
        {
            get
            {
                return this._tim_cAdd;
            }
            set
            {
                if ((this._tim_cAdd != value))
                {
                    this.Ontim_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._tim_cAdd = value;
                    this.SendPropertyChanged("tim_cAdd");
                    this.Ontim_cAddChanged();
                }
            }
        }

        [Column(Storage = "_tim_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime tim_dAddDate
        {
            get
            {
                return this._tim_dAddDate;
            }
            set
            {
                if ((this._tim_dAddDate != value))
                {
                    this.Ontim_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._tim_dAddDate = value;
                    this.SendPropertyChanged("tim_dAddDate");
                    this.Ontim_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_timcLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string timcLast
        {
            get
            {
                return this._timcLast;
            }
            set
            {
                if ((this._timcLast != value))
                {
                    this.OntimcLastChanging(value);
                    this.SendPropertyChanging();
                    this._timcLast = value;
                    this.SendPropertyChanged("timcLast");
                    this.OntimcLastChanged();
                }
            }
        }

        [Column(Storage = "_tim_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime tim_dLastDate
        {
            get
            {
                return this._tim_dLastDate;
            }
            set
            {
                if ((this._tim_dLastDate != value))
                {
                    this.Ontim_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._tim_dLastDate = value;
                    this.SendPropertyChanged("tim_dLastDate");
                    this.Ontim_dLastDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.BlacklistChangeRecord_blc")]
    public partial class BlacklistChangeRecord_blc : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _blc_cRecordID;

        private int _blc_iCardNo;

        private string _blc_cOperation;

        private string _blc_cOptReason;

        private bool _blc_lIsFinished;

        private string _blc_cAdd;

        private System.DateTime _blc_dAddDate;

        private System.Nullable<System.DateTime> _blc_dFinishDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onblc_cRecordIDChanging(System.Guid value);
        partial void Onblc_cRecordIDChanged();
        partial void Onblc_iCardNoChanging(int value);
        partial void Onblc_iCardNoChanged();
        partial void Onblc_cOperationChanging(string value);
        partial void Onblc_cOperationChanged();
        partial void Onblc_cOptReasonChanging(string value);
        partial void Onblc_cOptReasonChanged();
        partial void Onblc_lIsFinishedChanging(bool value);
        partial void Onblc_lIsFinishedChanged();
        partial void Onblc_cAddChanging(string value);
        partial void Onblc_cAddChanged();
        partial void Onblc_dAddDateChanging(System.DateTime value);
        partial void Onblc_dAddDateChanged();
        partial void Onblc_dFinishDateChanging(System.Nullable<System.DateTime> value);
        partial void Onblc_dFinishDateChanged();
        #endregion

        public BlacklistChangeRecord_blc()
        {
            OnCreated();
        }

        [Column(Storage = "_blc_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid blc_cRecordID
        {
            get
            {
                return this._blc_cRecordID;
            }
            set
            {
                if ((this._blc_cRecordID != value))
                {
                    this.Onblc_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._blc_cRecordID = value;
                    this.SendPropertyChanged("blc_cRecordID");
                    this.Onblc_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_blc_iCardNo", DbType = "Int NOT NULL")]
        public int blc_iCardNo
        {
            get
            {
                return this._blc_iCardNo;
            }
            set
            {
                if ((this._blc_iCardNo != value))
                {
                    this.Onblc_iCardNoChanging(value);
                    this.SendPropertyChanging();
                    this._blc_iCardNo = value;
                    this.SendPropertyChanged("blc_iCardNo");
                    this.Onblc_iCardNoChanged();
                }
            }
        }

        [Column(Storage = "_blc_cOperation", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string blc_cOperation
        {
            get
            {
                return this._blc_cOperation;
            }
            set
            {
                if ((this._blc_cOperation != value))
                {
                    this.Onblc_cOperationChanging(value);
                    this.SendPropertyChanging();
                    this._blc_cOperation = value;
                    this.SendPropertyChanged("blc_cOperation");
                    this.Onblc_cOperationChanged();
                }
            }
        }

        [Column(Storage = "_blc_cOptReason", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string blc_cOptReason
        {
            get
            {
                return this._blc_cOptReason;
            }
            set
            {
                if ((this._blc_cOptReason != value))
                {
                    this.Onblc_cOptReasonChanging(value);
                    this.SendPropertyChanging();
                    this._blc_cOptReason = value;
                    this.SendPropertyChanged("blc_cOptReason");
                    this.Onblc_cOptReasonChanged();
                }
            }
        }

        [Column(Storage = "_blc_lIsFinished", DbType = "Bit NOT NULL")]
        public bool blc_lIsFinished
        {
            get
            {
                return this._blc_lIsFinished;
            }
            set
            {
                if ((this._blc_lIsFinished != value))
                {
                    this.Onblc_lIsFinishedChanging(value);
                    this.SendPropertyChanging();
                    this._blc_lIsFinished = value;
                    this.SendPropertyChanged("blc_lIsFinished");
                    this.Onblc_lIsFinishedChanged();
                }
            }
        }

        [Column(Storage = "_blc_cAdd", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string blc_cAdd
        {
            get
            {
                return this._blc_cAdd;
            }
            set
            {
                if ((this._blc_cAdd != value))
                {
                    this.Onblc_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._blc_cAdd = value;
                    this.SendPropertyChanged("blc_cAdd");
                    this.Onblc_cAddChanged();
                }
            }
        }

        [Column(Storage = "_blc_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime blc_dAddDate
        {
            get
            {
                return this._blc_dAddDate;
            }
            set
            {
                if ((this._blc_dAddDate != value))
                {
                    this.Onblc_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._blc_dAddDate = value;
                    this.SendPropertyChanged("blc_dAddDate");
                    this.Onblc_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_blc_dFinishDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> blc_dFinishDate
        {
            get
            {
                return this._blc_dFinishDate;
            }
            set
            {
                if ((this._blc_dFinishDate != value))
                {
                    this.Onblc_dFinishDateChanging(value);
                    this.SendPropertyChanging();
                    this._blc_dFinishDate = value;
                    this.SendPropertyChanged("blc_dFinishDate");
                    this.Onblc_dFinishDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.Sys_FormMaster_fom")]
    public partial class Sys_FormMaster_fom : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _fom_iRecordID;

        private int _fom_iParentID;

        private int _fom_iIndex;

        private string _fom_cFormNumber;

        private string _fom_cFormDesc;

        private string _fom_cExePath;

        private string _fom_cShortCut;

        private string _fom_cRemark;

        private string _fom_cAdd;

        private System.DateTime _fom_dAddDate;

        private string _fom_cLast;

        private System.DateTime _fom_dLastDate;

        private bool _fom_lIsPopForm;

        private bool _fom_lIsPreOpen;

        private bool _fom_lVaild;

        private EntitySet<Sys_FormPurview_frp> _Sys_FormPurview_frp;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onfom_iRecordIDChanging(int value);
        partial void Onfom_iRecordIDChanged();
        partial void Onfom_iParentIDChanging(int value);
        partial void Onfom_iParentIDChanged();
        partial void Onfom_iIndexChanging(int value);
        partial void Onfom_iIndexChanged();
        partial void Onfom_cFormNumberChanging(string value);
        partial void Onfom_cFormNumberChanged();
        partial void Onfom_cFormDescChanging(string value);
        partial void Onfom_cFormDescChanged();
        partial void Onfom_cExePathChanging(string value);
        partial void Onfom_cExePathChanged();
        partial void Onfom_cShortCutChanging(string value);
        partial void Onfom_cShortCutChanged();
        partial void Onfom_cRemarkChanging(string value);
        partial void Onfom_cRemarkChanged();
        partial void Onfom_cAddChanging(string value);
        partial void Onfom_cAddChanged();
        partial void Onfom_dAddDateChanging(System.DateTime value);
        partial void Onfom_dAddDateChanged();
        partial void Onfom_cLastChanging(string value);
        partial void Onfom_cLastChanged();
        partial void Onfom_dLastDateChanging(System.DateTime value);
        partial void Onfom_dLastDateChanged();
        partial void Onfom_lIsPopFormChanging(bool value);
        partial void Onfom_lIsPopFormChanged();
        partial void Onfom_lIsPreOpenChanging(bool value);
        partial void Onfom_lIsPreOpenChanged();
        partial void Onfom_lVaildChanging(bool value);
        partial void Onfom_lVaildChanged();
        #endregion

        public Sys_FormMaster_fom()
        {
            this._Sys_FormPurview_frp = new EntitySet<Sys_FormPurview_frp>(new Action<Sys_FormPurview_frp>(this.attach_Sys_FormPurview_frp), new Action<Sys_FormPurview_frp>(this.detach_Sys_FormPurview_frp));
            OnCreated();
        }

        [Column(Storage = "_fom_iRecordID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int fom_iRecordID
        {
            get
            {
                return this._fom_iRecordID;
            }
            set
            {
                if ((this._fom_iRecordID != value))
                {
                    this.Onfom_iRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._fom_iRecordID = value;
                    this.SendPropertyChanged("fom_iRecordID");
                    this.Onfom_iRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_fom_iParentID", DbType = "Int NOT NULL")]
        public int fom_iParentID
        {
            get
            {
                return this._fom_iParentID;
            }
            set
            {
                if ((this._fom_iParentID != value))
                {
                    this.Onfom_iParentIDChanging(value);
                    this.SendPropertyChanging();
                    this._fom_iParentID = value;
                    this.SendPropertyChanged("fom_iParentID");
                    this.Onfom_iParentIDChanged();
                }
            }
        }

        [Column(Storage = "_fom_iIndex", DbType = "Int NOT NULL")]
        public int fom_iIndex
        {
            get
            {
                return this._fom_iIndex;
            }
            set
            {
                if ((this._fom_iIndex != value))
                {
                    this.Onfom_iIndexChanging(value);
                    this.SendPropertyChanging();
                    this._fom_iIndex = value;
                    this.SendPropertyChanged("fom_iIndex");
                    this.Onfom_iIndexChanged();
                }
            }
        }

        [Column(Storage = "_fom_cFormNumber", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string fom_cFormNumber
        {
            get
            {
                return this._fom_cFormNumber;
            }
            set
            {
                if ((this._fom_cFormNumber != value))
                {
                    this.Onfom_cFormNumberChanging(value);
                    this.SendPropertyChanging();
                    this._fom_cFormNumber = value;
                    this.SendPropertyChanged("fom_cFormNumber");
                    this.Onfom_cFormNumberChanged();
                }
            }
        }

        [Column(Storage = "_fom_cFormDesc", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string fom_cFormDesc
        {
            get
            {
                return this._fom_cFormDesc;
            }
            set
            {
                if ((this._fom_cFormDesc != value))
                {
                    this.Onfom_cFormDescChanging(value);
                    this.SendPropertyChanging();
                    this._fom_cFormDesc = value;
                    this.SendPropertyChanged("fom_cFormDesc");
                    this.Onfom_cFormDescChanged();
                }
            }
        }

        [Column(Storage = "_fom_cExePath", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string fom_cExePath
        {
            get
            {
                return this._fom_cExePath;
            }
            set
            {
                if ((this._fom_cExePath != value))
                {
                    this.Onfom_cExePathChanging(value);
                    this.SendPropertyChanging();
                    this._fom_cExePath = value;
                    this.SendPropertyChanged("fom_cExePath");
                    this.Onfom_cExePathChanged();
                }
            }
        }

        [Column(Storage = "_fom_cShortCut", DbType = "VarChar(50)")]
        public string fom_cShortCut
        {
            get
            {
                return this._fom_cShortCut;
            }
            set
            {
                if ((this._fom_cShortCut != value))
                {
                    this.Onfom_cShortCutChanging(value);
                    this.SendPropertyChanging();
                    this._fom_cShortCut = value;
                    this.SendPropertyChanged("fom_cShortCut");
                    this.Onfom_cShortCutChanged();
                }
            }
        }

        [Column(Storage = "_fom_cRemark", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string fom_cRemark
        {
            get
            {
                return this._fom_cRemark;
            }
            set
            {
                if ((this._fom_cRemark != value))
                {
                    this.Onfom_cRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._fom_cRemark = value;
                    this.SendPropertyChanged("fom_cRemark");
                    this.Onfom_cRemarkChanged();
                }
            }
        }

        [Column(Storage = "_fom_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string fom_cAdd
        {
            get
            {
                return this._fom_cAdd;
            }
            set
            {
                if ((this._fom_cAdd != value))
                {
                    this.Onfom_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._fom_cAdd = value;
                    this.SendPropertyChanged("fom_cAdd");
                    this.Onfom_cAddChanged();
                }
            }
        }

        [Column(Storage = "_fom_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime fom_dAddDate
        {
            get
            {
                return this._fom_dAddDate;
            }
            set
            {
                if ((this._fom_dAddDate != value))
                {
                    this.Onfom_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._fom_dAddDate = value;
                    this.SendPropertyChanged("fom_dAddDate");
                    this.Onfom_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_fom_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string fom_cLast
        {
            get
            {
                return this._fom_cLast;
            }
            set
            {
                if ((this._fom_cLast != value))
                {
                    this.Onfom_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._fom_cLast = value;
                    this.SendPropertyChanged("fom_cLast");
                    this.Onfom_cLastChanged();
                }
            }
        }

        [Column(Storage = "_fom_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime fom_dLastDate
        {
            get
            {
                return this._fom_dLastDate;
            }
            set
            {
                if ((this._fom_dLastDate != value))
                {
                    this.Onfom_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._fom_dLastDate = value;
                    this.SendPropertyChanged("fom_dLastDate");
                    this.Onfom_dLastDateChanged();
                }
            }
        }

        [Column(Storage = "_fom_lIsPopForm", DbType = "Bit NOT NULL")]
        public bool fom_lIsPopForm
        {
            get
            {
                return this._fom_lIsPopForm;
            }
            set
            {
                if ((this._fom_lIsPopForm != value))
                {
                    this.Onfom_lIsPopFormChanging(value);
                    this.SendPropertyChanging();
                    this._fom_lIsPopForm = value;
                    this.SendPropertyChanged("fom_lIsPopForm");
                    this.Onfom_lIsPopFormChanged();
                }
            }
        }

        [Column(Storage = "_fom_lIsPreOpen", DbType = "Bit NOT NULL")]
        public bool fom_lIsPreOpen
        {
            get
            {
                return this._fom_lIsPreOpen;
            }
            set
            {
                if ((this._fom_lIsPreOpen != value))
                {
                    this.Onfom_lIsPreOpenChanging(value);
                    this.SendPropertyChanging();
                    this._fom_lIsPreOpen = value;
                    this.SendPropertyChanged("fom_lIsPreOpen");
                    this.Onfom_lIsPreOpenChanged();
                }
            }
        }

        [Column(Storage = "_fom_lVaild", DbType = "Bit NOT NULL")]
        public bool fom_lVaild
        {
            get
            {
                return this._fom_lVaild;
            }
            set
            {
                if ((this._fom_lVaild != value))
                {
                    this.Onfom_lVaildChanging(value);
                    this.SendPropertyChanging();
                    this._fom_lVaild = value;
                    this.SendPropertyChanged("fom_lVaild");
                    this.Onfom_lVaildChanged();
                }
            }
        }

        [Association(Name = "Sys_FormMaster_fom_Sys_FormPurview_frp", Storage = "_Sys_FormPurview_frp", ThisKey = "fom_cFormNumber", OtherKey = "frp_cFormNumber")]
        public EntitySet<Sys_FormPurview_frp> Sys_FormPurview_frp
        {
            get
            {
                return this._Sys_FormPurview_frp;
            }
            set
            {
                this._Sys_FormPurview_frp.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Sys_FormPurview_frp(Sys_FormPurview_frp entity)
        {
            this.SendPropertyChanging();
            entity.Sys_FormMaster_fom = this;
        }

        private void detach_Sys_FormPurview_frp(Sys_FormPurview_frp entity)
        {
            this.SendPropertyChanging();
            entity.Sys_FormMaster_fom = null;
        }
    }

    [Table(Name = "dbo.PreConsumeRecord_pcs")]
    public partial class PreConsumeRecord_pcs : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _pcs_cRecordID;

        private System.Guid _pcs_cUserID;

        private System.Guid _pcs_cAccountID;

        private System.Nullable<System.Guid> _pcs_cSourceID;

        private decimal _pcs_fCost;

        private string _pcs_cConsumeType;

        private System.DateTime _pcs_dConsumeDate;

        private bool _pcs_lIsSettled;

        private System.Nullable<System.DateTime> _pcs_dSettleTime;

        private string _pcs_cAdd;

        private System.DateTime _pcs_dAddDate;

        private EntityRef<CardUserAccount_cua> _CardUserAccount_cua;

        private EntityRef<CardUserMaster_cus> _CardUserMaster_cus;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onpcs_cRecordIDChanging(System.Guid value);
        partial void Onpcs_cRecordIDChanged();
        partial void Onpcs_cUserIDChanging(System.Guid value);
        partial void Onpcs_cUserIDChanged();
        partial void Onpcs_cAccountIDChanging(System.Guid value);
        partial void Onpcs_cAccountIDChanged();
        partial void Onpcs_cSourceIDChanging(System.Nullable<System.Guid> value);
        partial void Onpcs_cSourceIDChanged();
        partial void Onpcs_fCostChanging(decimal value);
        partial void Onpcs_fCostChanged();
        partial void Onpcs_cConsumeTypeChanging(string value);
        partial void Onpcs_cConsumeTypeChanged();
        partial void Onpcs_dConsumeDateChanging(System.DateTime value);
        partial void Onpcs_dConsumeDateChanged();
        partial void Onpcs_lIsSettledChanging(bool value);
        partial void Onpcs_lIsSettledChanged();
        partial void Onpcs_dSettleTimeChanging(System.Nullable<System.DateTime> value);
        partial void Onpcs_dSettleTimeChanged();
        partial void Onpcs_cAddChanging(string value);
        partial void Onpcs_cAddChanged();
        partial void Onpcs_dAddDateChanging(System.DateTime value);
        partial void Onpcs_dAddDateChanged();
        #endregion

        public PreConsumeRecord_pcs()
        {
            this._CardUserAccount_cua = default(EntityRef<CardUserAccount_cua>);
            this._CardUserMaster_cus = default(EntityRef<CardUserMaster_cus>);
            OnCreated();
        }

        [Column(Storage = "_pcs_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid pcs_cRecordID
        {
            get
            {
                return this._pcs_cRecordID;
            }
            set
            {
                if ((this._pcs_cRecordID != value))
                {
                    this.Onpcs_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_cRecordID = value;
                    this.SendPropertyChanged("pcs_cRecordID");
                    this.Onpcs_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_pcs_cUserID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid pcs_cUserID
        {
            get
            {
                return this._pcs_cUserID;
            }
            set
            {
                if ((this._pcs_cUserID != value))
                {
                    if (this._CardUserMaster_cus.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onpcs_cUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_cUserID = value;
                    this.SendPropertyChanged("pcs_cUserID");
                    this.Onpcs_cUserIDChanged();
                }
            }
        }

        [Column(Storage = "_pcs_cAccountID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid pcs_cAccountID
        {
            get
            {
                return this._pcs_cAccountID;
            }
            set
            {
                if ((this._pcs_cAccountID != value))
                {
                    if (this._CardUserAccount_cua.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onpcs_cAccountIDChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_cAccountID = value;
                    this.SendPropertyChanged("pcs_cAccountID");
                    this.Onpcs_cAccountIDChanged();
                }
            }
        }

        [Column(Storage = "_pcs_cSourceID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> pcs_cSourceID
        {
            get
            {
                return this._pcs_cSourceID;
            }
            set
            {
                if ((this._pcs_cSourceID != value))
                {
                    this.Onpcs_cSourceIDChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_cSourceID = value;
                    this.SendPropertyChanged("pcs_cSourceID");
                    this.Onpcs_cSourceIDChanged();
                }
            }
        }

        [Column(Storage = "_pcs_fCost", DbType = "Decimal(18,2) NOT NULL")]
        public decimal pcs_fCost
        {
            get
            {
                return this._pcs_fCost;
            }
            set
            {
                if ((this._pcs_fCost != value))
                {
                    this.Onpcs_fCostChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_fCost = value;
                    this.SendPropertyChanged("pcs_fCost");
                    this.Onpcs_fCostChanged();
                }
            }
        }

        [Column(Storage = "_pcs_cConsumeType", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string pcs_cConsumeType
        {
            get
            {
                return this._pcs_cConsumeType;
            }
            set
            {
                if ((this._pcs_cConsumeType != value))
                {
                    this.Onpcs_cConsumeTypeChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_cConsumeType = value;
                    this.SendPropertyChanged("pcs_cConsumeType");
                    this.Onpcs_cConsumeTypeChanged();
                }
            }
        }

        [Column(Storage = "_pcs_dConsumeDate", DbType = "DateTime NOT NULL")]
        public System.DateTime pcs_dConsumeDate
        {
            get
            {
                return this._pcs_dConsumeDate;
            }
            set
            {
                if ((this._pcs_dConsumeDate != value))
                {
                    this.Onpcs_dConsumeDateChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_dConsumeDate = value;
                    this.SendPropertyChanged("pcs_dConsumeDate");
                    this.Onpcs_dConsumeDateChanged();
                }
            }
        }

        [Column(Storage = "_pcs_lIsSettled", DbType = "Bit NOT NULL")]
        public bool pcs_lIsSettled
        {
            get
            {
                return this._pcs_lIsSettled;
            }
            set
            {
                if ((this._pcs_lIsSettled != value))
                {
                    this.Onpcs_lIsSettledChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_lIsSettled = value;
                    this.SendPropertyChanged("pcs_lIsSettled");
                    this.Onpcs_lIsSettledChanged();
                }
            }
        }

        [Column(Storage = "_pcs_dSettleTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> pcs_dSettleTime
        {
            get
            {
                return this._pcs_dSettleTime;
            }
            set
            {
                if ((this._pcs_dSettleTime != value))
                {
                    this.Onpcs_dSettleTimeChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_dSettleTime = value;
                    this.SendPropertyChanged("pcs_dSettleTime");
                    this.Onpcs_dSettleTimeChanged();
                }
            }
        }

        [Column(Storage = "_pcs_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string pcs_cAdd
        {
            get
            {
                return this._pcs_cAdd;
            }
            set
            {
                if ((this._pcs_cAdd != value))
                {
                    this.Onpcs_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_cAdd = value;
                    this.SendPropertyChanged("pcs_cAdd");
                    this.Onpcs_cAddChanged();
                }
            }
        }

        [Column(Storage = "_pcs_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime pcs_dAddDate
        {
            get
            {
                return this._pcs_dAddDate;
            }
            set
            {
                if ((this._pcs_dAddDate != value))
                {
                    this.Onpcs_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._pcs_dAddDate = value;
                    this.SendPropertyChanged("pcs_dAddDate");
                    this.Onpcs_dAddDateChanged();
                }
            }
        }

        [Association(Name = "CardUserAccount_cua_PreConsumeRecord_pcs", Storage = "_CardUserAccount_cua", ThisKey = "pcs_cAccountID", OtherKey = "cua_cRecordID", IsForeignKey = false)]
        public CardUserAccount_cua CardUserAccount_cua
        {
            get
            {
                return this._CardUserAccount_cua.Entity;
            }
            set
            {
                CardUserAccount_cua previousValue = this._CardUserAccount_cua.Entity;
                if (((previousValue != value)
                            || (this._CardUserAccount_cua.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CardUserAccount_cua.Entity = null;
                        previousValue.PreConsumeRecord_pcs.Remove(this);
                    }
                    this._CardUserAccount_cua.Entity = value;
                    if ((value != null))
                    {
                        value.PreConsumeRecord_pcs.Add(this);
                        this._pcs_cAccountID = value.cua_cRecordID;
                    }
                    else
                    {
                        this._pcs_cAccountID = default(System.Guid);
                    }
                    this.SendPropertyChanged("CardUserAccount_cua");
                }
            }
        }

        [Association(Name = "CardUserMaster_cus_PreConsumeRecord_pcs", Storage = "_CardUserMaster_cus", ThisKey = "pcs_cUserID", OtherKey = "cus_cRecordID", IsForeignKey = false)]
        public CardUserMaster_cus CardUserMaster_cus
        {
            get
            {
                return this._CardUserMaster_cus.Entity;
            }
            set
            {
                CardUserMaster_cus previousValue = this._CardUserMaster_cus.Entity;
                if (((previousValue != value)
                            || (this._CardUserMaster_cus.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CardUserMaster_cus.Entity = null;
                        previousValue.PreConsumeRecord_pcs.Remove(this);
                    }
                    this._CardUserMaster_cus.Entity = value;
                    if ((value != null))
                    {
                        value.PreConsumeRecord_pcs.Add(this);
                        this._pcs_cUserID = value.cus_cRecordID;
                    }
                    else
                    {
                        this._pcs_cUserID = default(System.Guid);
                    }
                    this.SendPropertyChanged("CardUserMaster_cus");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.CardUserAccountDetail_cuad")]
    public partial class CardUserAccountDetail_cuad : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _cuad_cRecordID;

        private System.Guid _cuad_cCUAID;

        private decimal _cuad_fFlowMoney;

        private string _cuad_cFlowType;

        private System.Nullable<System.Guid> _cuad_cConsumeID;

        private string _cuad_cOpt;

        private System.DateTime _cuad_dOptTime;

        private EntityRef<CardUserAccount_cua> _CardUserAccount_cua;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Oncuad_cRecordIDChanging(System.Guid value);
        partial void Oncuad_cRecordIDChanged();
        partial void Oncuad_cCUAIDChanging(System.Guid value);
        partial void Oncuad_cCUAIDChanged();
        partial void Oncuad_fFlowMoneyChanging(decimal value);
        partial void Oncuad_fFlowMoneyChanged();
        partial void Oncuad_cFlowTypeChanging(string value);
        partial void Oncuad_cFlowTypeChanged();
        partial void Oncuad_cConsumeIDChanging(System.Nullable<System.Guid> value);
        partial void Oncuad_cConsumeIDChanged();
        partial void Oncuad_cOptChanging(string value);
        partial void Oncuad_cOptChanged();
        partial void Oncuad_dOptTimeChanging(System.DateTime value);
        partial void Oncuad_dOptTimeChanged();
        #endregion

        public CardUserAccountDetail_cuad()
        {
            this._CardUserAccount_cua = default(EntityRef<CardUserAccount_cua>);
            OnCreated();
        }

        [Column(Storage = "_cuad_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid cuad_cRecordID
        {
            get
            {
                return this._cuad_cRecordID;
            }
            set
            {
                if ((this._cuad_cRecordID != value))
                {
                    this.Oncuad_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._cuad_cRecordID = value;
                    this.SendPropertyChanged("cuad_cRecordID");
                    this.Oncuad_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_cuad_cCUAID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid cuad_cCUAID
        {
            get
            {
                return this._cuad_cCUAID;
            }
            set
            {
                if ((this._cuad_cCUAID != value))
                {
                    if (this._CardUserAccount_cua.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Oncuad_cCUAIDChanging(value);
                    this.SendPropertyChanging();
                    this._cuad_cCUAID = value;
                    this.SendPropertyChanged("cuad_cCUAID");
                    this.Oncuad_cCUAIDChanged();
                }
            }
        }

        [Column(Storage = "_cuad_fFlowMoney", DbType = "Decimal(18,2) NOT NULL")]
        public decimal cuad_fFlowMoney
        {
            get
            {
                return this._cuad_fFlowMoney;
            }
            set
            {
                if ((this._cuad_fFlowMoney != value))
                {
                    this.Oncuad_fFlowMoneyChanging(value);
                    this.SendPropertyChanging();
                    this._cuad_fFlowMoney = value;
                    this.SendPropertyChanged("cuad_fFlowMoney");
                    this.Oncuad_fFlowMoneyChanged();
                }
            }
        }

        [Column(Storage = "_cuad_cFlowType", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string cuad_cFlowType
        {
            get
            {
                return this._cuad_cFlowType;
            }
            set
            {
                if ((this._cuad_cFlowType != value))
                {
                    this.Oncuad_cFlowTypeChanging(value);
                    this.SendPropertyChanging();
                    this._cuad_cFlowType = value;
                    this.SendPropertyChanged("cuad_cFlowType");
                    this.Oncuad_cFlowTypeChanged();
                }
            }
        }

        [Column(Storage = "_cuad_cConsumeID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> cuad_cConsumeID
        {
            get
            {
                return this._cuad_cConsumeID;
            }
            set
            {
                if ((this._cuad_cConsumeID != value))
                {
                    this.Oncuad_cConsumeIDChanging(value);
                    this.SendPropertyChanging();
                    this._cuad_cConsumeID = value;
                    this.SendPropertyChanged("cuad_cConsumeID");
                    this.Oncuad_cConsumeIDChanged();
                }
            }
        }

        [Column(Storage = "_cuad_cOpt", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string cuad_cOpt
        {
            get
            {
                return this._cuad_cOpt;
            }
            set
            {
                if ((this._cuad_cOpt != value))
                {
                    this.Oncuad_cOptChanging(value);
                    this.SendPropertyChanging();
                    this._cuad_cOpt = value;
                    this.SendPropertyChanged("cuad_cOpt");
                    this.Oncuad_cOptChanged();
                }
            }
        }

        [Column(Storage = "_cuad_dOptTime", DbType = "DateTime NOT NULL")]
        public System.DateTime cuad_dOptTime
        {
            get
            {
                return this._cuad_dOptTime;
            }
            set
            {
                if ((this._cuad_dOptTime != value))
                {
                    this.Oncuad_dOptTimeChanging(value);
                    this.SendPropertyChanging();
                    this._cuad_dOptTime = value;
                    this.SendPropertyChanged("cuad_dOptTime");
                    this.Oncuad_dOptTimeChanged();
                }
            }
        }

        [Association(Name = "CardUserAccount_cua_CardUserAccountDetail_cuad", Storage = "_CardUserAccount_cua", ThisKey = "cuad_cCUAID", OtherKey = "cua_cRecordID", IsForeignKey = false)]
        public CardUserAccount_cua CardUserAccount_cua
        {
            get
            {
                return this._CardUserAccount_cua.Entity;
            }
            set
            {
                CardUserAccount_cua previousValue = this._CardUserAccount_cua.Entity;
                if (((previousValue != value)
                            || (this._CardUserAccount_cua.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CardUserAccount_cua.Entity = null;
                        previousValue.CardUserAccountDetail_cuad.Remove(this);
                    }
                    this._CardUserAccount_cua.Entity = value;
                    if ((value != null))
                    {
                        value.CardUserAccountDetail_cuad.Add(this);
                        this._cuad_cCUAID = value.cua_cRecordID;
                    }
                    else
                    {
                        this._cuad_cCUAID = default(System.Guid);
                    }
                    this.SendPropertyChanged("CardUserAccount_cua");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [Table(Name = "dbo.CardUserMaster_cus")]
    public partial class CardUserMaster_cus : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _cus_cRecordID;

        private string _cus_cStudentID;

        private string _cus_cChaName;

        private string _cus_cSexNum;

        private string _cus_cIdentityNum;

        private string _cus_cComeYear;

        private string _cus_cGraduationPeriod;

        private System.Nullable<System.Guid> _cus_cClassID;

        private string _cus_cContractPhone;

        private string _cus_cContractName;

        private bool _cus_lValid;

        private bool _cus_lIsGraduate;

        private string _cus_cRemark;

        private string _cus_cAdd;

        private System.DateTime _cus_dAddDate;

        private string _cus_cLast;

        private System.DateTime _cus_dLastDate;

        private string _cus_cBankAccount;

        private EntitySet<ClassMaster_csm> _ClassMaster_csm;

        private EntitySet<UserCardPair_ucp> _UserCardPair_ucp;

        private EntitySet<CardUserAccount_cua> _CardUserAccount_cua;

        private EntitySet<GradeMaster_gdm> _GradeMaster_gdm;

        private EntitySet<PreRechargeRecord_prr> _PreRechargeRecord_prr;

        private EntitySet<RechargeRecord_rcr> _RechargeRecord_rcr;

        private EntitySet<ConsumeRecord_csr> _ConsumeRecord_csr;

        private EntitySet<PreConsumeRecord_pcs> _PreConsumeRecord_pcs;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Oncus_cRecordIDChanging(System.Guid value);
        partial void Oncus_cRecordIDChanged();
        partial void Oncus_cStudentIDChanging(string value);
        partial void Oncus_cStudentIDChanged();
        partial void Oncus_cChaNameChanging(string value);
        partial void Oncus_cChaNameChanged();
        partial void Oncus_cSexNumChanging(string value);
        partial void Oncus_cSexNumChanged();
        partial void Oncus_cIdentityNumChanging(string value);
        partial void Oncus_cIdentityNumChanged();
        partial void Oncus_cComeYearChanging(string value);
        partial void Oncus_cComeYearChanged();
        partial void Oncus_cGraduationPeriodChanging(string value);
        partial void Oncus_cGraduationPeriodChanged();
        partial void Oncus_cClassIDChanging(System.Nullable<System.Guid> value);
        partial void Oncus_cClassIDChanged();
        partial void Oncus_cContractPhoneChanging(string value);
        partial void Oncus_cContractPhoneChanged();
        partial void Oncus_cContractNameChanging(string value);
        partial void Oncus_cContractNameChanged();
        partial void Oncus_lValidChanging(bool value);
        partial void Oncus_lValidChanged();
        partial void Oncus_lIsGraduateChanging(bool value);
        partial void Oncus_lIsGraduateChanged();
        partial void Oncus_cRemarkChanging(string value);
        partial void Oncus_cRemarkChanged();
        partial void Oncus_cAddChanging(string value);
        partial void Oncus_cAddChanged();
        partial void Oncus_dAddDateChanging(System.DateTime value);
        partial void Oncus_dAddDateChanged();
        partial void Oncus_cLastChanging(string value);
        partial void Oncus_cLastChanged();
        partial void Oncus_dLastDateChanging(System.DateTime value);
        partial void Oncus_dLastDateChanged();
        partial void Oncus_cBankAccountChanging(string value);
        partial void Oncus_cBankAccountChanged();
        #endregion

        public CardUserMaster_cus()
        {
            this._ClassMaster_csm = new EntitySet<ClassMaster_csm>(new Action<ClassMaster_csm>(this.attach_ClassMaster_csm), new Action<ClassMaster_csm>(this.detach_ClassMaster_csm));
            this._UserCardPair_ucp = new EntitySet<UserCardPair_ucp>(new Action<UserCardPair_ucp>(this.attach_UserCardPair_ucp), new Action<UserCardPair_ucp>(this.detach_UserCardPair_ucp));
            this._CardUserAccount_cua = new EntitySet<CardUserAccount_cua>(new Action<CardUserAccount_cua>(this.attach_CardUserAccount_cua), new Action<CardUserAccount_cua>(this.detach_CardUserAccount_cua));
            this._GradeMaster_gdm = new EntitySet<GradeMaster_gdm>(new Action<GradeMaster_gdm>(this.attach_GradeMaster_gdm), new Action<GradeMaster_gdm>(this.detach_GradeMaster_gdm));
            this._PreRechargeRecord_prr = new EntitySet<PreRechargeRecord_prr>(new Action<PreRechargeRecord_prr>(this.attach_PreRechargeRecord_prr), new Action<PreRechargeRecord_prr>(this.detach_PreRechargeRecord_prr));
            this._RechargeRecord_rcr = new EntitySet<RechargeRecord_rcr>(new Action<RechargeRecord_rcr>(this.attach_RechargeRecord_rcr), new Action<RechargeRecord_rcr>(this.detach_RechargeRecord_rcr));
            this._ConsumeRecord_csr = new EntitySet<ConsumeRecord_csr>(new Action<ConsumeRecord_csr>(this.attach_ConsumeRecord_csr), new Action<ConsumeRecord_csr>(this.detach_ConsumeRecord_csr));
            this._PreConsumeRecord_pcs = new EntitySet<PreConsumeRecord_pcs>(new Action<PreConsumeRecord_pcs>(this.attach_PreConsumeRecord_pcs), new Action<PreConsumeRecord_pcs>(this.detach_PreConsumeRecord_pcs));
            OnCreated();
        }

        [Column(Storage = "_cus_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid cus_cRecordID
        {
            get
            {
                return this._cus_cRecordID;
            }
            set
            {
                if ((this._cus_cRecordID != value))
                {
                    this.Oncus_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cRecordID = value;
                    this.SendPropertyChanged("cus_cRecordID");
                    this.Oncus_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_cus_cStudentID", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string cus_cStudentID
        {
            get
            {
                return this._cus_cStudentID;
            }
            set
            {
                if ((this._cus_cStudentID != value))
                {
                    this.Oncus_cStudentIDChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cStudentID = value;
                    this.SendPropertyChanged("cus_cStudentID");
                    this.Oncus_cStudentIDChanged();
                }
            }
        }

        [Column(Storage = "_cus_cChaName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string cus_cChaName
        {
            get
            {
                return this._cus_cChaName;
            }
            set
            {
                if ((this._cus_cChaName != value))
                {
                    this.Oncus_cChaNameChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cChaName = value;
                    this.SendPropertyChanged("cus_cChaName");
                    this.Oncus_cChaNameChanged();
                }
            }
        }

        [Column(Storage = "_cus_cSexNum", DbType = "VarChar(6) NOT NULL", CanBeNull = false)]
        public string cus_cSexNum
        {
            get
            {
                return this._cus_cSexNum;
            }
            set
            {
                if ((this._cus_cSexNum != value))
                {
                    this.Oncus_cSexNumChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cSexNum = value;
                    this.SendPropertyChanged("cus_cSexNum");
                    this.Oncus_cSexNumChanged();
                }
            }
        }

        [Column(Storage = "_cus_cIdentityNum", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string cus_cIdentityNum
        {
            get
            {
                return this._cus_cIdentityNum;
            }
            set
            {
                if ((this._cus_cIdentityNum != value))
                {
                    this.Oncus_cIdentityNumChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cIdentityNum = value;
                    this.SendPropertyChanged("cus_cIdentityNum");
                    this.Oncus_cIdentityNumChanged();
                }
            }
        }

        [Column(Storage = "_cus_cComeYear", DbType = "NVarChar(5) NOT NULL", CanBeNull = false)]
        public string cus_cComeYear
        {
            get
            {
                return this._cus_cComeYear;
            }
            set
            {
                if ((this._cus_cComeYear != value))
                {
                    this.Oncus_cComeYearChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cComeYear = value;
                    this.SendPropertyChanged("cus_cComeYear");
                    this.Oncus_cComeYearChanged();
                }
            }
        }

        [Column(Storage = "_cus_cGraduationPeriod", DbType = "NVarChar(5) NOT NULL", CanBeNull = false)]
        public string cus_cGraduationPeriod
        {
            get
            {
                return this._cus_cGraduationPeriod;
            }
            set
            {
                if ((this._cus_cGraduationPeriod != value))
                {
                    this.Oncus_cGraduationPeriodChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cGraduationPeriod = value;
                    this.SendPropertyChanged("cus_cGraduationPeriod");
                    this.Oncus_cGraduationPeriodChanged();
                }
            }
        }

        [Column(Storage = "_cus_cClassID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> cus_cClassID
        {
            get
            {
                return this._cus_cClassID;
            }
            set
            {
                if ((this._cus_cClassID != value))
                {
                    this.Oncus_cClassIDChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cClassID = value;
                    this.SendPropertyChanged("cus_cClassID");
                    this.Oncus_cClassIDChanged();
                }
            }
        }

        [Column(Storage = "_cus_cContractPhone", DbType = "VarChar(20)")]
        public string cus_cContractPhone
        {
            get
            {
                return this._cus_cContractPhone;
            }
            set
            {
                if ((this._cus_cContractPhone != value))
                {
                    this.Oncus_cContractPhoneChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cContractPhone = value;
                    this.SendPropertyChanged("cus_cContractPhone");
                    this.Oncus_cContractPhoneChanged();
                }
            }
        }

        [Column(Storage = "_cus_cContractName", DbType = "NVarChar(20)")]
        public string cus_cContractName
        {
            get
            {
                return this._cus_cContractName;
            }
            set
            {
                if ((this._cus_cContractName != value))
                {
                    this.Oncus_cContractNameChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cContractName = value;
                    this.SendPropertyChanged("cus_cContractName");
                    this.Oncus_cContractNameChanged();
                }
            }
        }

        [Column(Storage = "_cus_lValid", DbType = "Bit NOT NULL")]
        public bool cus_lValid
        {
            get
            {
                return this._cus_lValid;
            }
            set
            {
                if ((this._cus_lValid != value))
                {
                    this.Oncus_lValidChanging(value);
                    this.SendPropertyChanging();
                    this._cus_lValid = value;
                    this.SendPropertyChanged("cus_lValid");
                    this.Oncus_lValidChanged();
                }
            }
        }

        [Column(Storage = "_cus_lIsGraduate", DbType = "Bit NOT NULL")]
        public bool cus_lIsGraduate
        {
            get
            {
                return this._cus_lIsGraduate;
            }
            set
            {
                if ((this._cus_lIsGraduate != value))
                {
                    this.Oncus_lIsGraduateChanging(value);
                    this.SendPropertyChanging();
                    this._cus_lIsGraduate = value;
                    this.SendPropertyChanged("cus_lIsGraduate");
                    this.Oncus_lIsGraduateChanged();
                }
            }
        }

        [Column(Storage = "_cus_cRemark", DbType = "NVarChar(100)")]
        public string cus_cRemark
        {
            get
            {
                return this._cus_cRemark;
            }
            set
            {
                if ((this._cus_cRemark != value))
                {
                    this.Oncus_cRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cRemark = value;
                    this.SendPropertyChanged("cus_cRemark");
                    this.Oncus_cRemarkChanged();
                }
            }
        }

        [Column(Storage = "_cus_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string cus_cAdd
        {
            get
            {
                return this._cus_cAdd;
            }
            set
            {
                if ((this._cus_cAdd != value))
                {
                    this.Oncus_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cAdd = value;
                    this.SendPropertyChanged("cus_cAdd");
                    this.Oncus_cAddChanged();
                }
            }
        }

        [Column(Storage = "_cus_dAddDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime cus_dAddDate
        {
            get
            {
                return this._cus_dAddDate;
            }
            set
            {
                if ((this._cus_dAddDate != value))
                {
                    this.Oncus_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._cus_dAddDate = value;
                    this.SendPropertyChanged("cus_dAddDate");
                    this.Oncus_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_cus_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string cus_cLast
        {
            get
            {
                return this._cus_cLast;
            }
            set
            {
                if ((this._cus_cLast != value))
                {
                    this.Oncus_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cLast = value;
                    this.SendPropertyChanged("cus_cLast");
                    this.Oncus_cLastChanged();
                }
            }
        }

        [Column(Storage = "_cus_dLastDate", DbType = "SmallDateTime NOT NULL")]
        public System.DateTime cus_dLastDate
        {
            get
            {
                return this._cus_dLastDate;
            }
            set
            {
                if ((this._cus_dLastDate != value))
                {
                    this.Oncus_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._cus_dLastDate = value;
                    this.SendPropertyChanged("cus_dLastDate");
                    this.Oncus_dLastDateChanged();
                }
            }
        }

        [Column(Storage = "_cus_cBankAccount", DbType = "VarChar(30)")]
        public string cus_cBankAccount
        {
            get
            {
                return this._cus_cBankAccount;
            }
            set
            {
                if ((this._cus_cBankAccount != value))
                {
                    this.Oncus_cBankAccountChanging(value);
                    this.SendPropertyChanging();
                    this._cus_cBankAccount = value;
                    this.SendPropertyChanged("cus_cBankAccount");
                    this.Oncus_cBankAccountChanged();
                }
            }
        }

        [Association(Name = "CardUserMaster_cus_ClassMaster_csm", Storage = "_ClassMaster_csm", ThisKey = "cus_cRecordID", OtherKey = "csm_cMasterID")]
        public EntitySet<ClassMaster_csm> ClassMaster_csm
        {
            get
            {
                return this._ClassMaster_csm;
            }
            set
            {
                this._ClassMaster_csm.Assign(value);
            }
        }

        [Association(Name = "CardUserMaster_cus_UserCardPair_ucp", Storage = "_UserCardPair_ucp", ThisKey = "cus_cRecordID", OtherKey = "ucp_cCUSID")]
        public EntitySet<UserCardPair_ucp> UserCardPair_ucp
        {
            get
            {
                return this._UserCardPair_ucp;
            }
            set
            {
                this._UserCardPair_ucp.Assign(value);
            }
        }

        [Association(Name = "CardUserMaster_cus_CardUserAccount_cua", Storage = "_CardUserAccount_cua", ThisKey = "cus_cRecordID", OtherKey = "cua_cCUSID")]
        public EntitySet<CardUserAccount_cua> CardUserAccount_cua
        {
            get
            {
                return this._CardUserAccount_cua;
            }
            set
            {
                this._CardUserAccount_cua.Assign(value);
            }
        }

        [Association(Name = "CardUserMaster_cus_GradeMaster_gdm", Storage = "_GradeMaster_gdm", ThisKey = "cus_cRecordID", OtherKey = "gdm_cPraepostorID")]
        public EntitySet<GradeMaster_gdm> GradeMaster_gdm
        {
            get
            {
                return this._GradeMaster_gdm;
            }
            set
            {
                this._GradeMaster_gdm.Assign(value);
            }
        }

        [Association(Name = "CardUserMaster_cus_PreRechargeRecord_prr", Storage = "_PreRechargeRecord_prr", ThisKey = "cus_cRecordID", OtherKey = "prr_cUserID")]
        public EntitySet<PreRechargeRecord_prr> PreRechargeRecord_prr
        {
            get
            {
                return this._PreRechargeRecord_prr;
            }
            set
            {
                this._PreRechargeRecord_prr.Assign(value);
            }
        }

        [Association(Name = "CardUserMaster_cus_RechargeRecord_rcr", Storage = "_RechargeRecord_rcr", ThisKey = "cus_cRecordID", OtherKey = "rcr_cUserID")]
        public EntitySet<RechargeRecord_rcr> RechargeRecord_rcr
        {
            get
            {
                return this._RechargeRecord_rcr;
            }
            set
            {
                this._RechargeRecord_rcr.Assign(value);
            }
        }

        [Association(Name = "CardUserMaster_cus_ConsumeRecord_csr", Storage = "_ConsumeRecord_csr", ThisKey = "cus_cRecordID", OtherKey = "csr_cCardUserID")]
        public EntitySet<ConsumeRecord_csr> ConsumeRecord_csr
        {
            get
            {
                return this._ConsumeRecord_csr;
            }
            set
            {
                this._ConsumeRecord_csr.Assign(value);
            }
        }

        [Association(Name = "CardUserMaster_cus_PreConsumeRecord_pcs", Storage = "_PreConsumeRecord_pcs", ThisKey = "cus_cRecordID", OtherKey = "pcs_cUserID")]
        public EntitySet<PreConsumeRecord_pcs> PreConsumeRecord_pcs
        {
            get
            {
                return this._PreConsumeRecord_pcs;
            }
            set
            {
                this._PreConsumeRecord_pcs.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ClassMaster_csm(ClassMaster_csm entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = this;
        }

        private void detach_ClassMaster_csm(ClassMaster_csm entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = null;
        }

        private void attach_UserCardPair_ucp(UserCardPair_ucp entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = this;
        }

        private void detach_UserCardPair_ucp(UserCardPair_ucp entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = null;
        }

        private void attach_CardUserAccount_cua(CardUserAccount_cua entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = this;
        }

        private void detach_CardUserAccount_cua(CardUserAccount_cua entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = null;
        }

        private void attach_GradeMaster_gdm(GradeMaster_gdm entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = this;
        }

        private void detach_GradeMaster_gdm(GradeMaster_gdm entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = null;
        }

        private void attach_PreRechargeRecord_prr(PreRechargeRecord_prr entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = this;
        }

        private void detach_PreRechargeRecord_prr(PreRechargeRecord_prr entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = null;
        }

        private void attach_RechargeRecord_rcr(RechargeRecord_rcr entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = this;
        }

        private void detach_RechargeRecord_rcr(RechargeRecord_rcr entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = null;
        }

        private void attach_ConsumeRecord_csr(ConsumeRecord_csr entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = this;
        }

        private void detach_ConsumeRecord_csr(ConsumeRecord_csr entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = null;
        }

        private void attach_PreConsumeRecord_pcs(PreConsumeRecord_pcs entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = this;
        }

        private void detach_PreConsumeRecord_pcs(PreConsumeRecord_pcs entity)
        {
            this.SendPropertyChanging();
            entity.CardUserMaster_cus = null;
        }
    }

    [Table(Name = "dbo.PayRecord_prd")]
    public partial class PayRecord_prd : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _prd_cRecordID;

        private string _prd_cPayType;

        private decimal _prd_fPayMoney;

        private int _prd_iPayCount;

        private System.Guid _prd_cDepartmentID;

        private string _prd_cCertificateID;

        private System.DateTime _prd_dCertificateDate;

        private string _prd_cAdd;

        private System.DateTime _prd_dAddDate;

        private string _prd_cLast;

        private System.DateTime _prd_dLastDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onprd_cRecordIDChanging(System.Guid value);
        partial void Onprd_cRecordIDChanged();
        partial void Onprd_cPayTypeChanging(string value);
        partial void Onprd_cPayTypeChanged();
        partial void Onprd_fPayMoneyChanging(decimal value);
        partial void Onprd_fPayMoneyChanged();
        partial void Onprd_iPayCountChanging(int value);
        partial void Onprd_iPayCountChanged();
        partial void Onprd_cDepartmentIDChanging(System.Guid value);
        partial void Onprd_cDepartmentIDChanged();
        partial void Onprd_cCertificateIDChanging(string value);
        partial void Onprd_cCertificateIDChanged();
        partial void Onprd_dCertificateDateChanging(System.DateTime value);
        partial void Onprd_dCertificateDateChanged();
        partial void Onprd_cAddChanging(string value);
        partial void Onprd_cAddChanged();
        partial void Onprd_dAddDateChanging(System.DateTime value);
        partial void Onprd_dAddDateChanged();
        partial void Onprd_cLastChanging(string value);
        partial void Onprd_cLastChanged();
        partial void Onprd_dLastDateChanging(System.DateTime value);
        partial void Onprd_dLastDateChanged();
        #endregion

        public PayRecord_prd()
        {
            OnCreated();
        }

        [Column(Storage = "_prd_cRecordID", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid prd_cRecordID
        {
            get
            {
                return this._prd_cRecordID;
            }
            set
            {
                if ((this._prd_cRecordID != value))
                {
                    this.Onprd_cRecordIDChanging(value);
                    this.SendPropertyChanging();
                    this._prd_cRecordID = value;
                    this.SendPropertyChanged("prd_cRecordID");
                    this.Onprd_cRecordIDChanged();
                }
            }
        }

        [Column(Storage = "_prd_cPayType", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string prd_cPayType
        {
            get
            {
                return this._prd_cPayType;
            }
            set
            {
                if ((this._prd_cPayType != value))
                {
                    this.Onprd_cPayTypeChanging(value);
                    this.SendPropertyChanging();
                    this._prd_cPayType = value;
                    this.SendPropertyChanged("prd_cPayType");
                    this.Onprd_cPayTypeChanged();
                }
            }
        }

        [Column(Storage = "_prd_fPayMoney", DbType = "Decimal(18,2) NOT NULL")]
        public decimal prd_fPayMoney
        {
            get
            {
                return this._prd_fPayMoney;
            }
            set
            {
                if ((this._prd_fPayMoney != value))
                {
                    this.Onprd_fPayMoneyChanging(value);
                    this.SendPropertyChanging();
                    this._prd_fPayMoney = value;
                    this.SendPropertyChanged("prd_fPayMoney");
                    this.Onprd_fPayMoneyChanged();
                }
            }
        }

        [Column(Storage = "_prd_iPayCount", DbType = "Int NOT NULL")]
        public int prd_iPayCount
        {
            get
            {
                return this._prd_iPayCount;
            }
            set
            {
                if ((this._prd_iPayCount != value))
                {
                    this.Onprd_iPayCountChanging(value);
                    this.SendPropertyChanging();
                    this._prd_iPayCount = value;
                    this.SendPropertyChanged("prd_iPayCount");
                    this.Onprd_iPayCountChanged();
                }
            }
        }

        [Column(Storage = "_prd_cDepartmentID", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid prd_cDepartmentID
        {
            get
            {
                return this._prd_cDepartmentID;
            }
            set
            {
                if ((this._prd_cDepartmentID != value))
                {
                    this.Onprd_cDepartmentIDChanging(value);
                    this.SendPropertyChanging();
                    this._prd_cDepartmentID = value;
                    this.SendPropertyChanged("prd_cDepartmentID");
                    this.Onprd_cDepartmentIDChanged();
                }
            }
        }

        [Column(Storage = "_prd_cCertificateID", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string prd_cCertificateID
        {
            get
            {
                return this._prd_cCertificateID;
            }
            set
            {
                if ((this._prd_cCertificateID != value))
                {
                    this.Onprd_cCertificateIDChanging(value);
                    this.SendPropertyChanging();
                    this._prd_cCertificateID = value;
                    this.SendPropertyChanged("prd_cCertificateID");
                    this.Onprd_cCertificateIDChanged();
                }
            }
        }

        [Column(Storage = "_prd_dCertificateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime prd_dCertificateDate
        {
            get
            {
                return this._prd_dCertificateDate;
            }
            set
            {
                if ((this._prd_dCertificateDate != value))
                {
                    this.Onprd_dCertificateDateChanging(value);
                    this.SendPropertyChanging();
                    this._prd_dCertificateDate = value;
                    this.SendPropertyChanged("prd_dCertificateDate");
                    this.Onprd_dCertificateDateChanged();
                }
            }
        }

        [Column(Storage = "_prd_cAdd", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string prd_cAdd
        {
            get
            {
                return this._prd_cAdd;
            }
            set
            {
                if ((this._prd_cAdd != value))
                {
                    this.Onprd_cAddChanging(value);
                    this.SendPropertyChanging();
                    this._prd_cAdd = value;
                    this.SendPropertyChanged("prd_cAdd");
                    this.Onprd_cAddChanged();
                }
            }
        }

        [Column(Storage = "_prd_dAddDate", DbType = "DateTime NOT NULL")]
        public System.DateTime prd_dAddDate
        {
            get
            {
                return this._prd_dAddDate;
            }
            set
            {
                if ((this._prd_dAddDate != value))
                {
                    this.Onprd_dAddDateChanging(value);
                    this.SendPropertyChanging();
                    this._prd_dAddDate = value;
                    this.SendPropertyChanged("prd_dAddDate");
                    this.Onprd_dAddDateChanged();
                }
            }
        }

        [Column(Storage = "_prd_cLast", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string prd_cLast
        {
            get
            {
                return this._prd_cLast;
            }
            set
            {
                if ((this._prd_cLast != value))
                {
                    this.Onprd_cLastChanging(value);
                    this.SendPropertyChanging();
                    this._prd_cLast = value;
                    this.SendPropertyChanged("prd_cLast");
                    this.Onprd_cLastChanged();
                }
            }
        }

        [Column(Storage = "_prd_dLastDate", DbType = "DateTime NOT NULL")]
        public System.DateTime prd_dLastDate
        {
            get
            {
                return this._prd_dLastDate;
            }
            set
            {
                if ((this._prd_dLastDate != value))
                {
                    this.Onprd_dLastDateChanging(value);
                    this.SendPropertyChanging();
                    this._prd_dLastDate = value;
                    this.SendPropertyChanged("prd_dLastDate");
                    this.Onprd_dLastDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class usp_GetBookingMealReport_个结果
    {

        private string _className;

        private string _gradeName;

        private System.Nullable<int> _userAmount;

        private string _bookingDate;

        private System.Nullable<int> _breakfast_Est;

        private System.Nullable<int> _lunch_Est;

        private System.Nullable<int> _dinner_Est;

        public usp_GetBookingMealReport_个结果()
        {
        }

        [Column(Storage = "_className", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string className
        {
            get
            {
                return this._className;
            }
            set
            {
                if ((this._className != value))
                {
                    this._className = value;
                }
            }
        }

        [Column(Storage = "_gradeName", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string gradeName
        {
            get
            {
                return this._gradeName;
            }
            set
            {
                if ((this._gradeName != value))
                {
                    this._gradeName = value;
                }
            }
        }

        [Column(Storage = "_userAmount", DbType = "Int")]
        public System.Nullable<int> userAmount
        {
            get
            {
                return this._userAmount;
            }
            set
            {
                if ((this._userAmount != value))
                {
                    this._userAmount = value;
                }
            }
        }

        [Column(Storage = "_bookingDate", DbType = "VarChar(100)")]
        public string bookingDate
        {
            get
            {
                return this._bookingDate;
            }
            set
            {
                if ((this._bookingDate != value))
                {
                    this._bookingDate = value;
                }
            }
        }

        [Column(Storage = "_breakfast_Est", DbType = "Int")]
        public System.Nullable<int> breakfast_Est
        {
            get
            {
                return this._breakfast_Est;
            }
            set
            {
                if ((this._breakfast_Est != value))
                {
                    this._breakfast_Est = value;
                }
            }
        }

        [Column(Storage = "_lunch_Est", DbType = "Int")]
        public System.Nullable<int> lunch_Est
        {
            get
            {
                return this._lunch_Est;
            }
            set
            {
                if ((this._lunch_Est != value))
                {
                    this._lunch_Est = value;
                }
            }
        }

        [Column(Storage = "_dinner_Est", DbType = "Int")]
        public System.Nullable<int> dinner_Est
        {
            get
            {
                return this._dinner_Est;
            }
            set
            {
                if ((this._dinner_Est != value))
                {
                    this._dinner_Est = value;
                }
            }
        }
    }
}
#pragma warning restore 1591
